
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftLTGEQEQNEQrightUMINUSAND ASSERT ASSIGN BIT COMMENT ELSE EQ FALSE GEQ GT ID IF INT LBRACE LBRACKET LEQ LPAREN LT MINUS MULT NEQ NOT NUMBER OR PLUS RBRACE RBRACKET RPAREN TRUE\n\t\tprogram : assign\n\t\t\t\t| expr\n\t\t\t\t| assertexpr\n\t\t\n\t\tassertexpr : ASSERT LPAREN expr EQ expr RPAREN\n\t\tassign : ID ASSIGN expr\n\t\t\n\t\texpr : expr PLUS term\n\t\t\t | expr MINUS term\n\t\t\t | expr MULT term\n\t\t\t | expr LT expr\n\t\t\t | expr GT expr\n\t\t\t | expr LEQ expr\n\t\t\t | expr GEQ expr\n\t\t\t | expr NEQ expr\n\t\t\t | expr EQ expr\n\t\t\t | expr AND expr\n\t\t\t | expr OR expr\n\t\t\t | term\n\t\texpr : MINUS expr %prec UMINUS\n\t\tterm : NUMBER\n\t\t\t | ID\n\t\t\t | NOT term\n\t\t\t | LPAREN expr RPAREN\n\t\t'
    
_lr_action_items = {'OR':([1,5,8,11,13,14,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,],[-20,-17,17,-19,-20,-18,17,-21,17,17,-22,-16,17,-6,-14,-7,-8,-13,17,-9,-15,-12,-14,]),'$end':([1,3,4,5,8,9,11,13,14,28,29,31,32,33,34,35,36,37,38,39,40,41,42,45,],[-20,-1,-3,-17,-2,0,-19,-20,-18,-21,-5,-22,-16,-11,-6,-14,-7,-8,-13,-10,-9,-15,-12,-4,]),'ID':([0,2,7,10,12,15,17,18,19,20,21,22,23,24,25,26,27,43,],[1,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'PLUS':([1,5,8,11,13,14,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,],[-20,-17,19,-19,-20,-18,19,-21,19,19,-22,-16,19,-6,-14,-7,-8,-13,19,-9,-15,-12,-14,]),'LEQ':([1,5,8,11,13,14,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,],[-20,-17,18,-19,-20,-18,18,-21,18,18,-22,-16,18,-6,-14,-7,-8,-13,18,-9,-15,-12,-14,]),'EQ':([1,5,8,11,13,14,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,],[-20,-17,20,-19,-20,-18,20,-21,20,43,-22,20,20,-6,-14,-7,-8,-13,20,-9,20,-12,-14,]),'MINUS':([0,1,2,5,7,8,11,12,13,14,15,16,17,18,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[2,-20,2,-17,2,21,-19,2,-20,-18,2,21,2,2,2,2,2,2,2,2,-21,21,21,-22,-16,21,-6,-14,-7,-8,-13,21,-9,-15,-12,2,-14,]),'LPAREN':([0,2,6,7,10,12,15,17,18,19,20,21,22,23,24,25,26,27,43,],[7,7,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'MULT':([1,5,8,11,13,14,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,],[-20,-17,22,-19,-20,-18,22,-21,22,22,-22,-16,22,-6,-14,-7,-8,-13,22,-9,-15,-12,-14,]),'NEQ':([1,5,8,11,13,14,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,],[-20,-17,23,-19,-20,-18,23,-21,23,23,-22,23,23,-6,-14,-7,-8,-13,23,-9,23,-12,-14,]),'AND':([1,5,8,11,13,14,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,],[-20,-17,26,-19,-20,-18,26,-21,26,26,-22,26,26,-6,-14,-7,-8,-13,26,-9,-15,-12,-14,]),'RPAREN':([5,11,13,14,16,28,31,32,33,34,35,36,37,38,39,40,41,42,44,],[-17,-19,-20,-18,31,-21,-22,-16,-11,-6,-14,-7,-8,-13,-10,-9,-15,-12,45,]),'GT':([1,5,8,11,13,14,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,],[-20,-17,24,-19,-20,-18,24,-21,24,24,-22,-16,24,-6,-14,-7,-8,-13,24,-9,-15,-12,-14,]),'ASSIGN':([1,],[12,]),'LT':([1,5,8,11,13,14,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,],[-20,-17,25,-19,-20,-18,25,-21,25,25,-22,25,25,-6,-14,-7,-8,-13,25,-9,25,-12,-14,]),'ASSERT':([0,],[6,]),'NUMBER':([0,2,7,10,12,15,17,18,19,20,21,22,23,24,25,26,27,43,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'NOT':([0,2,7,10,12,15,17,18,19,20,21,22,23,24,25,26,27,43,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'GEQ':([1,5,8,11,13,14,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,],[-20,-17,27,-19,-20,-18,27,-21,27,27,-22,27,27,-6,-14,-7,-8,-13,27,-9,27,-12,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,2,7,12,15,17,18,20,23,24,25,26,27,43,],[8,14,16,29,30,32,33,35,38,39,40,41,42,44,]),'assign':([0,],[3,]),'program':([0,],[9,]),'term':([0,2,7,10,12,15,17,18,19,20,21,22,23,24,25,26,27,43,],[5,5,5,28,5,5,5,5,34,5,36,37,5,5,5,5,5,5,]),'assertexpr':([0,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> assign','program',1,'p_program','parser.py',30),
  ('program -> expr','program',1,'p_program','parser.py',31),
  ('program -> assertexpr','program',1,'p_program','parser.py',32),
  ('assertexpr -> ASSERT LPAREN expr EQ expr RPAREN','assertexpr',6,'p_assertexpr','parser.py',38),
  ('assign -> ID ASSIGN expr','assign',3,'p_assign','parser.py',56),
  ('expr -> expr PLUS term','expr',3,'p_expr','parser.py',78),
  ('expr -> expr MINUS term','expr',3,'p_expr','parser.py',79),
  ('expr -> expr MULT term','expr',3,'p_expr','parser.py',80),
  ('expr -> expr LT expr','expr',3,'p_expr','parser.py',81),
  ('expr -> expr GT expr','expr',3,'p_expr','parser.py',82),
  ('expr -> expr LEQ expr','expr',3,'p_expr','parser.py',83),
  ('expr -> expr GEQ expr','expr',3,'p_expr','parser.py',84),
  ('expr -> expr NEQ expr','expr',3,'p_expr','parser.py',85),
  ('expr -> expr EQ expr','expr',3,'p_expr','parser.py',86),
  ('expr -> expr AND expr','expr',3,'p_expr','parser.py',87),
  ('expr -> expr OR expr','expr',3,'p_expr','parser.py',88),
  ('expr -> term','expr',1,'p_expr','parser.py',89),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','parser.py',105),
  ('term -> NUMBER','term',1,'p_term_num_id','parser.py',114),
  ('term -> ID','term',1,'p_term_num_id','parser.py',115),
  ('term -> NOT term','term',2,'p_term_num_id','parser.py',116),
  ('term -> LPAREN expr RPAREN','term',3,'p_term_num_id','parser.py',117),
]
