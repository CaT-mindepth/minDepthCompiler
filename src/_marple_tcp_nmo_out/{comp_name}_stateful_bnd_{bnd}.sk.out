SKETCH version 1.7.6
Benchmark = _marple_tcp_nmo_out/{comp_name}_stateful_bnd_{bnd}.sk
/* BEGIN PACKAGE ANONYMOUS*/
/*{comp_n.._{bnd}.sk:79*/

void bool_op (int opcode, bit o1, bit o2, ref bit _out0)/*{comp_n.._{bnd}.sk:79*/
{
  if(opcode == 0)/*{comp_n.._{bnd}.sk:80*/
  {
    _out0 = 0;
    return;
  }
  if(opcode == 1)/*{comp_n.._{bnd}.sk:83*/
  {
    _out0 = !(o1 | o2);
    return;
  }
  if(opcode == 2)/*{comp_n.._{bnd}.sk:86*/
  {
    _out0 = (!(o1)) & o2;
    return;
  }
  if(opcode == 3)/*{comp_n.._{bnd}.sk:89*/
  {
    _out0 = !(o1);
    return;
  }
  if(opcode == 4)/*{comp_n.._{bnd}.sk:92*/
  {
    _out0 = o1 & (!(o2));
    return;
  }
  if(opcode == 5)/*{comp_n.._{bnd}.sk:95*/
  {
    _out0 = !(o2);
    return;
  }
  if(opcode == 6)/*{comp_n.._{bnd}.sk:98*/
  {
    _out0 = o1 & o2;
    return;
  }
  if(opcode == 7)/*{comp_n.._{bnd}.sk:102*/
  {
    _out0 = !(o1 & o2);
    return;
  }
  if(opcode == 8)/*{comp_n.._{bnd}.sk:105*/
  {
    _out0 = o1 & o2;
    return;
  }
  if(opcode == 9)/*{comp_n.._{bnd}.sk:108*/
  {
    _out0 = !(o1 & o2);
    return;
  }
  if(opcode == 10)/*{comp_n.._{bnd}.sk:112*/
  {
    _out0 = o2;
    return;
  }
  if(opcode == 11)/*{comp_n.._{bnd}.sk:115*/
  {
    _out0 = (!(o1)) | o2;
    return;
  }
  if(opcode == 12)/*{comp_n.._{bnd}.sk:118*/
  {
    _out0 = o1;
    return;
  }
  if(opcode == 13)/*{comp_n.._{bnd}.sk:121*/
  {
    _out0 = o1 | (!(o2));
    return;
  }
  if(opcode == 14)/*{comp_n.._{bnd}.sk:124*/
  {
    _out0 = o1 | o2;
    return;
  }
  else
  {
    _out0 = 1;
    return;
  }
}
/*{comp_n.._{bnd}.sk:230*/

void comp_0 (int maxseq_0, int p_tcpseq0, ref int[2] _out0)/*{comp_n.._{bnd}.sk:230*/
{
  _out0 = ((int[2])0);
  int p_maxseq2 = (!(p_tcpseq0 < maxseq_0) ? p_tcpseq0 : maxseq_0);
  _out0[0] = p_maxseq2;
  _out0[1] = maxseq_0;
  return;
}
/*{comp_n.._{bnd}.sk:134*/

void compute_alu (int op, int o1, int o2, ref int _out0)/*{comp_n.._{bnd}.sk:134*/
{
  if(op == 0)/*{comp_n.._{bnd}.sk:135*/
  {
    _out0 = o1 + o2;
    return;
  }
  if(op == 1)/*{comp_n.._{bnd}.sk:138*/
  {
    _out0 = o1 - o2;
    return;
  }
  if(op == 2)/*{comp_n.._{bnd}.sk:141*/
  {
    _out0 = o2 - o1;
    return;
  }
  if(op == 3)/*{comp_n.._{bnd}.sk:144*/
  {
    _out0 = o2;
    return;
  }
  if(op == 4)/*{comp_n.._{bnd}.sk:147*/
  {
    _out0 = o1;
    return;
  }
  if(op == 5)/*{comp_n.._{bnd}.sk:150*/
  {
    _out0 = 0;
    return;
  }
  else
  {
    _out0 = 1;
    return;
  }
}
/*{comp_n.._{bnd}.sk:158*/

void salu (int metadata_lo, int metadata_hi, int register_lo_0, int register_hi_1, ref int[2] _out0)/*{comp_n.._{bnd}.sk:158*/
{
  _out0 = ((int[2])0);
  int register_lo = register_lo_0;
  int update_hi_1_value_s13 = 0;
  compute_alu(3, metadata_hi, 0, update_hi_1_value_s13)//{};
  int update_hi_2_value_s23 = 0;
  compute_alu(2, 9, 31, update_hi_2_value_s23)//{};
  int update_lo_1_value_s33 = 0;
  compute_alu(1, 29, register_lo_0, update_lo_1_value_s33)//{};
  int update_lo_2_value_s43 = 0;
  compute_alu(0, metadata_lo, register_hi_1, update_lo_2_value_s43)//{};
  bit condition_hi_s55 = ((0 - metadata_lo) + register_lo_0) < 0;
  bit condition_lo_s67 = ((0 - metadata_lo) - register_lo_0) > 0;
  bit update_hi_1_predicate_s69 = 0;
  bool_op(2, condition_hi_s55, condition_lo_s67, update_hi_1_predicate_s69);
  bit update_hi_2_predicate_s71 = 0;
  bool_op(0, condition_hi_s55, condition_lo_s67, update_hi_2_predicate_s71);
  bit update_lo_1_predicate_s73 = 0;
  bool_op(0, condition_hi_s55, condition_lo_s67, update_lo_1_predicate_s73);
  bit update_lo_2_predicate_s75 = 0;
  bool_op(4, condition_hi_s55, condition_lo_s67, update_lo_2_predicate_s75);
  assert (!(update_hi_1_predicate_s69 && update_hi_2_predicate_s71)); //ASSERTION CAN NOT BE SATISFIED: {comp_n.._{bnd}.sk:194 Assert at {comp_n.._{bnd}.sk:194 (1)
  assert (!(update_lo_1_predicate_s73 && update_lo_2_predicate_s75)); //ASSERTION CAN NOT BE SATISFIED: {comp_n.._{bnd}.sk:205 Assert at {comp_n.._{bnd}.sk:205 (1)
  if(update_lo_1_predicate_s73 && (!(update_lo_2_predicate_s75)))/*{comp_n.._{bnd}.sk:206*/
  {
    register_lo = update_lo_1_value_s33;
  }
  else
  {
    if((!(update_lo_1_predicate_s73)) && update_lo_2_predicate_s75)/*{comp_n.._{bnd}.sk:208*/
    {
      register_lo = update_lo_2_value_s43;
    }
    else
    {
      register_lo = register_lo_0;
    }
  }
  _out0[0] = register_lo;
  _out0[1] = register_lo_0;
  return;
}
/*{comp_n.._{bnd}.sk:244*/

void sketch (int maxseq, int p_tcpseq0)/*{comp_n.._{bnd}.sk:244*/
{
  int[2] impl_s1 = {0,0};
  salu(p_tcpseq0, 0, maxseq, 0, impl_s1);
  int[2] spec_s3 = {0,0};
  comp_0(maxseq, p_tcpseq0, spec_s3);
  assert ((impl_s1[0]) == (spec_s3[0])); //Assert at {comp_n.._{bnd}.sk:247 (1)
  assert ((impl_s1[1]) == (spec_s3[1])); //Assert at {comp_n.._{bnd}.sk:248 (1)
}
/*{comp_n.._{bnd}.sk:244*/

void sketch__Wrapper (int maxseq, int p_tcpseq0)  implements sketch__WrapperNospec/*{comp_n.._{bnd}.sk:244*/
{
  sketch(maxseq, p_tcpseq0);
}
/*{comp_n.._{bnd}.sk:244*/

void sketch__WrapperNospec (int maxseq, int p_tcpseq0)/*{comp_n.._{bnd}.sk:244*/
{ }
/* END PACKAGE ANONYMOUS*/
[SKETCH] DONE
Total time = 284
