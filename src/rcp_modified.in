int p_size_bytes0;
int p_rtt0;
int p_input_traffic_Bytes0;
int p_input_traffic_Bytes1;
int p_sum_rtt_Tr0;
int p_sum_rtt_Tr1;
int p_sum_rtt_Tr2;
int p_num_pkts_with_rtt0;
int p_num_pkts_with_rtt1;
int p_num_pkts_with_rtt2;
int p_branch0;
# state variables start
int branch;
int input_traffic_Bytes;
int sum_rtt_Tr;
int num_pkts_with_rtt;
# state variables end
# declarations end
p_input_traffic_Bytes0 = input_traffic_Bytes;
p_input_traffic_Bytes1 = p_input_traffic_Bytes0 + p_size_bytes0;
p_branch0 = branch;
branch = (p_rtt0 < 30) ? 1 : 0;
p_sum_rtt_Tr0 = sum_rtt_Tr;
p_sum_rtt_Tr1 = p_sum_rtt_Tr0 + p_rtt0;
p_num_pkts_with_rtt0 = num_pkts_with_rtt;
p_num_pkts_with_rtt1 = p_num_pkts_with_rtt0 + 1;
p_sum_rtt_Tr2 = (branch==1) ? p_sum_rtt_Tr1 : p_sum_rtt_Tr0;
p_num_pkts_with_rtt2 = (branch==1) ? p_num_pkts_with_rtt1 : p_num_pkts_with_rtt0;
input_traffic_Bytes = p_input_traffic_Bytes1;
sum_rtt_Tr = p_sum_rtt_Tr2;
num_pkts_with_rtt = p_num_pkts_with_rtt2;
