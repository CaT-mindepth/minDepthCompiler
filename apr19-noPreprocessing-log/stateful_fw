running mutation 1
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_1. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p__br_tmp5 = 1;

lhs p__br_tmp5 rhs 1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = 1;

 is_read_flank: processing rhs_vars =  []
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

lhs p_array_index0 rhs p__br_tmp5 ? (p_src+p_dst) : (p_array_index)
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_src', 'p_dst', 'p_array_index']
p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1;

lhs p__br_tmp00 rhs 1==1&&!(!(!(p_src==20&&1==1)))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp10 = 1==1&&!(p_src==20&&1==1)&&1==1;

lhs p__br_tmp10 rhs 1==1&&!(p_src==20&&1==1)&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp10 = 1==1&&!(p_src==20&&1==1)&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;

lhs p__br_tmp20 rhs 1==1&&p_dst==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_dst']
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

lhs p__br_tmp6 rhs 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20']
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp6 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00', 'p_drop']
p__br_tmp30 = 1==1&&!(!(p_src==20&&1==1))&&1==1;

lhs p__br_tmp30 rhs 1==1&&!(!(p_src==20&&1==1))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp30 = 1==1&&!(!(p_src==20&&1==1))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;

lhs p__br_tmp40 rhs 1==1&&p_src==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

lhs p__br_tmp7 rhs 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40']
p_established01 = p__br_tmp7 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp7 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp7 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p__br_tmp5 = 1; p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
RAW p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp10 = 1==1&&!(p_src==20&&1==1)&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20); p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p__br_tmp30 = 1==1&&!(!(p_src==20&&1==1))&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40); p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7ff95b416640>, 'write': <dependencyGraph.Statement object at 0x7ff95b4518e0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7ff95b416640>, 'write': <dependencyGraph.Statement object at 0x7ff95b4518e0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  13
SCC 0
v p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp7 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp7 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index) stmts len 1
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
SCC 3
v p__br_tmp5 = 1 stmts len 1
p__br_tmp5 = 1;
SCC 4
v p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20) stmts len 1
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
SCC 5
v p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40) stmts len 1
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
SCC 6
v p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1 stmts len 1
p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1;
SCC 7
v p__br_tmp10 = 1==1&&!(p_src==20&&1==1)&&1==1 stmts len 1
p__br_tmp10 = 1==1&&!(p_src==20&&1==1)&&1==1;
SCC 8
v p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1 stmts len 1
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
SCC 9
v p__br_tmp30 = 1==1&&!(!(p_src==20&&1==1))&&1==1 stmts len 1
p__br_tmp30 = 1==1&&!(!(p_src==20&&1==1))&&1==1;
SCC 10
v p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1 stmts len 1
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7ff95b451ca0>, <dependencyGraph.Codelet object at 0x7ff95b451bb0>, <dependencyGraph.Codelet object at 0x7ff95b451cd0>, <dependencyGraph.Codelet object at 0x7ff95b451d90>, <dependencyGraph.Codelet object at 0x7ff95b451df0>, <dependencyGraph.Codelet object at 0x7ff95b451e50>, <dependencyGraph.Codelet object at 0x7ff95b451eb0>, <dependencyGraph.Codelet object at 0x7ff95b451f10>, <dependencyGraph.Codelet object at 0x7ff95b451f70>, <dependencyGraph.Codelet object at 0x7ff95b451fd0>, <dependencyGraph.Codelet object at 0x7ff95b451d60>]
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp7 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
p__br_tmp5 = 1;
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1;
p__br_tmp10 = 1==1&&!(p_src==20&&1==1)&&1==1;
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
p__br_tmp30 = 1==1&&!(!(p_src==20&&1==1))&&1==1;
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7ff95b451bb0>}
total number of nodes created:  11
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  11
total number of nodes created:  11
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  11
number of nodes in comp_graph:  11
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;', 'p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);', 'p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);', 'p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);', 'p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;', 'p__br_tmp30 = 1==1&&!(!(p_src==20&&1==1))&&1==1;', 'p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;', 'p__br_tmp10 = 1==1&&!(p_src==20&&1==1)&&1==1;', 'p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1;', 'p__br_tmp5 = 1;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p__br_tmp6', 'p_established00', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p__br_tmp6', 'p_established00', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p_drop', 'p__br_tmp7', 'p__br_tmp6']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_drop', 'p__br_tmp7', 'p__br_tmp6']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established00', 'established']
 node inputs:  ['established', 'p__br_tmp7']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp6', 'p_established00', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
redundant outputs []
adj_inputs ['p__br_tmp6', 'p_established00', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['p__br_tmp40', 'established', 'p__br_tmp30', 'p__br_tmp00']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp40', 'p__br_tmp30', 'p__br_tmp00']
 	| cannot merge: too many inputs.
     | not a merge candidate.
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 node outputs:  ['p__br_tmp7']
 node inputs:  ['p__br_tmp40', 'p__br_tmp30', 'p__br_tmp00']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp7', 'established'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp30 = 1==1&&!(!(p_src==20&&1==1))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 * recursive_merge: node ::  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p__br_tmp20', 'p__br_tmp10', 'p__br_tmp00']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp6', 'p_established00', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp10 = 1==1&&!(p_src==20&&1==1)&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 * recursive_merge: node ::  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 node outputs:  ['p_array_index0']
 node inputs:  ['p__br_tmp5', 'p_array_index', 'p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
     |  p__br_tmp5 = 1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 * recursive_merge: node ::  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp40']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp40', 'p__br_tmp30', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp30 = 1==1&&!(!(p_src==20&&1==1))&&1==1;
 node outputs:  ['p__br_tmp30']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp40', 'p__br_tmp30', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp30 = 1==1&&!(!(p_src==20&&1==1))&&1==1;
 * recursive_merge: node ::  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp20']
 node inputs:  ['p_dst']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp20', 'p__br_tmp10', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp10 = 1==1&&!(p_src==20&&1==1)&&1==1;
 node outputs:  ['p__br_tmp10']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp20', 'p__br_tmp10', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp10 = 1==1&&!(p_src==20&&1==1)&&1==1;
 * recursive_merge: node ::  p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1;
 node outputs:  ['p__br_tmp00']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp40', 'p__br_tmp20', 'p__br_tmp10', 'p__br_tmp30', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1;
 * recursive_merge: node ::  p__br_tmp5 = 1;
 node outputs:  ['p__br_tmp5']
 node inputs:  []
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp5', 'p_array_index', 'p_dst', 'p_src'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = 1;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 --- cannot fold. too many stateless inputs:  ['p__br_tmp40', 'p__br_tmp30', 'p__br_tmp00']
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp7', 'p_array_index0', 'p_drop0'}
{'p__br_tmp7', 'p_array_index0', 'p_drop0'}
u:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
v:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp5 = 1;
v:  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
u:  p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp00 = 1==1&&!(!(!(p_src==20&&1==1)))&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp10 = 1==1&&!(p_src==20&&1==1)&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp30 = 1==1&&!(!(p_src==20&&1==1))&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp7']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp7', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_11_stateless_p__br_tmp7_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_11_stateless_p__br_tmp7_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp7 --------- 
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_11 , type?  STATELESS
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_13_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_13_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_12_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_12_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_12_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_12_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_12_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_12_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_12_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_12_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_12_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_12_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  3  and ALU  6
 *** found stateless dependency between ALU  4  and ALU  6
 *** found stateless dependency between ALU  5  and ALU  6
 *** found stateless dependency between ALU  6  and ALU  15
 *** found stateless dependency between ALU  7  and ALU  10
 *** found stateless dependency between ALU  8  and ALU  10
 *** found stateless dependency between ALU  9  and ALU  10
 *** found stateless dependency between ALU  10  and ALU  15
 *** found stateless dependency between ALU  11  and ALU  14
 *** found stateless dependency between ALU  12  and ALU  14
 *** found stateless dependency between ALU  13  and ALU  14
 *** found stateless dependency between ALU  14  and ALU  15
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_11  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7ff95b406760>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
Stateless ALU id 1 has output p__br_tmp7
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  3
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  5
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  9
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  12
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  13
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_13', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
3,5,9,12,13,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 

+---> dependencies of ALU  3 : 
6,
+---> dependencies of ALU  4 : 
6,
+---> dependencies of ALU  5 : 
6,
+---> dependencies of ALU  6 : 
15,
+---> dependencies of ALU  7 : 
10,
+---> dependencies of ALU  8 : 
10,
+---> dependencies of ALU  9 : 
10,
+---> dependencies of ALU  10 : 
15,
+---> dependencies of ALU  11 : 
14,
+---> dependencies of ALU  12 : 
14,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 
15,
+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  5
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  0  and  13
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 3), (0, 5), (0, 9), (0, 12), (0, 13), (1, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 289 rows, 210 columns and 680 nonzeros
Model fingerprint: 0x6d9ba4e3
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 9 rows and 0 columns
Presolve removed 0 rows and 53 columns
Presolve time: 0.01s
Presolved: 298 rows, 157 columns, 704 nonzeros
Variable types: 0 continuous, 157 integer (140 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 2
T0_A_4 -0
T0_A_5 2
T0_A_6 3
T0_A_7 -0
T0_A_8 -0
T0_A_9 2
T0_A_10 3
T0_A_11 -0
T0_A_12 2
T0_A_13 2
T0_A_14 3
T0_A_15 4
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  2.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  2.0
action:  5
num stages:  5
stage:  3.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  2.0
action:  9
num stages:  5
stage:  3.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  2.0
action:  12
num stages:  5
stage:  2.0
action:  13
num stages:  5
stage:  3.0
action:  14
num stages:  5
stage:  4.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
alu  3  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  2.0
 > get_alu_stage: table  0 , alu_id =  5 :  2.0
alu  5  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
alu  6  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
alu  9  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
alu  10  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
alu  12  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  13 :  2.0
 > get_alu_stage: table  0 , alu_id =  13 :  2.0
alu  13  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
alu  14  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
alu  15  is of type  STATELESS ; scheduled to stage  4
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7ff95b4065e0>, 0), (<alus.DominoALU object at 0x7ff95b4067c0>, 1), (<alus.DominoALU object at 0x7ff95b4067f0>, 2), (<alus.DominoALU object at 0x7ff95b406a90>, 3), (<alus.DominoALU object at 0x7ff95b406880>, 4), (<alus.DominoALU object at 0x7ff95b406a00>, 5), (<alus.DominoALU object at 0x7ff95b406a60>, 6), (<alus.DominoALU object at 0x7ff95b406b80>, 7), (<alus.DominoALU object at 0x7ff95b406c10>, 8), (<alus.DominoALU object at 0x7ff95b406ca0>, 9), (<alus.DominoALU object at 0x7ff95b406a30>, 10), (<alus.DominoALU object at 0x7ff95b406790>, 11), (<alus.DominoALU object at 0x7ff95b406b50>, 12), (<alus.DominoALU object at 0x7ff95b406be0>, 13), (<alus.DominoALU object at 0x7ff95b406c40>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7ff95b406760>, 0)]
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  5
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  0  and  13
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 5), (0, 9), (0, 12), (0, 13), (1, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': 'p__br_tmp7', 'immediate_operand': '20'}, {'id': 2, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '5'}, {'id': 3, 'opcode': 3, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '2'}, {'id': 4, 'opcode': 13, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_0', 'immediate_operand': '31'}, {'id': 5, 'opcode': 8, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 6, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '5'}, {'id': 7, 'opcode': 1, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '3'}, {'id': 8, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '23'}, {'id': 9, 'opcode': 10, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 11, 'opcode': 5, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '1'}, {'id': 13, 'opcode': 23, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '9'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '0'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 5), (0, 9), (0, 12), (0, 13), (1, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': 'p__br_tmp7', 'immediate_operand': '20'}, {'id': 2, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '5'}, {'id': 3, 'opcode': 3, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '2'}, {'id': 4, 'opcode': 13, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_0', 'immediate_operand': '31'}, {'id': 5, 'opcode': 8, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 6, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '5'}, {'id': 7, 'opcode': 1, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '3'}, {'id': 8, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '23'}, {'id': 9, 'opcode': 10, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 11, 'opcode': 5, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '1'}, {'id': 13, 'opcode': 23, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '9'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '0'}]}
Time taken: 86.70050001144409 s
preprocessor time:
running mutation 2
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_2. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p__br_tmp5 = 1;

lhs p__br_tmp5 rhs 1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = 1;

 is_read_flank: processing rhs_vars =  []
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

lhs p_array_index0 rhs p__br_tmp5 ? (p_src+p_dst) : (p_array_index)
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_src', 'p_dst', 'p_array_index']
p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;

lhs p__br_tmp00 rhs !(!(1==1&&!(p_src==20&&1==1)))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp10 = !(p_src==20&&1==1)&&1==1&&1==1;

lhs p__br_tmp10 rhs !(p_src==20&&1==1)&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp10 = !(p_src==20&&1==1)&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;

lhs p__br_tmp20 rhs 1==1&&p_dst==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_dst']
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

lhs p__br_tmp6 rhs 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20']
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp6 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00', 'p_drop']
p__br_tmp30 = !(1==1&&!(p_src==20&&1==1))&&1==1;

lhs p__br_tmp30 rhs !(1==1&&!(p_src==20&&1==1))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp30 = !(1==1&&!(p_src==20&&1==1))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;

lhs p__br_tmp40 rhs 1==1&&p_src==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

lhs p__br_tmp7 rhs 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40']
p_established01 = p__br_tmp7 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp7 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp7 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p__br_tmp5 = 1; p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
RAW p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp10 = !(p_src==20&&1==1)&&1==1&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20); p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p__br_tmp30 = !(1==1&&!(p_src==20&&1==1))&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40); p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7fe38467d640>, 'write': <dependencyGraph.Statement object at 0x7fe3846b88e0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7fe38467d640>, 'write': <dependencyGraph.Statement object at 0x7fe3846b88e0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  13
SCC 0
v p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp7 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp7 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index) stmts len 1
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
SCC 3
v p__br_tmp5 = 1 stmts len 1
p__br_tmp5 = 1;
SCC 4
v p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20) stmts len 1
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
SCC 5
v p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40) stmts len 1
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
SCC 6
v p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1 stmts len 1
p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
SCC 7
v p__br_tmp10 = !(p_src==20&&1==1)&&1==1&&1==1 stmts len 1
p__br_tmp10 = !(p_src==20&&1==1)&&1==1&&1==1;
SCC 8
v p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1 stmts len 1
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
SCC 9
v p__br_tmp30 = !(1==1&&!(p_src==20&&1==1))&&1==1 stmts len 1
p__br_tmp30 = !(1==1&&!(p_src==20&&1==1))&&1==1;
SCC 10
v p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1 stmts len 1
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7fe3846b8ca0>, <dependencyGraph.Codelet object at 0x7fe3846b8bb0>, <dependencyGraph.Codelet object at 0x7fe3846b8cd0>, <dependencyGraph.Codelet object at 0x7fe3846b8d90>, <dependencyGraph.Codelet object at 0x7fe3846b8df0>, <dependencyGraph.Codelet object at 0x7fe3846b8e50>, <dependencyGraph.Codelet object at 0x7fe3846b8eb0>, <dependencyGraph.Codelet object at 0x7fe3846b8f10>, <dependencyGraph.Codelet object at 0x7fe3846b8f70>, <dependencyGraph.Codelet object at 0x7fe3846b8fd0>, <dependencyGraph.Codelet object at 0x7fe3846b8d60>]
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp7 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
p__br_tmp5 = 1;
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
p__br_tmp10 = !(p_src==20&&1==1)&&1==1&&1==1;
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
p__br_tmp30 = !(1==1&&!(p_src==20&&1==1))&&1==1;
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7fe3846b8bb0>}
total number of nodes created:  11
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  11
total number of nodes created:  11
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  11
number of nodes in comp_graph:  11
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;', 'p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);', 'p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);', 'p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);', 'p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;', 'p__br_tmp30 = !(1==1&&!(p_src==20&&1==1))&&1==1;', 'p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;', 'p__br_tmp10 = !(p_src==20&&1==1)&&1==1&&1==1;', 'p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;', 'p__br_tmp5 = 1;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p__br_tmp6', 'p_established00', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p__br_tmp6', 'p_established00', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p_drop', 'p__br_tmp6', 'p__br_tmp7']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_drop', 'p__br_tmp6', 'p__br_tmp7']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established00', 'established']
 node inputs:  ['established', 'p__br_tmp7']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp6', 'p_drop', 'p_established00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
redundant outputs []
adj_inputs ['p__br_tmp6', 'p_established00', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['established', 'p__br_tmp00', 'p__br_tmp40', 'p__br_tmp30']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp00', 'p__br_tmp40', 'p__br_tmp30']
 	| cannot merge: too many inputs.
     | not a merge candidate.
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 node outputs:  ['p__br_tmp7']
 node inputs:  ['p__br_tmp30', 'p__br_tmp00', 'p__br_tmp40']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp7', 'established'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp30 = !(1==1&&!(p_src==20&&1==1))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 * recursive_merge: node ::  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p__br_tmp00', 'p__br_tmp20', 'p__br_tmp10']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp6', 'p_drop', 'p_established00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp10 = !(p_src==20&&1==1)&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 * recursive_merge: node ::  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 node outputs:  ['p_array_index0']
 node inputs:  ['p_src', 'p__br_tmp5', 'p_array_index', 'p_dst']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
     |  p__br_tmp5 = 1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 * recursive_merge: node ::  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp40']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp30', 'p__br_tmp00', 'p__br_tmp40'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp30 = !(1==1&&!(p_src==20&&1==1))&&1==1;
 node outputs:  ['p__br_tmp30']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp30', 'p__br_tmp00', 'p__br_tmp40'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp30 = !(1==1&&!(p_src==20&&1==1))&&1==1;
 * recursive_merge: node ::  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp20']
 node inputs:  ['p_dst']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp10', 'p__br_tmp20', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp10 = !(p_src==20&&1==1)&&1==1&&1==1;
 node outputs:  ['p__br_tmp10']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp10', 'p__br_tmp20', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp10 = !(p_src==20&&1==1)&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
 node outputs:  ['p__br_tmp00']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp40', 'p__br_tmp30', 'p__br_tmp20', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
 * recursive_merge: node ::  p__br_tmp5 = 1;
 node outputs:  ['p__br_tmp5']
 node inputs:  []
 exclude_read_write_flanks: successor inputs:  {'p_src', 'p_array_index', 'p__br_tmp5', 'p_dst'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = 1;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 --- cannot fold. too many stateless inputs:  ['p__br_tmp00', 'p__br_tmp40', 'p__br_tmp30']
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_array_index0', 'p_drop0', 'p__br_tmp7'}
{'p_array_index0', 'p_drop0', 'p__br_tmp7'}
u:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
v:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp5 = 1;
v:  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
u:  p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp00 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp10 = !(p_src==20&&1==1)&&1==1&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp30 = !(1==1&&!(p_src==20&&1==1))&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp7']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp7', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_13_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_13_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_12_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_12_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_12_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_12_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_12_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_12_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_12_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_12_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_12_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_12_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_11_stateless_p__br_tmp7_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_11_stateless_p__br_tmp7_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp7 --------- 
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_11 , type?  STATELESS
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** found stateless dependency between ALU  0  and ALU  2
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** found stateless dependency between ALU  0  and ALU  4
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_11  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7fe38466d760>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
Stateless ALU id 15 has output p__br_tmp7
 *** found dependency between stateless ALU  15  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
2,4,8,
+---> dependencies of ALU  1 : 

+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 
0,
# alus: =  16
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 2), (0, 4), (0, 8), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 287 rows, 210 columns and 676 nonzeros
Model fingerprint: 0xaeb837df
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 21 rows and 0 columns
Presolve removed 0 rows and 47 columns
Presolve time: 0.01s
Presolved: 308 rows, 163 columns, 730 nonzeros
Variable types: 0 continuous, 163 integer (146 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 10.0000000
Found heuristic solution: objective 8.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 4: 4 8 10 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 2
T0_A_3 -0
T0_A_4 2
T0_A_5 3
T0_A_6 -0
T0_A_7 -0
T0_A_8 2
T0_A_9 3
T0_A_10 -0
T0_A_11 -0
T0_A_12 -0
T0_A_13 1
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  2.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  2.0
action:  4
num stages:  5
stage:  3.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  -0.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
stage:  1.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
alu  2  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
alu  4  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
alu  5  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
alu  10  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  13 :  1.0
 > get_alu_stage: table  0 , alu_id =  13 :  1.0
alu  13  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7fe38466d5e0>, 0), (<alus.DominoALU object at 0x7fe38466d550>, 1), (<alus.DominoALU object at 0x7fe38466d5b0>, 2), (<alus.DominoALU object at 0x7fe38466dcd0>, 3), (<alus.DominoALU object at 0x7fe38466d610>, 4), (<alus.DominoALU object at 0x7fe38466d7f0>, 5), (<alus.DominoALU object at 0x7fe38466dd00>, 6), (<alus.DominoALU object at 0x7fe38466dac0>, 7), (<alus.DominoALU object at 0x7fe38466d9a0>, 8), (<alus.DominoALU object at 0x7fe38466d7c0>, 9), (<alus.DominoALU object at 0x7fe38466d8b0>, 10), (<alus.DominoALU object at 0x7fe38466d580>, 11), (<alus.DominoALU object at 0x7fe38466da90>, 12), (<alus.DominoALU object at 0x7fe38466da00>, 13), (<alus.DominoALU object at 0x7fe38466dbe0>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7fe38466d760>, 0)]
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 4), (0, 8), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_array_index', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 2, 'opcode': 13, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '2'}, {'id': 3, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 4, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 4, 'operand0': 'p_drop', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 9, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '27'}, {'id': 10, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '22'}, {'id': 11, 'opcode': 13, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '17'}, {'id': 12, 'opcode': 2, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '20'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '31'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp7', 'immediate_operand': '20'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 4), (0, 8), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_array_index', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 2, 'opcode': 13, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '2'}, {'id': 3, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 4, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 4, 'operand0': 'p_drop', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 9, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '27'}, {'id': 10, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '22'}, {'id': 11, 'opcode': 13, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '17'}, {'id': 12, 'opcode': 2, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '20'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '31'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp7', 'immediate_operand': '20'}]}
Time taken: 58.584625244140625 s
preprocessor time:
running mutation 3
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_3. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p__br_tmp7 = 1;

lhs p__br_tmp7 rhs 1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = 1;

 is_read_flank: processing rhs_vars =  []
p_array_index0 = p__br_tmp7 ? (p_src+p_dst) : (p_array_index);

lhs p_array_index0 rhs p__br_tmp7 ? (p_src+p_dst) : (p_array_index)
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p__br_tmp7 ? (p_src+p_dst) : (p_array_index);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_src', 'p_dst', 'p_array_index']
p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1);

lhs p__br_tmp00 rhs !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1);

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp10 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;

lhs p__br_tmp10 rhs !(!(1==1&&!(p_src==20&&1==1)))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp10 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp20 = 1==1&&!(p_src==20&&1==1)&&1==1;

lhs p__br_tmp20 rhs 1==1&&!(p_src==20&&1==1)&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp20 = 1==1&&!(p_src==20&&1==1)&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp30 = 1==1&&1==1&&p_dst==20&&1==1;

lhs p__br_tmp30 rhs 1==1&&1==1&&p_dst==20&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp30 = 1==1&&1==1&&p_dst==20&&1==1;

 is_read_flank: processing rhs_vars =  ['p_dst']
p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);

lhs p__br_tmp8 rhs 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20', 'p__br_tmp30']
p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp8 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp8', 'p_established00', 'p_drop']
p__br_tmp40 = !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1;

lhs p__br_tmp40 rhs !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp40 = !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp50 = !(1==1&&!(p_src==20&&1==1))&&1==1;

lhs p__br_tmp50 rhs !(1==1&&!(p_src==20&&1==1))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp50 = !(1==1&&!(p_src==20&&1==1))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp60 = 1==1&&1==1&&p_src==20&&1==1;

lhs p__br_tmp60 rhs 1==1&&1==1&&p_src==20&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp60 = 1==1&&1==1&&p_src==20&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);

lhs p__br_tmp9 rhs 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp40', 'p__br_tmp50', 'p__br_tmp60']
p_established01 = p__br_tmp9 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp9 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp9 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp9', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp9 ? (1) : (p_established00);
RAW p__br_tmp7 = 1; p_array_index0 = p__br_tmp7 ? (p_src+p_dst) : (p_array_index);
RAW p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1); p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
RAW p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1); p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
RAW p__br_tmp10 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1; p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
RAW p__br_tmp20 = 1==1&&!(p_src==20&&1==1)&&1==1; p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
RAW p__br_tmp30 = 1==1&&1==1&&p_dst==20&&1==1; p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
RAW p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30); p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);
RAW p__br_tmp40 = !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1; p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
RAW p__br_tmp50 = !(1==1&&!(p_src==20&&1==1))&&1==1; p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
RAW p__br_tmp60 = 1==1&&1==1&&p_src==20&&1==1; p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
RAW p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60); p_established01 = p__br_tmp9 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp9 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f76eac2f640>, 'write': <dependencyGraph.Statement object at 0x7f76eac6a5e0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f76eac2f640>, 'write': <dependencyGraph.Statement object at 0x7f76eac6a5e0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  15
SCC 0
v p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp9 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp9 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p__br_tmp7 ? (p_src+p_dst) : (p_array_index) stmts len 1
p_array_index0 = p__br_tmp7 ? (p_src+p_dst) : (p_array_index);
SCC 3
v p__br_tmp7 = 1 stmts len 1
p__br_tmp7 = 1;
SCC 4
v p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30) stmts len 1
p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
SCC 5
v p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60) stmts len 1
p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
SCC 6
v p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1) stmts len 1
p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1);
SCC 7
v p__br_tmp10 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1 stmts len 1
p__br_tmp10 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
SCC 8
v p__br_tmp20 = 1==1&&!(p_src==20&&1==1)&&1==1 stmts len 1
p__br_tmp20 = 1==1&&!(p_src==20&&1==1)&&1==1;
SCC 9
v p__br_tmp30 = 1==1&&1==1&&p_dst==20&&1==1 stmts len 1
p__br_tmp30 = 1==1&&1==1&&p_dst==20&&1==1;
SCC 10
v p__br_tmp40 = !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1 stmts len 1
p__br_tmp40 = !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1;
SCC 11
v p__br_tmp50 = !(1==1&&!(p_src==20&&1==1))&&1==1 stmts len 1
p__br_tmp50 = !(1==1&&!(p_src==20&&1==1))&&1==1;
SCC 12
v p__br_tmp60 = 1==1&&1==1&&p_src==20&&1==1 stmts len 1
p__br_tmp60 = 1==1&&1==1&&p_src==20&&1==1;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f76eac6ad90>, <dependencyGraph.Codelet object at 0x7f76eac6ae80>, <dependencyGraph.Codelet object at 0x7f76eac6af70>, <dependencyGraph.Codelet object at 0x7f76eac6afd0>, <dependencyGraph.Codelet object at 0x7f76eac6af40>, <dependencyGraph.Codelet object at 0x7f76eac6aee0>, <dependencyGraph.Codelet object at 0x7f76eac6afa0>, <dependencyGraph.Codelet object at 0x7f76eac1f100>, <dependencyGraph.Codelet object at 0x7f76eac1f160>, <dependencyGraph.Codelet object at 0x7f76eac1f1c0>, <dependencyGraph.Codelet object at 0x7f76eac1f220>, <dependencyGraph.Codelet object at 0x7f76eac1f280>, <dependencyGraph.Codelet object at 0x7f76eac1f2e0>]
p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp9 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p__br_tmp7 ? (p_src+p_dst) : (p_array_index);
p__br_tmp7 = 1;
p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1);
p__br_tmp10 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
p__br_tmp20 = 1==1&&!(p_src==20&&1==1)&&1==1;
p__br_tmp30 = 1==1&&1==1&&p_dst==20&&1==1;
p__br_tmp40 = !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1;
p__br_tmp50 = !(1==1&&!(p_src==20&&1==1))&&1==1;
p__br_tmp60 = 1==1&&1==1&&p_src==20&&1==1;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f76eac6ae80>}
total number of nodes created:  13
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  13
total number of nodes created:  13
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp9 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp9 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  13
number of nodes in comp_graph:  13
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp9 ? (1) : (p_established00); established = p_established01;', 'p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);', 'p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);', 'p_array_index0 = p__br_tmp7 ? (p_src+p_dst) : (p_array_index);', 'p__br_tmp60 = 1==1&&1==1&&p_src==20&&1==1;', 'p__br_tmp50 = !(1==1&&!(p_src==20&&1==1))&&1==1;', 'p__br_tmp40 = !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1;', 'p__br_tmp30 = 1==1&&1==1&&p_dst==20&&1==1;', 'p__br_tmp20 = 1==1&&!(p_src==20&&1==1)&&1==1;', 'p__br_tmp10 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;', 'p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1);', 'p__br_tmp7 = 1;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_established00', 'p__br_tmp8', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp9 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_established00', 'p__br_tmp8', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp9', 'p_drop', 'p__br_tmp8']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp9', 'p_drop', 'p__br_tmp8']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);
     |  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp9 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established00', 'established']
 node inputs:  ['established', 'p__br_tmp9']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp8', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp9 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
redundant outputs []
adj_inputs ['p_established00', 'p__br_tmp8', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['p__br_tmp50', 'p__br_tmp40', 'p__br_tmp00', 'established', 'p__br_tmp60']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp50', 'p__br_tmp40', 'p__br_tmp00', 'p__br_tmp60']
 	| cannot merge: too many inputs.
     | not a merge candidate.
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp9 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
 node outputs:  ['p__br_tmp9']
 node inputs:  ['p__br_tmp50', 'p__br_tmp00', 'p__br_tmp60', 'p__br_tmp40']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp9', 'established'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
     |  p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
     |  p__br_tmp40 = !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
     |  p__br_tmp50 = !(1==1&&!(p_src==20&&1==1))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
     |  p__br_tmp60 = 1==1&&1==1&&p_src==20&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
 * recursive_merge: node ::  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
 node outputs:  ['p__br_tmp8']
 node inputs:  ['p__br_tmp30', 'p__br_tmp20', 'p__br_tmp00', 'p__br_tmp10']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp8', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
     |  p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
     |  p__br_tmp10 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
     |  p__br_tmp20 = 1==1&&!(p_src==20&&1==1)&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
     |  p__br_tmp30 = 1==1&&1==1&&p_dst==20&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
 * recursive_merge: node ::  p_array_index0 = p__br_tmp7 ? (p_src+p_dst) : (p_array_index);
 node outputs:  ['p_array_index0']
 node inputs:  ['p__br_tmp7', 'p_dst', 'p_array_index', 'p_src']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_array_index0 = p__br_tmp7 ? (p_src+p_dst) : (p_array_index);
     |  p__br_tmp7 = 1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_array_index0 = p__br_tmp7 ? (p_src+p_dst) : (p_array_index);
 * recursive_merge: node ::  p__br_tmp60 = 1==1&&1==1&&p_src==20&&1==1;
 node outputs:  ['p__br_tmp60']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp50', 'p__br_tmp40', 'p__br_tmp60', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp60 = 1==1&&1==1&&p_src==20&&1==1;
 * recursive_merge: node ::  p__br_tmp50 = !(1==1&&!(p_src==20&&1==1))&&1==1;
 node outputs:  ['p__br_tmp50']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp50', 'p__br_tmp40', 'p__br_tmp60', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp50 = !(1==1&&!(p_src==20&&1==1))&&1==1;
 * recursive_merge: node ::  p__br_tmp40 = !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1;
 node outputs:  ['p__br_tmp40']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp50', 'p__br_tmp40', 'p__br_tmp60', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp40 = !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1;
 * recursive_merge: node ::  p__br_tmp30 = 1==1&&1==1&&p_dst==20&&1==1;
 node outputs:  ['p__br_tmp30']
 node inputs:  ['p_dst']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp30', 'p__br_tmp20', 'p__br_tmp00', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp30 = 1==1&&1==1&&p_dst==20&&1==1;
 * recursive_merge: node ::  p__br_tmp20 = 1==1&&!(p_src==20&&1==1)&&1==1;
 node outputs:  ['p__br_tmp20']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp30', 'p__br_tmp20', 'p__br_tmp00', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp20 = 1==1&&!(p_src==20&&1==1)&&1==1;
 * recursive_merge: node ::  p__br_tmp10 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
 node outputs:  ['p__br_tmp10']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp30', 'p__br_tmp20', 'p__br_tmp00', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp10 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
 * recursive_merge: node ::  p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1);
 node outputs:  ['p__br_tmp00']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp50', 'p__br_tmp30', 'p__br_tmp10', 'p__br_tmp00', 'p__br_tmp40', 'p__br_tmp20', 'p__br_tmp60'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1);
 * recursive_merge: node ::  p__br_tmp7 = 1;
 node outputs:  ['p__br_tmp7']
 node inputs:  []
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp7', 'p_dst', 'p_array_index', 'p_src'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp7 = 1;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp9 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
 --- cannot fold. too many stateless inputs:  ['p__br_tmp50', 'p__br_tmp40', 'p__br_tmp00', 'p__br_tmp60']
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp9', 'p_drop0', 'p_array_index0'}
{'p__br_tmp9', 'p_drop0', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp9 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);
u:  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
v:  p_established00 = established; p_established01 = p__br_tmp9 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
v:  p_drop0 = p__br_tmp8 ? (p_established00==0) : (p_drop);
u:  p__br_tmp7 = 1;
v:  p_array_index0 = p__br_tmp7 ? (p_src+p_dst) : (p_array_index);
u:  p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1);
v:  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
u:  p__br_tmp00 = !(!(!(!(1==1&&!(p_src==20&&1==1))))&&1==1);
v:  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
u:  p__br_tmp10 = !(!(1==1&&!(p_src==20&&1==1)))&&1==1;
v:  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
u:  p__br_tmp20 = 1==1&&!(p_src==20&&1==1)&&1==1;
v:  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
u:  p__br_tmp30 = 1==1&&1==1&&p_dst==20&&1==1;
v:  p__br_tmp8 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30);
u:  p__br_tmp40 = !(!(!(1==1&&!(p_src==20&&1==1))))&&1==1;
v:  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
u:  p__br_tmp50 = !(1==1&&!(p_src==20&&1==1))&&1==1;
v:  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
u:  p__br_tmp60 = 1==1&&1==1&&p_src==20&&1==1;
v:  p__br_tmp9 = 1&&!(p__br_tmp00)&&(p__br_tmp40)&&(p__br_tmp50)&&(p__br_tmp60);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp9']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp9', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_13_stateless_p__br_tmp9_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_13_stateless_p__br_tmp9_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_13_stateless_p__br_tmp9_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_13_stateless_p__br_tmp9_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp9 --------- 
filename_to_compname: filename =  comp_13_stateless_p__br_tmp9_bnd_1.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p__br_tmp9_bnd_1.sk.out
['comp_13']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_14_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_14_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_14_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_14_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_14_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_14_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_14_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_14_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_14_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_14_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_drop0_bnd_3.sk.out
['comp_14']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_15_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_15_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_15_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_15_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_15_stateless_p_array_index0_bnd_1.sk.out
['comp_15']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_15 , type?  STATELESS
filename_to_compname: filename =  comp_15_stateless_p_array_index0_bnd_1.sk.out
['comp_15']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_13  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f76eac1fac0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
Stateless ALU id 1 has output p__br_tmp9
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** found stateless dependency between ALU  0  and ALU  6
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** found stateless dependency between ALU  0  and ALU  7
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_14  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_14', 3: 'comp_14', 4: 'comp_14', 5: 'comp_14', 6: 'comp_14', 7: 'comp_14', 8: 'comp_14', 9: 'comp_14', 10: 'comp_14', 11: 'comp_14', 12: 'comp_14', 13: 'comp_14', 14: 'comp_14', 15: 'comp_15'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
6,7,8,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 6), (0, 7), (0, 8), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 287 rows, 210 columns and 676 nonzeros
Model fingerprint: 0xd32ac8d7
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 25 rows and 0 columns
Presolve removed 0 rows and 45 columns
Presolve time: 0.01s
Presolved: 312 rows, 165 columns, 740 nonzeros
Variable types: 0 continuous, 165 integer (148 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 8.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 3: 4 8 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 -0
T0_A_5 1
T0_A_6 2
T0_A_7 2
T0_A_8 2
T0_A_9 3
T0_A_10 -0
T0_A_11 -0
T0_A_12 -0
T0_A_13 1
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  1.0
action:  5
num stages:  5
stage:  2.0
action:  6
num stages:  5
stage:  2.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  -0.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
stage:  1.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  1.0
 > get_alu_stage: table  0 , alu_id =  5 :  1.0
alu  5  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
alu  6  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
alu  7  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
alu  10  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  13 :  1.0
 > get_alu_stage: table  0 , alu_id =  13 :  1.0
alu  13  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f76eac1f940>, 0), (<alus.DominoALU object at 0x7f76eac1f8b0>, 1), (<alus.DominoALU object at 0x7f76eac1f910>, 2), (<alus.DominoALU object at 0x7f76eac1fdf0>, 3), (<alus.DominoALU object at 0x7f76eac1f850>, 4), (<alus.DominoALU object at 0x7f76eac1fe50>, 5), (<alus.DominoALU object at 0x7f76eac1fe20>, 6), (<alus.DominoALU object at 0x7f76eac1fd00>, 7), (<alus.DominoALU object at 0x7f76eac1fe80>, 8), (<alus.DominoALU object at 0x7f76eac1fc10>, 9), (<alus.DominoALU object at 0x7f76eac1fc70>, 10), (<alus.DominoALU object at 0x7f76eac1fb20>, 11), (<alus.DominoALU object at 0x7f76eac1ffd0>, 12), (<alus.DominoALU object at 0x7f76eac1fd90>, 13), (<alus.DominoALU object at 0x7f76eac1feb0>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f76eac1fac0>, 0)]
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 6), (0, 7), (0, 8), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp9'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp9', 'immediate_operand': '20'}, {'id': 2, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 7, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 5, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_1', 'immediate_operand': '2'}, {'id': 5, 'opcode': 18, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '29'}, {'id': 6, 'opcode': 12, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12_2', 'immediate_operand': '1'}, {'id': 7, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_3', 'immediate_operand': '12'}, {'id': 8, 'opcode': 13, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '3'}, {'id': 9, 'opcode': 10, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '1'}, {'id': 10, 'opcode': 0, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 11, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '31'}, {'id': 12, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '19'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '11'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '2'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 6), (0, 7), (0, 8), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp9'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp9', 'immediate_operand': '20'}, {'id': 2, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 7, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 5, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_1', 'immediate_operand': '2'}, {'id': 5, 'opcode': 18, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '29'}, {'id': 6, 'opcode': 12, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12_2', 'immediate_operand': '1'}, {'id': 7, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_3', 'immediate_operand': '12'}, {'id': 8, 'opcode': 13, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '3'}, {'id': 9, 'opcode': 10, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '1'}, {'id': 10, 'opcode': 0, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 11, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '31'}, {'id': 12, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '19'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '11'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '2'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}]}
Time taken: 17.119128227233887 s
preprocessor time:
running mutation 4
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_4. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p__br_tmp5 = 1;

lhs p__br_tmp5 rhs 1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = 1;

 is_read_flank: processing rhs_vars =  []
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

lhs p_array_index0 rhs p__br_tmp5 ? (p_src+p_dst) : (p_array_index)
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_src', 'p_dst', 'p_array_index']
p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1;

lhs p__br_tmp00 rhs 1==1&&!(!(!(p_src==20))&&1==1)&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp10 = 1==1&&!(p_src==20)&&1==1&&1==1;

lhs p__br_tmp10 rhs 1==1&&!(p_src==20)&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp10 = 1==1&&!(p_src==20)&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;

lhs p__br_tmp20 rhs 1==1&&p_dst==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_dst']
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

lhs p__br_tmp6 rhs 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20']
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp6 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00', 'p_drop']
p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1&&1==1;

lhs p__br_tmp30 rhs 1==1&&!(!(p_src==20))&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;

lhs p__br_tmp40 rhs 1==1&&p_src==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

lhs p__br_tmp7 rhs 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40']
p_established01 = p__br_tmp7 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp7 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp7 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p__br_tmp5 = 1; p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
RAW p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp10 = 1==1&&!(p_src==20)&&1==1&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20); p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40); p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f1a7d912640>, 'write': <dependencyGraph.Statement object at 0x7f1a7d94e8e0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f1a7d912640>, 'write': <dependencyGraph.Statement object at 0x7f1a7d94e8e0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  13
SCC 0
v p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp7 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp7 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index) stmts len 1
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
SCC 3
v p__br_tmp5 = 1 stmts len 1
p__br_tmp5 = 1;
SCC 4
v p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20) stmts len 1
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
SCC 5
v p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40) stmts len 1
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
SCC 6
v p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1 stmts len 1
p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1;
SCC 7
v p__br_tmp10 = 1==1&&!(p_src==20)&&1==1&&1==1 stmts len 1
p__br_tmp10 = 1==1&&!(p_src==20)&&1==1&&1==1;
SCC 8
v p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1 stmts len 1
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
SCC 9
v p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1&&1==1 stmts len 1
p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1&&1==1;
SCC 10
v p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1 stmts len 1
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f1a7d94eca0>, <dependencyGraph.Codelet object at 0x7f1a7d94ebb0>, <dependencyGraph.Codelet object at 0x7f1a7d94ecd0>, <dependencyGraph.Codelet object at 0x7f1a7d94ed90>, <dependencyGraph.Codelet object at 0x7f1a7d94edf0>, <dependencyGraph.Codelet object at 0x7f1a7d94ee50>, <dependencyGraph.Codelet object at 0x7f1a7d94eeb0>, <dependencyGraph.Codelet object at 0x7f1a7d94ef10>, <dependencyGraph.Codelet object at 0x7f1a7d94ef70>, <dependencyGraph.Codelet object at 0x7f1a7d94efd0>, <dependencyGraph.Codelet object at 0x7f1a7d94ed60>]
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp7 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
p__br_tmp5 = 1;
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1;
p__br_tmp10 = 1==1&&!(p_src==20)&&1==1&&1==1;
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1&&1==1;
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f1a7d94ebb0>}
total number of nodes created:  11
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  11
total number of nodes created:  11
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  11
number of nodes in comp_graph:  11
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;', 'p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);', 'p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);', 'p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);', 'p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;', 'p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1&&1==1;', 'p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;', 'p__br_tmp10 = 1==1&&!(p_src==20)&&1==1&&1==1;', 'p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1;', 'p__br_tmp5 = 1;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p__br_tmp6', 'p_established00', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p__br_tmp6', 'p_established00', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp7', 'p__br_tmp6', 'p_drop']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp7', 'p__br_tmp6', 'p_drop']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['established', 'p_established00']
 node inputs:  ['established', 'p__br_tmp7']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp6', 'p_established00', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
redundant outputs []
adj_inputs ['p__br_tmp6', 'p_established00', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['p__br_tmp00', 'p__br_tmp40', 'established', 'p__br_tmp30']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp00', 'p__br_tmp40', 'p__br_tmp30']
 	| cannot merge: too many inputs.
     | not a merge candidate.
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 node outputs:  ['p__br_tmp7']
 node inputs:  ['p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40']
 exclude_read_write_flanks: successor inputs:  {'established', 'p__br_tmp7'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 * recursive_merge: node ::  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p__br_tmp00', 'p__br_tmp20', 'p__br_tmp10']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp6', 'p_established00', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp10 = 1==1&&!(p_src==20)&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 * recursive_merge: node ::  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 node outputs:  ['p_array_index0']
 node inputs:  ['p_dst', 'p_src', 'p__br_tmp5', 'p_array_index']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
     |  p__br_tmp5 = 1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 * recursive_merge: node ::  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp40']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1&&1==1;
 node outputs:  ['p__br_tmp30']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp20']
 node inputs:  ['p_dst']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp20', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp10 = 1==1&&!(p_src==20)&&1==1&&1==1;
 node outputs:  ['p__br_tmp10']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp20', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp10 = 1==1&&!(p_src==20)&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1;
 node outputs:  ['p__br_tmp00']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp40', 'p__br_tmp20', 'p__br_tmp30', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1;
 * recursive_merge: node ::  p__br_tmp5 = 1;
 node outputs:  ['p__br_tmp5']
 node inputs:  []
 exclude_read_write_flanks: successor inputs:  {'p_dst', 'p__br_tmp5', 'p_array_index', 'p_src'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = 1;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 --- cannot fold. too many stateless inputs:  ['p__br_tmp00', 'p__br_tmp40', 'p__br_tmp30']
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_array_index0', 'p__br_tmp7', 'p_drop0'}
{'p_array_index0', 'p__br_tmp7', 'p_drop0'}
u:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
v:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp5 = 1;
v:  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
u:  p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp00 = 1==1&&!(!(!(p_src==20))&&1==1)&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp10 = 1==1&&!(p_src==20)&&1==1&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp7']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp7', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_13_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_13_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_11_stateless_p__br_tmp7_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_11_stateless_p__br_tmp7_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp7 --------- 
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_11 , type?  STATELESS
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_12_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_12_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_12_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_12_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_12_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_12_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_12_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_12_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_12_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_12_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  3  and ALU  6
 *** found stateless dependency between ALU  4  and ALU  6
 *** found stateless dependency between ALU  5  and ALU  6
 *** found stateless dependency between ALU  6  and ALU  15
 *** found stateless dependency between ALU  7  and ALU  10
 *** found stateless dependency between ALU  8  and ALU  10
 *** found stateless dependency between ALU  9  and ALU  10
 *** found stateless dependency between ALU  10  and ALU  15
 *** found stateless dependency between ALU  11  and ALU  14
 *** found stateless dependency between ALU  12  and ALU  14
 *** found stateless dependency between ALU  13  and ALU  14
 *** found stateless dependency between ALU  14  and ALU  15
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_11  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f1a7d8fc760>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
Stateless ALU id 2 has output p__br_tmp7
 *** found dependency between stateless ALU  2  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  4
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  9
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  11
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  13
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
4,9,11,13,
+---> dependencies of ALU  1 : 

+---> dependencies of ALU  2 : 
0,
+---> dependencies of ALU  3 : 
6,
+---> dependencies of ALU  4 : 
6,
+---> dependencies of ALU  5 : 
6,
+---> dependencies of ALU  6 : 
15,
+---> dependencies of ALU  7 : 
10,
+---> dependencies of ALU  8 : 
10,
+---> dependencies of ALU  9 : 
10,
+---> dependencies of ALU  10 : 
15,
+---> dependencies of ALU  11 : 
14,
+---> dependencies of ALU  12 : 
14,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 
15,
+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  0  and  13
 * gen_dependency_list: dependency between  2  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 4), (0, 9), (0, 11), (0, 13), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 288 rows, 210 columns and 678 nonzeros
Model fingerprint: 0xd1d87098
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 13 rows and 0 columns
Presolve removed 0 rows and 51 columns
Presolve time: 0.01s
Presolved: 301 rows, 159 columns, 712 nonzeros
Variable types: 0 continuous, 159 integer (142 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 2
T0_A_5 -0
T0_A_6 3
T0_A_7 -0
T0_A_8 -0
T0_A_9 2
T0_A_10 3
T0_A_11 2
T0_A_12 -0
T0_A_13 2
T0_A_14 3
T0_A_15 4
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  2.0
action:  4
num stages:  5
stage:  -0.0
action:  5
num stages:  5
stage:  3.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  2.0
action:  9
num stages:  5
stage:  3.0
action:  10
num stages:  5
stage:  2.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
stage:  2.0
action:  13
num stages:  5
stage:  3.0
action:  14
num stages:  5
stage:  4.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
alu  4  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
alu  5  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
alu  6  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
alu  9  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
alu  10  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
alu  11  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  13 :  2.0
 > get_alu_stage: table  0 , alu_id =  13 :  2.0
alu  13  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
alu  14  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
alu  15  is of type  STATELESS ; scheduled to stage  4
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f1a7d8fc5e0>, 0), (<alus.DominoALU object at 0x7f1a7d8fc7c0>, 1), (<alus.DominoALU object at 0x7f1a7d8fc7f0>, 2), (<alus.DominoALU object at 0x7f1a7d8fc610>, 3), (<alus.DominoALU object at 0x7f1a7d8fcca0>, 4), (<alus.DominoALU object at 0x7f1a7d8fcbb0>, 5), (<alus.DominoALU object at 0x7f1a7d8fca60>, 6), (<alus.DominoALU object at 0x7f1a7d8fcc10>, 7), (<alus.DominoALU object at 0x7f1a7d8fccd0>, 8), (<alus.DominoALU object at 0x7f1a7d8fcd60>, 9), (<alus.DominoALU object at 0x7f1a7d8fca30>, 10), (<alus.DominoALU object at 0x7f1a7d8fc790>, 11), (<alus.DominoALU object at 0x7f1a7d8fca00>, 12), (<alus.DominoALU object at 0x7f1a7d8fcb50>, 13), (<alus.DominoALU object at 0x7f1a7d8fcc40>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f1a7d8fc760>, 0)]
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  0  and  13
 * gen_dependency_list: dependency between  2  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 9), (0, 11), (0, 13), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp7', 'immediate_operand': '20'}, {'id': 3, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 4, 'opcode': 17, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '31'}, {'id': 5, 'opcode': 0, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_1', 'immediate_operand': '4'}, {'id': 6, 'opcode': 15, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 7, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 8, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 9, 'opcode': 23, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_4', 'immediate_operand': '1'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 11, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '12'}, {'id': 13, 'opcode': 12, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '11'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '4'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 9), (0, 11), (0, 13), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp7', 'immediate_operand': '20'}, {'id': 3, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 4, 'opcode': 17, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '31'}, {'id': 5, 'opcode': 0, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_1', 'immediate_operand': '4'}, {'id': 6, 'opcode': 15, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 7, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 8, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 9, 'opcode': 23, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_4', 'immediate_operand': '1'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 11, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '12'}, {'id': 13, 'opcode': 12, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '11'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '4'}]}
Time taken: 121.89155268669128 s
preprocessor time:
running mutation 5
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_5. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p__br_tmp5 = 1;

lhs p__br_tmp5 rhs 1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = 1;

 is_read_flank: processing rhs_vars =  []
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

lhs p_array_index0 rhs p__br_tmp5 ? (p_src+p_dst) : (p_array_index)
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_src', 'p_dst', 'p_array_index']
p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1);

lhs p__br_tmp00 rhs !(!(!(1==1&&p_src==20))&&1==1&&1==1)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1);

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp10 = !(1==1&&p_src==20)&&1==1&&1==1;

lhs p__br_tmp10 rhs !(1==1&&p_src==20)&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp10 = !(1==1&&p_src==20)&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;

lhs p__br_tmp20 rhs 1==1&&p_dst==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_dst']
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

lhs p__br_tmp6 rhs 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20']
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp6 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00', 'p_drop']
p__br_tmp30 = !(!(1==1&&p_src==20))&&1==1&&1==1;

lhs p__br_tmp30 rhs !(!(1==1&&p_src==20))&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp30 = !(!(1==1&&p_src==20))&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;

lhs p__br_tmp40 rhs 1==1&&p_src==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

lhs p__br_tmp7 rhs 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40']
p_established01 = p__br_tmp7 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp7 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp7 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p__br_tmp5 = 1; p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
RAW p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1); p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1); p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp10 = !(1==1&&p_src==20)&&1==1&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20); p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p__br_tmp30 = !(!(1==1&&p_src==20))&&1==1&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40); p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f2662106640>, 'write': <dependencyGraph.Statement object at 0x7f26621418e0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f2662106640>, 'write': <dependencyGraph.Statement object at 0x7f26621418e0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  13
SCC 0
v p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp7 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp7 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index) stmts len 1
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
SCC 3
v p__br_tmp5 = 1 stmts len 1
p__br_tmp5 = 1;
SCC 4
v p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20) stmts len 1
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
SCC 5
v p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40) stmts len 1
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
SCC 6
v p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1) stmts len 1
p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1);
SCC 7
v p__br_tmp10 = !(1==1&&p_src==20)&&1==1&&1==1 stmts len 1
p__br_tmp10 = !(1==1&&p_src==20)&&1==1&&1==1;
SCC 8
v p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1 stmts len 1
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
SCC 9
v p__br_tmp30 = !(!(1==1&&p_src==20))&&1==1&&1==1 stmts len 1
p__br_tmp30 = !(!(1==1&&p_src==20))&&1==1&&1==1;
SCC 10
v p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1 stmts len 1
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f2662141ca0>, <dependencyGraph.Codelet object at 0x7f2662141bb0>, <dependencyGraph.Codelet object at 0x7f2662141cd0>, <dependencyGraph.Codelet object at 0x7f2662141d90>, <dependencyGraph.Codelet object at 0x7f2662141df0>, <dependencyGraph.Codelet object at 0x7f2662141e50>, <dependencyGraph.Codelet object at 0x7f2662141eb0>, <dependencyGraph.Codelet object at 0x7f2662141f10>, <dependencyGraph.Codelet object at 0x7f2662141f70>, <dependencyGraph.Codelet object at 0x7f2662141fd0>, <dependencyGraph.Codelet object at 0x7f2662141d60>]
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp7 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
p__br_tmp5 = 1;
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1);
p__br_tmp10 = !(1==1&&p_src==20)&&1==1&&1==1;
p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
p__br_tmp30 = !(!(1==1&&p_src==20))&&1==1&&1==1;
p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f2662141bb0>}
total number of nodes created:  11
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  11
total number of nodes created:  11
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  11
number of nodes in comp_graph:  11
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;', 'p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);', 'p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);', 'p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);', 'p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;', 'p__br_tmp30 = !(!(1==1&&p_src==20))&&1==1&&1==1;', 'p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;', 'p__br_tmp10 = !(1==1&&p_src==20)&&1==1&&1==1;', 'p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1);', 'p__br_tmp5 = 1;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_established00', 'p_drop', 'p__br_tmp6']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_established00', 'p_drop', 'p__br_tmp6']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp7', 'p__br_tmp6', 'p_drop']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp7', 'p__br_tmp6', 'p_drop']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established00', 'established']
 node inputs:  ['established', 'p__br_tmp7']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p_drop', 'p__br_tmp6'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
redundant outputs []
adj_inputs ['p_established00', 'p_drop', 'p__br_tmp6']
redundant outputs []
state_var ['established']
     | merged inputs:  ['p__br_tmp40', 'p__br_tmp00', 'established', 'p__br_tmp30']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp40', 'p__br_tmp00', 'p__br_tmp30']
 	| cannot merge: too many inputs.
     | not a merge candidate.
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 node outputs:  ['p__br_tmp7']
 node inputs:  ['p__br_tmp30', 'p__br_tmp00', 'p__br_tmp40']
 exclude_read_write_flanks: successor inputs:  {'established', 'p__br_tmp7'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp30 = !(!(1==1&&p_src==20))&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 * recursive_merge: node ::  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p__br_tmp20', 'p__br_tmp10', 'p__br_tmp00']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p_drop', 'p__br_tmp6'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp10 = !(1==1&&p_src==20)&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 * recursive_merge: node ::  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 node outputs:  ['p_array_index0']
 node inputs:  ['p_src', 'p_dst', 'p__br_tmp5', 'p_array_index']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
     |  p__br_tmp5 = 1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 * recursive_merge: node ::  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp40']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp30', 'p__br_tmp00', 'p__br_tmp40'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp30 = !(!(1==1&&p_src==20))&&1==1&&1==1;
 node outputs:  ['p__br_tmp30']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp30', 'p__br_tmp00', 'p__br_tmp40'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp30 = !(!(1==1&&p_src==20))&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp20']
 node inputs:  ['p_dst']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp20', 'p__br_tmp10', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp10 = !(1==1&&p_src==20)&&1==1&&1==1;
 node outputs:  ['p__br_tmp10']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp20', 'p__br_tmp10', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp10 = !(1==1&&p_src==20)&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1);
 node outputs:  ['p__br_tmp00']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp20', 'p__br_tmp40', 'p__br_tmp10', 'p__br_tmp00', 'p__br_tmp30'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1);
 * recursive_merge: node ::  p__br_tmp5 = 1;
 node outputs:  ['p__br_tmp5']
 node inputs:  []
 exclude_read_write_flanks: successor inputs:  {'p_src', 'p_dst', 'p__br_tmp5', 'p_array_index'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = 1;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 --- cannot fold. too many stateless inputs:  ['p__br_tmp40', 'p__br_tmp00', 'p__br_tmp30']
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_array_index0', 'p_drop0', 'p__br_tmp7'}
{'p_array_index0', 'p_drop0', 'p__br_tmp7'}
u:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
v:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp5 = 1;
v:  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
u:  p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1);
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp00 = !(!(!(1==1&&p_src==20))&&1==1&&1==1);
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp10 = !(1==1&&p_src==20)&&1==1&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp20 = 1==1&&p_dst==20&&1==1&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp30 = !(!(1==1&&p_src==20))&&1==1&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp40 = 1==1&&p_src==20&&1==1&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp7']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp7', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_13_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_13_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_12_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_12_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_12_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_12_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_12_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_12_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_12_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_12_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_12_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_12_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_11_stateless_p__br_tmp7_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_11_stateless_p__br_tmp7_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp7 --------- 
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_11 , type?  STATELESS
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** found stateless dependency between ALU  0  and ALU  4
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** found stateless dependency between ALU  0  and ALU  10
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** found stateless dependency between ALU  0  and ALU  11
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_11  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f26620f6760>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_11'}
Stateless ALU id 15 has output p__br_tmp7
 *** found dependency between stateless ALU  15  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
4,10,11,
+---> dependencies of ALU  1 : 

+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 
0,
# alus: =  16
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 4), (0, 10), (0, 11), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 287 rows, 210 columns and 676 nonzeros
Model fingerprint: 0x95c571b2
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 21 rows and 0 columns
Presolve removed 0 rows and 47 columns
Presolve time: 0.01s
Presolved: 308 rows, 163 columns, 730 nonzeros
Variable types: 0 continuous, 163 integer (146 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 10.0000000
Found heuristic solution: objective 8.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 4: 4 8 10 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 2
T0_A_5 3
T0_A_6 -0
T0_A_7 -0
T0_A_8 -0
T0_A_9 1
T0_A_10 2
T0_A_11 2
T0_A_12 -0
T0_A_13 3
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  2.0
action:  4
num stages:  5
stage:  3.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  1.0
action:  9
num stages:  5
stage:  2.0
action:  10
num stages:  5
stage:  2.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
stage:  3.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
alu  4  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
alu  5  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  1.0
 > get_alu_stage: table  0 , alu_id =  9 :  1.0
alu  9  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
alu  10  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
alu  11  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
alu  13  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f26620f65e0>, 0), (<alus.DominoALU object at 0x7f26620f6550>, 1), (<alus.DominoALU object at 0x7f26620f65b0>, 2), (<alus.DominoALU object at 0x7f26620f6cd0>, 3), (<alus.DominoALU object at 0x7f26620f6610>, 4), (<alus.DominoALU object at 0x7f26620f67f0>, 5), (<alus.DominoALU object at 0x7f26620f6d00>, 6), (<alus.DominoALU object at 0x7f26620f6ac0>, 7), (<alus.DominoALU object at 0x7f26620f69a0>, 8), (<alus.DominoALU object at 0x7f26620f67c0>, 9), (<alus.DominoALU object at 0x7f26620f68b0>, 10), (<alus.DominoALU object at 0x7f26620f6580>, 11), (<alus.DominoALU object at 0x7f26620f6a90>, 12), (<alus.DominoALU object at 0x7f26620f6a00>, 13), (<alus.DominoALU object at 0x7f26620f6be0>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f26620f6760>, 0)]
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 10), (0, 11), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 2, 'opcode': 14, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '17'}, {'id': 3, 'opcode': 5, 'operand0': 'p_drop', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 5, 'operand0': '1', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '0'}, {'id': 5, 'opcode': 5, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '20'}, {'id': 6, 'opcode': 13, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '31'}, {'id': 7, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 20, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '2'}, {'id': 9, 'opcode': 15, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '31'}, {'id': 10, 'opcode': 5, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 12, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_6', 'immediate_operand': '28'}, {'id': 12, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '31'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '8'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '7'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp7', 'immediate_operand': '20'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 10), (0, 11), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 2, 'opcode': 14, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '17'}, {'id': 3, 'opcode': 5, 'operand0': 'p_drop', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 5, 'operand0': '1', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '0'}, {'id': 5, 'opcode': 5, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '20'}, {'id': 6, 'opcode': 13, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '31'}, {'id': 7, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 20, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '2'}, {'id': 9, 'opcode': 15, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '31'}, {'id': 10, 'opcode': 5, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 12, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_6', 'immediate_operand': '28'}, {'id': 12, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '31'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '8'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '7'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp7', 'immediate_operand': '20'}]}
Time taken: 33.39793848991394 s
preprocessor time:
running mutation 6
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_6. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p__br_tmp9 = 1;

lhs p__br_tmp9 rhs 1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp9 = 1;

 is_read_flank: processing rhs_vars =  []
p_array_index0 = p__br_tmp9 ? (p_src+p_dst) : (p_array_index);

lhs p_array_index0 rhs p__br_tmp9 ? (p_src+p_dst) : (p_array_index)
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p__br_tmp9 ? (p_src+p_dst) : (p_array_index);

 is_read_flank: processing rhs_vars =  ['p__br_tmp9', 'p_src', 'p_dst', 'p_array_index']
p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1;

lhs p__br_tmp00 rhs !(!(!(!(!(!(!(p_src==20)))))))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp10 = !(!(!(!(!(p_src==20)))))&&1==1;

lhs p__br_tmp10 rhs !(!(!(!(!(p_src==20)))))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp10 = !(!(!(!(!(p_src==20)))))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp20 = !(!(!(p_src==20)))&&1==1;

lhs p__br_tmp20 rhs !(!(!(p_src==20)))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp20 = !(!(!(p_src==20)))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp30 = !(p_src==20)&&1==1;

lhs p__br_tmp30 rhs !(p_src==20)&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp30 = !(p_src==20)&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp40 = p_dst==20&&1==1;

lhs p__br_tmp40 rhs p_dst==20&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp40 = p_dst==20&&1==1;

 is_read_flank: processing rhs_vars =  ['p_dst']
p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);

lhs p__br_tmp11 rhs 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20', 'p__br_tmp30', 'p__br_tmp40']
p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp11 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp11', 'p_established00', 'p_drop']
p__br_tmp50 = !(!(!(!(!(!(p_src==20))))))&&1==1;

lhs p__br_tmp50 rhs !(!(!(!(!(!(p_src==20))))))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp50 = !(!(!(!(!(!(p_src==20))))))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp60 = !(!(!(!(p_src==20))))&&1==1;

lhs p__br_tmp60 rhs !(!(!(!(p_src==20))))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp60 = !(!(!(!(p_src==20))))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp70 = !(!(p_src==20))&&1==1;

lhs p__br_tmp70 rhs !(!(p_src==20))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp70 = !(!(p_src==20))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp80 = p_src==20&&1==1;

lhs p__br_tmp80 rhs p_src==20&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp80 = p_src==20&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);

lhs p__br_tmp12 rhs 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp50', 'p__br_tmp60', 'p__br_tmp70', 'p__br_tmp80']
p_established01 = p__br_tmp12 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp12 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp12 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp12', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp12 ? (1) : (p_established00);
RAW p__br_tmp9 = 1; p_array_index0 = p__br_tmp9 ? (p_src+p_dst) : (p_array_index);
RAW p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1; p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1; p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
RAW p__br_tmp10 = !(!(!(!(!(p_src==20)))))&&1==1; p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp20 = !(!(!(p_src==20)))&&1==1; p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp30 = !(p_src==20)&&1==1; p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp40 = p_dst==20&&1==1; p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40); p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);
RAW p__br_tmp50 = !(!(!(!(!(!(p_src==20))))))&&1==1; p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
RAW p__br_tmp60 = !(!(!(!(p_src==20))))&&1==1; p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
RAW p__br_tmp70 = !(!(p_src==20))&&1==1; p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
RAW p__br_tmp80 = p_src==20&&1==1; p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
RAW p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80); p_established01 = p__br_tmp12 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp12 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f14431ae640>, 'write': <dependencyGraph.Statement object at 0x7f14431e9160>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f14431ae640>, 'write': <dependencyGraph.Statement object at 0x7f14431e9160>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  17
SCC 0
v p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp12 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp12 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p__br_tmp9 ? (p_src+p_dst) : (p_array_index) stmts len 1
p_array_index0 = p__br_tmp9 ? (p_src+p_dst) : (p_array_index);
SCC 3
v p__br_tmp9 = 1 stmts len 1
p__br_tmp9 = 1;
SCC 4
v p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40) stmts len 1
p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
SCC 5
v p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80) stmts len 1
p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
SCC 6
v p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1 stmts len 1
p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1;
SCC 7
v p__br_tmp10 = !(!(!(!(!(p_src==20)))))&&1==1 stmts len 1
p__br_tmp10 = !(!(!(!(!(p_src==20)))))&&1==1;
SCC 8
v p__br_tmp20 = !(!(!(p_src==20)))&&1==1 stmts len 1
p__br_tmp20 = !(!(!(p_src==20)))&&1==1;
SCC 9
v p__br_tmp30 = !(p_src==20)&&1==1 stmts len 1
p__br_tmp30 = !(p_src==20)&&1==1;
SCC 10
v p__br_tmp40 = p_dst==20&&1==1 stmts len 1
p__br_tmp40 = p_dst==20&&1==1;
SCC 11
v p__br_tmp50 = !(!(!(!(!(!(p_src==20))))))&&1==1 stmts len 1
p__br_tmp50 = !(!(!(!(!(!(p_src==20))))))&&1==1;
SCC 12
v p__br_tmp60 = !(!(!(!(p_src==20))))&&1==1 stmts len 1
p__br_tmp60 = !(!(!(!(p_src==20))))&&1==1;
SCC 13
v p__br_tmp70 = !(!(p_src==20))&&1==1 stmts len 1
p__br_tmp70 = !(!(p_src==20))&&1==1;
SCC 14
v p__br_tmp80 = p_src==20&&1==1 stmts len 1
p__br_tmp80 = p_src==20&&1==1;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f14431e9eb0>, <dependencyGraph.Codelet object at 0x7f14431e9fa0>, <dependencyGraph.Codelet object at 0x7f14431e9ee0>, <dependencyGraph.Codelet object at 0x7f14431e9fd0>, <dependencyGraph.Codelet object at 0x7f144319f100>, <dependencyGraph.Codelet object at 0x7f144319f190>, <dependencyGraph.Codelet object at 0x7f144319f130>, <dependencyGraph.Codelet object at 0x7f144319f220>, <dependencyGraph.Codelet object at 0x7f144319f280>, <dependencyGraph.Codelet object at 0x7f144319f2e0>, <dependencyGraph.Codelet object at 0x7f144319f340>, <dependencyGraph.Codelet object at 0x7f144319f3a0>, <dependencyGraph.Codelet object at 0x7f144319f400>, <dependencyGraph.Codelet object at 0x7f144319f460>, <dependencyGraph.Codelet object at 0x7f144319f4c0>]
p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp12 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p__br_tmp9 ? (p_src+p_dst) : (p_array_index);
p__br_tmp9 = 1;
p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1;
p__br_tmp10 = !(!(!(!(!(p_src==20)))))&&1==1;
p__br_tmp20 = !(!(!(p_src==20)))&&1==1;
p__br_tmp30 = !(p_src==20)&&1==1;
p__br_tmp40 = p_dst==20&&1==1;
p__br_tmp50 = !(!(!(!(!(!(p_src==20))))))&&1==1;
p__br_tmp60 = !(!(!(!(p_src==20))))&&1==1;
p__br_tmp70 = !(!(p_src==20))&&1==1;
p__br_tmp80 = p_src==20&&1==1;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f14431e9fa0>}
total number of nodes created:  15
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  15
total number of nodes created:  15
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp12 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp12 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  15
number of nodes in comp_graph:  15
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp12 ? (1) : (p_established00); established = p_established01;', 'p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);', 'p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);', 'p_array_index0 = p__br_tmp9 ? (p_src+p_dst) : (p_array_index);', 'p__br_tmp80 = p_src==20&&1==1;', 'p__br_tmp70 = !(!(p_src==20))&&1==1;', 'p__br_tmp60 = !(!(!(!(p_src==20))))&&1==1;', 'p__br_tmp50 = !(!(!(!(!(!(p_src==20))))))&&1==1;', 'p__br_tmp40 = p_dst==20&&1==1;', 'p__br_tmp30 = !(p_src==20)&&1==1;', 'p__br_tmp20 = !(!(!(p_src==20)))&&1==1;', 'p__br_tmp10 = !(!(!(!(!(p_src==20)))))&&1==1;', 'p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1;', 'p__br_tmp9 = 1;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_drop', 'p__br_tmp11', 'p_established00']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp12 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_drop', 'p__br_tmp11', 'p_established00']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p_drop', 'p__br_tmp11', 'p__br_tmp12']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_drop', 'p__br_tmp11', 'p__br_tmp12']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);
     |  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp12 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['established', 'p_established00']
 node inputs:  ['established', 'p__br_tmp12']
 exclude_read_write_flanks: successor inputs:  {'p_drop', 'p__br_tmp11', 'p_established00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp12 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
redundant outputs []
adj_inputs ['p_drop', 'p__br_tmp11', 'p_established00']
redundant outputs []
state_var ['established']
     | merged inputs:  ['p__br_tmp50', 'p__br_tmp70', 'p__br_tmp60', 'p__br_tmp00', 'p__br_tmp80', 'established']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp50', 'p__br_tmp70', 'p__br_tmp60', 'p__br_tmp00', 'p__br_tmp80']
 	| cannot merge: too many inputs.
     | not a merge candidate.
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp12 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
 node outputs:  ['p__br_tmp12']
 node inputs:  ['p__br_tmp50', 'p__br_tmp70', 'p__br_tmp60', 'p__br_tmp00', 'p__br_tmp80']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp12', 'established'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
     |  p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
     |  p__br_tmp50 = !(!(!(!(!(!(p_src==20))))))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
     |  p__br_tmp60 = !(!(!(!(p_src==20))))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
     |  p__br_tmp70 = !(!(p_src==20))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
     |  p__br_tmp80 = p_src==20&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
 * recursive_merge: node ::  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
 node outputs:  ['p__br_tmp11']
 node inputs:  ['p__br_tmp10', 'p__br_tmp30', 'p__br_tmp40', 'p__br_tmp20', 'p__br_tmp00']
 exclude_read_write_flanks: successor inputs:  {'p_drop', 'p__br_tmp11', 'p_established00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp10 = !(!(!(!(!(p_src==20)))))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp20 = !(!(!(p_src==20)))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp30 = !(p_src==20)&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp40 = p_dst==20&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
 * recursive_merge: node ::  p_array_index0 = p__br_tmp9 ? (p_src+p_dst) : (p_array_index);
 node outputs:  ['p_array_index0']
 node inputs:  ['p__br_tmp9', 'p_src', 'p_dst', 'p_array_index']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_array_index0 = p__br_tmp9 ? (p_src+p_dst) : (p_array_index);
     |  p__br_tmp9 = 1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_array_index0 = p__br_tmp9 ? (p_src+p_dst) : (p_array_index);
 * recursive_merge: node ::  p__br_tmp80 = p_src==20&&1==1;
 node outputs:  ['p__br_tmp80']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp50', 'p__br_tmp70', 'p__br_tmp60', 'p__br_tmp00', 'p__br_tmp80'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp80 = p_src==20&&1==1;
 * recursive_merge: node ::  p__br_tmp70 = !(!(p_src==20))&&1==1;
 node outputs:  ['p__br_tmp70']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp50', 'p__br_tmp70', 'p__br_tmp60', 'p__br_tmp00', 'p__br_tmp80'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp70 = !(!(p_src==20))&&1==1;
 * recursive_merge: node ::  p__br_tmp60 = !(!(!(!(p_src==20))))&&1==1;
 node outputs:  ['p__br_tmp60']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp50', 'p__br_tmp70', 'p__br_tmp60', 'p__br_tmp00', 'p__br_tmp80'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp60 = !(!(!(!(p_src==20))))&&1==1;
 * recursive_merge: node ::  p__br_tmp50 = !(!(!(!(!(!(p_src==20))))))&&1==1;
 node outputs:  ['p__br_tmp50']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp50', 'p__br_tmp70', 'p__br_tmp60', 'p__br_tmp00', 'p__br_tmp80'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp50 = !(!(!(!(!(!(p_src==20))))))&&1==1;
 * recursive_merge: node ::  p__br_tmp40 = p_dst==20&&1==1;
 node outputs:  ['p__br_tmp40']
 node inputs:  ['p_dst']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp10', 'p__br_tmp30', 'p__br_tmp40', 'p__br_tmp20', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp40 = p_dst==20&&1==1;
 * recursive_merge: node ::  p__br_tmp30 = !(p_src==20)&&1==1;
 node outputs:  ['p__br_tmp30']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp10', 'p__br_tmp30', 'p__br_tmp40', 'p__br_tmp20', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp30 = !(p_src==20)&&1==1;
 * recursive_merge: node ::  p__br_tmp20 = !(!(!(p_src==20)))&&1==1;
 node outputs:  ['p__br_tmp20']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp10', 'p__br_tmp30', 'p__br_tmp40', 'p__br_tmp20', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp20 = !(!(!(p_src==20)))&&1==1;
 * recursive_merge: node ::  p__br_tmp10 = !(!(!(!(!(p_src==20)))))&&1==1;
 node outputs:  ['p__br_tmp10']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp10', 'p__br_tmp30', 'p__br_tmp40', 'p__br_tmp20', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp10 = !(!(!(!(!(p_src==20)))))&&1==1;
 * recursive_merge: node ::  p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1;
 node outputs:  ['p__br_tmp00']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp10', 'p__br_tmp30', 'p__br_tmp50', 'p__br_tmp70', 'p__br_tmp40', 'p__br_tmp20', 'p__br_tmp60', 'p__br_tmp00', 'p__br_tmp80'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1;
 * recursive_merge: node ::  p__br_tmp9 = 1;
 node outputs:  ['p__br_tmp9']
 node inputs:  []
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp9', 'p_src', 'p_array_index', 'p_dst'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp9 = 1;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp12 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
 --- cannot fold. too many stateless inputs:  ['p__br_tmp50', 'p__br_tmp70', 'p__br_tmp60', 'p__br_tmp00', 'p__br_tmp80']
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp12', 'p_drop0', 'p_array_index0'}
{'p__br_tmp12', 'p_drop0', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp12 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);
u:  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
v:  p_established00 = established; p_established01 = p__br_tmp12 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
v:  p_drop0 = p__br_tmp11 ? (p_established00==0) : (p_drop);
u:  p__br_tmp9 = 1;
v:  p_array_index0 = p__br_tmp9 ? (p_src+p_dst) : (p_array_index);
u:  p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1;
v:  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp00 = !(!(!(!(!(!(!(p_src==20)))))))&&1==1;
v:  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
u:  p__br_tmp10 = !(!(!(!(!(p_src==20)))))&&1==1;
v:  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp20 = !(!(!(p_src==20)))&&1==1;
v:  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp30 = !(p_src==20)&&1==1;
v:  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp40 = p_dst==20&&1==1;
v:  p__br_tmp11 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp50 = !(!(!(!(!(!(p_src==20))))))&&1==1;
v:  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
u:  p__br_tmp60 = !(!(!(!(p_src==20))))&&1==1;
v:  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
u:  p__br_tmp70 = !(!(p_src==20))&&1==1;
v:  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
u:  p__br_tmp80 = p_src==20&&1==1;
v:  p__br_tmp12 = 1&&!(p__br_tmp00)&&(p__br_tmp50)&&(p__br_tmp60)&&(p__br_tmp70)&&(p__br_tmp80);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp12']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp12', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_15_stateless_p__br_tmp12_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_15_stateless_p__br_tmp12_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_15_stateless_p__br_tmp12_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_15_stateless_p__br_tmp12_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp12 --------- 
filename_to_compname: filename =  comp_15_stateless_p__br_tmp12_bnd_1.sk.out
['comp_15']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_15 , type?  STATELESS
filename_to_compname: filename =  comp_15_stateless_p__br_tmp12_bnd_1.sk.out
['comp_15']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_16_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_16_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_16_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_16_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_16_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_16_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_16_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_16_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_16_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_16_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_16 , type?  STATELESS
filename_to_compname: filename =  comp_16_stateless_p_drop0_bnd_3.sk.out
['comp_16']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_17_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_17_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_17_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_17_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_17_stateless_p_array_index0_bnd_1.sk.out
['comp_17']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_17 , type?  STATELESS
filename_to_compname: filename =  comp_17_stateless_p_array_index0_bnd_1.sk.out
['comp_17']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_15  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f14431e9e50>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
Stateless ALU id 1 has output p__br_tmp12
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** found stateless dependency between ALU  0  and ALU  10
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_16  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_15', 2: 'comp_16', 3: 'comp_16', 4: 'comp_16', 5: 'comp_16', 6: 'comp_16', 7: 'comp_16', 8: 'comp_16', 9: 'comp_16', 10: 'comp_16', 11: 'comp_16', 12: 'comp_16', 13: 'comp_16', 14: 'comp_16', 15: 'comp_17'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
8,10,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 8), (0, 10), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 286 rows, 210 columns and 674 nonzeros
Model fingerprint: 0xdf4e901a
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 25 rows and 0 columns
Presolve removed 0 rows and 45 columns
Presolve time: 0.01s
Presolved: 311 rows, 165 columns, 738 nonzeros
Variable types: 0 continuous, 165 integer (148 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 7.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 3: 4 7 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 -0
T0_A_5 1
T0_A_6 -0
T0_A_7 -0
T0_A_8 2
T0_A_9 3
T0_A_10 2
T0_A_11 -0
T0_A_12 -0
T0_A_13 3
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  1.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  2.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
stage:  3.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  1.0
 > get_alu_stage: table  0 , alu_id =  5 :  1.0
alu  5  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
alu  10  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
alu  13  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f14431e9e80>, 0), (<alus.DominoALU object at 0x7f144319ff70>, 1), (<alus.DominoALU object at 0x7f144319fbb0>, 2), (<alus.DominoALU object at 0x7f144319ff10>, 3), (<alus.DominoALU object at 0x7f144319fd90>, 4), (<alus.DominoALU object at 0x7f144319ffd0>, 5), (<alus.DominoALU object at 0x7f144319ff40>, 6), (<alus.DominoALU object at 0x7f144319fb20>, 7), (<alus.DominoALU object at 0x7f144319fee0>, 8), (<alus.DominoALU object at 0x7f144319fe50>, 9), (<alus.DominoALU object at 0x7f144319fbe0>, 10), (<alus.DominoALU object at 0x7f144319ffa0>, 11), (<alus.DominoALU object at 0x7f144319fe80>, 12), (<alus.DominoALU object at 0x7f144319fdc0>, 13), (<alus.DominoALU object at 0x7f14431e9760>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f14431e9e50>, 0)]
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 8), (0, 10), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp12'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp12', 'immediate_operand': '20'}, {'id': 2, 'opcode': 8, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 5, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 3, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 14, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_3', 'immediate_operand': '16'}, {'id': 8, 'opcode': 13, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '1'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_6', 'immediate_operand': '19'}, {'id': 12, 'opcode': 9, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '26'}, {'id': 13, 'opcode': 15, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '16'}, {'id': 15, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 8), (0, 10), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp12'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp12', 'immediate_operand': '20'}, {'id': 2, 'opcode': 8, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 5, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 3, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 14, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_3', 'immediate_operand': '16'}, {'id': 8, 'opcode': 13, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '1'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_6', 'immediate_operand': '19'}, {'id': 12, 'opcode': 9, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '26'}, {'id': 13, 'opcode': 15, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '16'}, {'id': 15, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}]}
Time taken: 236.88381361961365 s
preprocessor time:
running mutation 7
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_7. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p__br_tmp6 = 1;

lhs p__br_tmp6 rhs 1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = 1;

 is_read_flank: processing rhs_vars =  []
p_array_index0 = p__br_tmp6 ? (p_src+p_dst) : (p_array_index);

lhs p_array_index0 rhs p__br_tmp6 ? (p_src+p_dst) : (p_array_index)
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p__br_tmp6 ? (p_src+p_dst) : (p_array_index);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_src', 'p_dst', 'p_array_index']
p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1));

lhs p__br_tmp00 rhs !(!(!(!(p_src==20&&1==1))&&1==1))
state_vars {'established'}
read/write flanks: processing line  p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1));

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp10 = 1==1&&!(!(p_src==20&&1==1));

lhs p__br_tmp10 rhs 1==1&&!(!(p_src==20&&1==1))
state_vars {'established'}
read/write flanks: processing line  p__br_tmp10 = 1==1&&!(!(p_src==20&&1==1));

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp20 = 1==1&&1==1&&p_src==20;

lhs p__br_tmp20 rhs 1==1&&1==1&&p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp20 = 1==1&&1==1&&p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

lhs p__br_tmp7 rhs 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20']
p_established01 = p__br_tmp7 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp7 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp7 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_established00']
p__br_tmp30 = !(!(!(p_src==20&&1==1))&&1==1);

lhs p__br_tmp30 rhs !(!(!(p_src==20&&1==1))&&1==1)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp30 = !(!(!(p_src==20&&1==1))&&1==1);

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp40 = 1==1&&!(p_src==20&&1==1);

lhs p__br_tmp40 rhs 1==1&&!(p_src==20&&1==1)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp40 = 1==1&&!(p_src==20&&1==1);

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp50 = 1==1&&1==1&&p_dst==20;

lhs p__br_tmp50 rhs 1==1&&1==1&&p_dst==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp50 = 1==1&&1==1&&p_dst==20;

 is_read_flank: processing rhs_vars =  ['p_dst']
p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);

lhs p__br_tmp8 rhs 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40', 'p__br_tmp50']
p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp8 ? (p_established01==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp8', 'p_established01', 'p_drop']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p__br_tmp6 = 1; p_array_index0 = p__br_tmp6 ? (p_src+p_dst) : (p_array_index);
RAW p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1)); p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1)); p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
RAW p__br_tmp10 = 1==1&&!(!(p_src==20&&1==1)); p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp20 = 1==1&&1==1&&p_src==20; p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20); p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp7 ? (1) : (p_established00); p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);
RAW p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
RAW p__br_tmp30 = !(!(!(p_src==20&&1==1))&&1==1); p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
RAW p__br_tmp40 = 1==1&&!(p_src==20&&1==1); p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
RAW p__br_tmp50 = 1==1&&1==1&&p_dst==20; p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
RAW p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50); p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f1fc7389640>, 'write': <dependencyGraph.Statement object at 0x7f1fc73c43a0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f1fc7389640>, 'write': <dependencyGraph.Statement object at 0x7f1fc73c43a0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  14
SCC 0
v p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp7 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp7 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p__br_tmp6 ? (p_src+p_dst) : (p_array_index) stmts len 1
p_array_index0 = p__br_tmp6 ? (p_src+p_dst) : (p_array_index);
SCC 3
v p__br_tmp6 = 1 stmts len 1
p__br_tmp6 = 1;
SCC 4
v p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20) stmts len 1
p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
SCC 5
v p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50) stmts len 1
p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
SCC 6
v p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1)) stmts len 1
p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1));
SCC 7
v p__br_tmp10 = 1==1&&!(!(p_src==20&&1==1)) stmts len 1
p__br_tmp10 = 1==1&&!(!(p_src==20&&1==1));
SCC 8
v p__br_tmp20 = 1==1&&1==1&&p_src==20 stmts len 1
p__br_tmp20 = 1==1&&1==1&&p_src==20;
SCC 9
v p__br_tmp30 = !(!(!(p_src==20&&1==1))&&1==1) stmts len 1
p__br_tmp30 = !(!(!(p_src==20&&1==1))&&1==1);
SCC 10
v p__br_tmp40 = 1==1&&!(p_src==20&&1==1) stmts len 1
p__br_tmp40 = 1==1&&!(p_src==20&&1==1);
SCC 11
v p__br_tmp50 = 1==1&&1==1&&p_dst==20 stmts len 1
p__br_tmp50 = 1==1&&1==1&&p_dst==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f1fc73c4df0>, <dependencyGraph.Codelet object at 0x7f1fc73c4e20>, <dependencyGraph.Codelet object at 0x7f1fc73c4ee0>, <dependencyGraph.Codelet object at 0x7f1fc73c4f40>, <dependencyGraph.Codelet object at 0x7f1fc73c4fa0>, <dependencyGraph.Codelet object at 0x7f1fc73c4460>, <dependencyGraph.Codelet object at 0x7f1fc73c4e50>, <dependencyGraph.Codelet object at 0x7f1fc73c4f10>, <dependencyGraph.Codelet object at 0x7f1fc73c4eb0>, <dependencyGraph.Codelet object at 0x7f1fc737a130>, <dependencyGraph.Codelet object at 0x7f1fc737a190>, <dependencyGraph.Codelet object at 0x7f1fc737a1f0>]
p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp7 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p__br_tmp6 ? (p_src+p_dst) : (p_array_index);
p__br_tmp6 = 1;
p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1));
p__br_tmp10 = 1==1&&!(!(p_src==20&&1==1));
p__br_tmp20 = 1==1&&1==1&&p_src==20;
p__br_tmp30 = !(!(!(p_src==20&&1==1))&&1==1);
p__br_tmp40 = 1==1&&!(p_src==20&&1==1);
p__br_tmp50 = 1==1&&1==1&&p_dst==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f1fc73c4e20>}
total number of nodes created:  12
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established01'}
p_established01  is write flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  12
total number of nodes created:  12
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  12
number of nodes in comp_graph:  12
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;', 'p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);', 'p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);', 'p_array_index0 = p__br_tmp6 ? (p_src+p_dst) : (p_array_index);', 'p__br_tmp50 = 1==1&&1==1&&p_dst==20;', 'p__br_tmp40 = 1==1&&!(p_src==20&&1==1);', 'p__br_tmp30 = !(!(!(p_src==20&&1==1))&&1==1);', 'p__br_tmp20 = 1==1&&1==1&&p_src==20;', 'p__br_tmp10 = 1==1&&!(!(p_src==20&&1==1));', 'p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1));', 'p__br_tmp6 = 1;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p__br_tmp8', 'p_drop', 'p_established01']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p__br_tmp8', 'p_drop', 'p_established01']
redundant outputs ['p_established00']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p_drop', 'p__br_tmp7', 'p__br_tmp8']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_drop', 'p__br_tmp7', 'p__br_tmp8']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);
     |  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['established', 'p_established01']
 node inputs:  ['established', 'p__br_tmp7']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp8', 'p_drop', 'p_established01'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established01']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
redundant outputs []
adj_inputs ['p__br_tmp8', 'p_drop', 'p_established01']
redundant outputs []
state_var ['established']
     | merged inputs:  ['established', 'p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20']
 	| cannot merge: too many inputs.
     | not a merge candidate.
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
 node outputs:  ['p__br_tmp8']
 node inputs:  ['p__br_tmp00', 'p__br_tmp50', 'p__br_tmp40', 'p__br_tmp30']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp8', 'p_drop', 'p_established01'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
     |  p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1));
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
     |  p__br_tmp30 = !(!(!(p_src==20&&1==1))&&1==1);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
     |  p__br_tmp40 = 1==1&&!(p_src==20&&1==1);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
     |  p__br_tmp50 = 1==1&&1==1&&p_dst==20;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
 * recursive_merge: node ::  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 node outputs:  ['p__br_tmp7']
 node inputs:  ['p__br_tmp10', 'p__br_tmp00', 'p__br_tmp20']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp7', 'established'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1));
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp10 = 1==1&&!(!(p_src==20&&1==1));
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp20 = 1==1&&1==1&&p_src==20;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 * recursive_merge: node ::  p_array_index0 = p__br_tmp6 ? (p_src+p_dst) : (p_array_index);
 node outputs:  ['p_array_index0']
 node inputs:  ['p_dst', 'p_src', 'p_array_index', 'p__br_tmp6']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_array_index0 = p__br_tmp6 ? (p_src+p_dst) : (p_array_index);
     |  p__br_tmp6 = 1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_array_index0 = p__br_tmp6 ? (p_src+p_dst) : (p_array_index);
 * recursive_merge: node ::  p__br_tmp50 = 1==1&&1==1&&p_dst==20;
 node outputs:  ['p__br_tmp50']
 node inputs:  ['p_dst']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp50', 'p__br_tmp40', 'p__br_tmp30'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp50 = 1==1&&1==1&&p_dst==20;
 * recursive_merge: node ::  p__br_tmp40 = 1==1&&!(p_src==20&&1==1);
 node outputs:  ['p__br_tmp40']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp50', 'p__br_tmp40', 'p__br_tmp30'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp40 = 1==1&&!(p_src==20&&1==1);
 * recursive_merge: node ::  p__br_tmp30 = !(!(!(p_src==20&&1==1))&&1==1);
 node outputs:  ['p__br_tmp30']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp50', 'p__br_tmp40', 'p__br_tmp30'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp30 = !(!(!(p_src==20&&1==1))&&1==1);
 * recursive_merge: node ::  p__br_tmp20 = 1==1&&1==1&&p_src==20;
 node outputs:  ['p__br_tmp20']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp10', 'p__br_tmp00', 'p__br_tmp20'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp20 = 1==1&&1==1&&p_src==20;
 * recursive_merge: node ::  p__br_tmp10 = 1==1&&!(!(p_src==20&&1==1));
 node outputs:  ['p__br_tmp10']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp10', 'p__br_tmp00', 'p__br_tmp20'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp10 = 1==1&&!(!(p_src==20&&1==1));
 * recursive_merge: node ::  p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1));
 node outputs:  ['p__br_tmp00']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp50', 'p__br_tmp40', 'p__br_tmp10', 'p__br_tmp20', 'p__br_tmp30'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1));
 * recursive_merge: node ::  p__br_tmp6 = 1;
 node outputs:  ['p__br_tmp6']
 node inputs:  []
 exclude_read_write_flanks: successor inputs:  {'p_dst', 'p_src', 'p_array_index', 'p__br_tmp6'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp6 = 1;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 --- cannot fold. too many stateless inputs:  ['p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20']
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_drop0', 'p_array_index0', 'p__br_tmp7'}
{'p_drop0', 'p_array_index0', 'p__br_tmp7'}
u:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);
u:  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
v:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
v:  p_drop0 = p__br_tmp8 ? (p_established01==0) : (p_drop);
u:  p__br_tmp6 = 1;
v:  p_array_index0 = p__br_tmp6 ? (p_src+p_dst) : (p_array_index);
u:  p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1));
v:  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp00 = !(!(!(!(p_src==20&&1==1))&&1==1));
v:  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
u:  p__br_tmp10 = 1==1&&!(!(p_src==20&&1==1));
v:  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp20 = 1==1&&1==1&&p_src==20;
v:  p__br_tmp7 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp30 = !(!(!(p_src==20&&1==1))&&1==1);
v:  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
u:  p__br_tmp40 = 1==1&&!(p_src==20&&1==1);
v:  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
u:  p__br_tmp50 = 1==1&&1==1&&p_dst==20;
v:  p__br_tmp8 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)&&(p__br_tmp50);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp7']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp7', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_13_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_13_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_13_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_13_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_13_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_13_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_13_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_13_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_13_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_13_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_drop0_bnd_3.sk.out
['comp_13']
final_output:  _out_s20_0
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s12_2
   alu output:  _out_s20
   alu output:  _out_s12_3
   alu output:  _out_s20_0
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_14_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_14_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_14_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_14_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_14_stateless_p_array_index0_bnd_1.sk.out
['comp_14']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_14 , type?  STATELESS
filename_to_compname: filename =  comp_14_stateless_p_array_index0_bnd_1.sk.out
['comp_14']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_12_stateless_p__br_tmp7_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_12_stateless_p__br_tmp7_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_12_stateless_p__br_tmp7_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_12_stateless_p__br_tmp7_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp7 --------- 
filename_to_compname: filename =  comp_12_stateless_p__br_tmp7_bnd_1.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p__br_tmp7_bnd_1.sk.out
['comp_12']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  1  and ALU  7
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  7
 *** found stateless dependency between ALU  6  and ALU  7
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------predecessor of comp  comp_13  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_13', 3: 'comp_13', 4: 'comp_13', 5: 'comp_13', 6: 'comp_13', 7: 'comp_13', 8: 'comp_14', 9: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_13  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_13', 3: 'comp_13', 4: 'comp_13', 5: 'comp_13', 6: 'comp_13', 7: 'comp_13', 8: 'comp_14', 9: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  2
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_13  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_13', 3: 'comp_13', 4: 'comp_13', 5: 'comp_13', 6: 'comp_13', 7: 'comp_13', 8: 'comp_14', 9: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  3
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_13  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_13', 3: 'comp_13', 4: 'comp_13', 5: 'comp_13', 6: 'comp_13', 7: 'comp_13', 8: 'comp_14', 9: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_13  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_13', 3: 'comp_13', 4: 'comp_13', 5: 'comp_13', 6: 'comp_13', 7: 'comp_13', 8: 'comp_14', 9: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_13  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_13', 3: 'comp_13', 4: 'comp_13', 5: 'comp_13', 6: 'comp_13', 7: 'comp_13', 8: 'comp_14', 9: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_13  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_13', 3: 'comp_13', 4: 'comp_13', 5: 'comp_13', 6: 'comp_13', 7: 'comp_13', 8: 'comp_14', 9: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_13', 3: 'comp_13', 4: 'comp_13', 5: 'comp_13', 6: 'comp_13', 7: 'comp_13', 8: 'comp_14', 9: 'comp_12'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f1fc737a9a0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_13', 3: 'comp_13', 4: 'comp_13', 5: 'comp_13', 6: 'comp_13', 7: 'comp_13', 8: 'comp_14', 9: 'comp_12'}
Stateless ALU id 9 has output p__br_tmp7
 *** found dependency between stateless ALU  9  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
2,3,
+---> dependencies of ALU  1 : 
7,
+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
7,
+---> dependencies of ALU  6 : 
7,
+---> dependencies of ALU  7 : 

+---> dependencies of ALU  8 : 

+---> dependencies of ALU  9 : 
0,
# alus: =  10
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  1  and  7
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  7
 * gen_dependency_list: dependency between  6  and  7
 * gen_dependency_list: dependency between  9  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 10}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 2), (0, 3), (1, 7), (2, 5), (3, 5), (4, 5), (5, 7), (6, 7), (9, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 184 rows, 132 columns and 422 nonzeros
Model fingerprint: 0xcd787716
Model has 120 general constraints
Variable types: 0 continuous, 132 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 9 rows and 0 columns
Presolve removed 0 rows and 29 columns
Presolve time: 0.01s
Presolved: 193 rows, 103 columns, 458 nonzeros
Variable types: 0 continuous, 103 integer (92 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 2
T0_A_3 2
T0_A_4 -0
T0_A_5 3
T0_A_6 -0
T0_A_7 4
T0_A_8 -0
T0_A_9 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  2.0
action:  2
num stages:  5
stage:  2.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  3.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  4.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  -0.0
action:  9
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
alu  2  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
alu  3  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
alu  5  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  4.0
 > get_alu_stage: table  0 , alu_id =  7 :  4.0
alu  7  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
alu  9  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  9  ;  [(<alus.DominoALU object at 0x7f1fc737a9d0>, 0), (<alus.DominoALU object at 0x7f1fc737aa30>, 1), (<alus.DominoALU object at 0x7f1fc737a7f0>, 2), (<alus.DominoALU object at 0x7f1fc737aac0>, 3), (<alus.DominoALU object at 0x7f1fc737ad60>, 4), (<alus.DominoALU object at 0x7f1fc737adc0>, 5), (<alus.DominoALU object at 0x7f1fc737adf0>, 6), (<alus.DominoALU object at 0x7f1fc737a7c0>, 7), (<alus.DominoALU object at 0x7f1fc737af10>, 8)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f1fc737a9a0>, 0)]
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  1  and  7
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  7
 * gen_dependency_list: dependency between  6  and  7
 * gen_dependency_list: dependency between  9  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 3), (1, 7), (2, 5), (3, 5), (4, 5), (5, 7), (6, 7), (9, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['established', 'p_established01'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 2, 'opcode': 6, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_established01', 'result': '_out_s12_0', 'immediate_operand': '0'}, {'id': 3, 'opcode': 12, 'operand0': 'p_established01', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '3'}, {'id': 4, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '1'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12_0', 'operand1': '_out_s12_1', 'operand2': '_out_s12_2', 'result': '_out_s20', 'immediate_operand': '28'}, {'id': 6, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '3'}, {'id': 7, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s20', 'operand2': '_out_s12_3', 'result': 'p_drop0', 'immediate_operand': '5'}, {'id': 8, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 9, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp7', 'immediate_operand': '20'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 3), (1, 7), (2, 5), (3, 5), (4, 5), (5, 7), (6, 7), (9, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['established', 'p_established01'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 2, 'opcode': 6, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_established01', 'result': '_out_s12_0', 'immediate_operand': '0'}, {'id': 3, 'opcode': 12, 'operand0': 'p_established01', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '3'}, {'id': 4, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '1'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12_0', 'operand1': '_out_s12_1', 'operand2': '_out_s12_2', 'result': '_out_s20', 'immediate_operand': '28'}, {'id': 6, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '3'}, {'id': 7, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s20', 'operand2': '_out_s12_3', 'result': 'p_drop0', 'immediate_operand': '5'}, {'id': 8, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 9, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp7', 'immediate_operand': '20'}]}
Time taken: 40.19634532928467 s
preprocessor time:
running mutation 8
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_8. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p__br_tmp5 = 1;

lhs p__br_tmp5 rhs 1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = 1;

 is_read_flank: processing rhs_vars =  []
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

lhs p_array_index0 rhs p__br_tmp5 ? (p_src+p_dst) : (p_array_index)
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_src', 'p_dst', 'p_array_index']
p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20)));

lhs p__br_tmp00 rhs 1==1&&!(1==1&&!(!(p_src==20)))
state_vars {'established'}
read/write flanks: processing line  p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20)));

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp10 = 1==1&&!(p_src==20)&&1==1;

lhs p__br_tmp10 rhs 1==1&&!(p_src==20)&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp10 = 1==1&&!(p_src==20)&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp20 = 1==1&&p_dst==20&&1==1;

lhs p__br_tmp20 rhs 1==1&&p_dst==20&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp20 = 1==1&&p_dst==20&&1==1;

 is_read_flank: processing rhs_vars =  ['p_dst']
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

lhs p__br_tmp6 rhs 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20']
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp6 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00', 'p_drop']
p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1;

lhs p__br_tmp30 rhs 1==1&&!(!(p_src==20))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp40 = 1==1&&p_src==20&&1==1;

lhs p__br_tmp40 rhs 1==1&&p_src==20&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp40 = 1==1&&p_src==20&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

lhs p__br_tmp7 rhs 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40']
p_established01 = p__br_tmp7 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp7 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp7 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p__br_tmp5 = 1; p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
RAW p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20))); p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20))); p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp10 = 1==1&&!(p_src==20)&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp20 = 1==1&&p_dst==20&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20); p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp40 = 1==1&&p_src==20&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40); p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f046dbe5640>, 'write': <dependencyGraph.Statement object at 0x7f046dc208b0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f046dbe5640>, 'write': <dependencyGraph.Statement object at 0x7f046dc208b0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  13
SCC 0
v p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp7 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp7 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index) stmts len 1
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
SCC 3
v p__br_tmp5 = 1 stmts len 1
p__br_tmp5 = 1;
SCC 4
v p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20) stmts len 1
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
SCC 5
v p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40) stmts len 1
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
SCC 6
v p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20))) stmts len 1
p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20)));
SCC 7
v p__br_tmp10 = 1==1&&!(p_src==20)&&1==1 stmts len 1
p__br_tmp10 = 1==1&&!(p_src==20)&&1==1;
SCC 8
v p__br_tmp20 = 1==1&&p_dst==20&&1==1 stmts len 1
p__br_tmp20 = 1==1&&p_dst==20&&1==1;
SCC 9
v p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1 stmts len 1
p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1;
SCC 10
v p__br_tmp40 = 1==1&&p_src==20&&1==1 stmts len 1
p__br_tmp40 = 1==1&&p_src==20&&1==1;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f046dc20ca0>, <dependencyGraph.Codelet object at 0x7f046dc20bb0>, <dependencyGraph.Codelet object at 0x7f046dc20cd0>, <dependencyGraph.Codelet object at 0x7f046dc20d90>, <dependencyGraph.Codelet object at 0x7f046dc20df0>, <dependencyGraph.Codelet object at 0x7f046dc20e50>, <dependencyGraph.Codelet object at 0x7f046dc20eb0>, <dependencyGraph.Codelet object at 0x7f046dc20f10>, <dependencyGraph.Codelet object at 0x7f046dc20f70>, <dependencyGraph.Codelet object at 0x7f046dc20fd0>, <dependencyGraph.Codelet object at 0x7f046dc20d60>]
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp7 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
p__br_tmp5 = 1;
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20)));
p__br_tmp10 = 1==1&&!(p_src==20)&&1==1;
p__br_tmp20 = 1==1&&p_dst==20&&1==1;
p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1;
p__br_tmp40 = 1==1&&p_src==20&&1==1;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f046dc20bb0>}
total number of nodes created:  11
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  11
total number of nodes created:  11
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  11
number of nodes in comp_graph:  11
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;', 'p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);', 'p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);', 'p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);', 'p__br_tmp40 = 1==1&&p_src==20&&1==1;', 'p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1;', 'p__br_tmp20 = 1==1&&p_dst==20&&1==1;', 'p__br_tmp10 = 1==1&&!(p_src==20)&&1==1;', 'p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20)));', 'p__br_tmp5 = 1;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_established00', 'p_drop', 'p__br_tmp6']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_established00', 'p_drop', 'p__br_tmp6']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp6', 'p__br_tmp7', 'p_drop']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp6', 'p__br_tmp7', 'p_drop']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established00', 'established']
 node inputs:  ['established', 'p__br_tmp7']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p_drop', 'p__br_tmp6'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
redundant outputs []
adj_inputs ['p_established00', 'p_drop', 'p__br_tmp6']
redundant outputs []
state_var ['established']
     | merged inputs:  ['p__br_tmp40', 'p__br_tmp00', 'established', 'p__br_tmp30']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp40', 'p__br_tmp00', 'p__br_tmp30']
 	| cannot merge: too many inputs.
     | not a merge candidate.
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 node outputs:  ['p__br_tmp7']
 node inputs:  ['p__br_tmp00', 'p__br_tmp40', 'p__br_tmp30']
 exclude_read_write_flanks: successor inputs:  {'established', 'p__br_tmp7'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20)));
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp40 = 1==1&&p_src==20&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 * recursive_merge: node ::  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p__br_tmp00', 'p__br_tmp20', 'p__br_tmp10']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p_drop', 'p__br_tmp6'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20)));
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp10 = 1==1&&!(p_src==20)&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp20 = 1==1&&p_dst==20&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 * recursive_merge: node ::  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 node outputs:  ['p_array_index0']
 node inputs:  ['p_dst', 'p__br_tmp5', 'p_src', 'p_array_index']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
     |  p__br_tmp5 = 1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 * recursive_merge: node ::  p__br_tmp40 = 1==1&&p_src==20&&1==1;
 node outputs:  ['p__br_tmp40']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp40', 'p__br_tmp30'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp40 = 1==1&&p_src==20&&1==1;
 * recursive_merge: node ::  p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1;
 node outputs:  ['p__br_tmp30']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp40', 'p__br_tmp30'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1;
 * recursive_merge: node ::  p__br_tmp20 = 1==1&&p_dst==20&&1==1;
 node outputs:  ['p__br_tmp20']
 node inputs:  ['p_dst']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp20', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp20 = 1==1&&p_dst==20&&1==1;
 * recursive_merge: node ::  p__br_tmp10 = 1==1&&!(p_src==20)&&1==1;
 node outputs:  ['p__br_tmp10']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp20', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp10 = 1==1&&!(p_src==20)&&1==1;
 * recursive_merge: node ::  p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20)));
 node outputs:  ['p__br_tmp00']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp40', 'p__br_tmp00', 'p__br_tmp20', 'p__br_tmp10', 'p__br_tmp30'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20)));
 * recursive_merge: node ::  p__br_tmp5 = 1;
 node outputs:  ['p__br_tmp5']
 node inputs:  []
 exclude_read_write_flanks: successor inputs:  {'p_dst', 'p__br_tmp5', 'p_src', 'p_array_index'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = 1;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 --- cannot fold. too many stateless inputs:  ['p__br_tmp40', 'p__br_tmp00', 'p__br_tmp30']
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp7', 'p_drop0', 'p_array_index0'}
{'p__br_tmp7', 'p_drop0', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
v:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp5 = 1;
v:  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
u:  p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20)));
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp00 = 1==1&&!(1==1&&!(!(p_src==20)));
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp10 = 1==1&&!(p_src==20)&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp20 = 1==1&&p_dst==20&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp30 = 1==1&&!(!(p_src==20))&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp40 = 1==1&&p_src==20&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp7']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp7', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_11_stateless_p__br_tmp7_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_11_stateless_p__br_tmp7_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp7 --------- 
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_11 , type?  STATELESS
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_12_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_12_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_12_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_12_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_12_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_12_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_12_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_12_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_12_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_12_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_13_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_13_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_11  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f046dbd5760>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
Stateless ALU id 1 has output p__br_tmp7
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** found stateless dependency between ALU  0  and ALU  2
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** found stateless dependency between ALU  0  and ALU  12
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_12', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_13'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
2,8,12,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 2), (0, 8), (0, 12), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 287 rows, 210 columns and 676 nonzeros
Model fingerprint: 0xb8e0eb86
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 17 rows and 0 columns
Presolve removed 0 rows and 49 columns
Presolve time: 0.01s
Presolved: 304 rows, 161 columns, 720 nonzeros
Variable types: 0 continuous, 161 integer (144 binary)
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 1: 4 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 2
T0_A_3 -0
T0_A_4 -0
T0_A_5 3
T0_A_6 -0
T0_A_7 -0
T0_A_8 2
T0_A_9 3
T0_A_10 -0
T0_A_11 -0
T0_A_12 2
T0_A_13 3
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  2.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  3.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  -0.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  2.0
action:  12
num stages:  5
stage:  3.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
alu  2  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
alu  5  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
alu  10  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
alu  12  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
alu  13  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f046dbd55e0>, 0), (<alus.DominoALU object at 0x7f046dbd5550>, 1), (<alus.DominoALU object at 0x7f046dbd55b0>, 2), (<alus.DominoALU object at 0x7f046dbd5a90>, 3), (<alus.DominoALU object at 0x7f046dbd54f0>, 4), (<alus.DominoALU object at 0x7f046dbd5a30>, 5), (<alus.DominoALU object at 0x7f046dbd5940>, 6), (<alus.DominoALU object at 0x7f046dbd5ac0>, 7), (<alus.DominoALU object at 0x7f046dbd59a0>, 8), (<alus.DominoALU object at 0x7f046dbd5b20>, 9), (<alus.DominoALU object at 0x7f046dbd58b0>, 10), (<alus.DominoALU object at 0x7f046dbd5cd0>, 11), (<alus.DominoALU object at 0x7f046dbd5d00>, 12), (<alus.DominoALU object at 0x7f046dbd5910>, 13), (<alus.DominoALU object at 0x7f046dbd5b50>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f046dbd5760>, 0)]
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 8), (0, 12), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp7', 'immediate_operand': '20'}, {'id': 2, 'opcode': 6, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '15'}, {'id': 3, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 9, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '1'}, {'id': 6, 'opcode': 8, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_2', 'immediate_operand': '0'}, {'id': 7, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 20, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 2, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_6', 'immediate_operand': '0'}, {'id': 12, 'opcode': 8, 'operand0': 'p_established00', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '4'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 8), (0, 12), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp7', 'immediate_operand': '20'}, {'id': 2, 'opcode': 6, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '15'}, {'id': 3, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 9, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '1'}, {'id': 6, 'opcode': 8, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_2', 'immediate_operand': '0'}, {'id': 7, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 20, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 2, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_6', 'immediate_operand': '0'}, {'id': 12, 'opcode': 8, 'operand0': 'p_established00', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '4'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}]}
Time taken: 37.721299171447754 s
preprocessor time:
running mutation 9
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_9. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p__br_tmp3 = 1;

lhs p__br_tmp3 rhs 1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp3 = 1;

 is_read_flank: processing rhs_vars =  []
p_array_index0 = p__br_tmp3 ? (p_src+p_dst) : (p_array_index);

lhs p_array_index0 rhs p__br_tmp3 ? (p_src+p_dst) : (p_array_index)
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p__br_tmp3 ? (p_src+p_dst) : (p_array_index);

 is_read_flank: processing rhs_vars =  ['p__br_tmp3', 'p_src', 'p_dst', 'p_array_index']
p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1;

lhs p__br_tmp00 rhs 1==1&&!(p_src==20&&1==1)&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp10 = 1==1&&1==1&&p_dst==20&&1==1&&1==1;

lhs p__br_tmp10 rhs 1==1&&1==1&&p_dst==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp10 = 1==1&&1==1&&p_dst==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_dst']
p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);

lhs p__br_tmp4 rhs 1&&(p__br_tmp00)&&(p__br_tmp10)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp10']
p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp4 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp4', 'p_established00', 'p_drop']
p__br_tmp20 = 1==1&&1==1&&p_src==20&&1==1&&1==1;

lhs p__br_tmp20 rhs 1==1&&1==1&&p_src==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp20 = 1==1&&1==1&&p_src==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);

lhs p__br_tmp5 rhs 1&&!(p__br_tmp00)&&(p__br_tmp20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp20']
p_established01 = p__br_tmp5 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp5 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp5 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00);
RAW p__br_tmp3 = 1; p_array_index0 = p__br_tmp3 ? (p_src+p_dst) : (p_array_index);
RAW p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1; p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
RAW p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1; p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
RAW p__br_tmp10 = 1==1&&1==1&&p_dst==20&&1==1&&1==1; p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
RAW p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10); p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);
RAW p__br_tmp20 = 1==1&&1==1&&p_src==20&&1==1&&1==1; p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
RAW p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20); p_established01 = p__br_tmp5 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f87b2eef640>, 'write': <dependencyGraph.Statement object at 0x7f87b2f2a6a0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f87b2eef640>, 'write': <dependencyGraph.Statement object at 0x7f87b2f2a6a0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  11
SCC 0
v p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp5 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp5 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p__br_tmp3 ? (p_src+p_dst) : (p_array_index) stmts len 1
p_array_index0 = p__br_tmp3 ? (p_src+p_dst) : (p_array_index);
SCC 3
v p__br_tmp3 = 1 stmts len 1
p__br_tmp3 = 1;
SCC 4
v p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10) stmts len 1
p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
SCC 5
v p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20) stmts len 1
p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
SCC 6
v p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1 stmts len 1
p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1;
SCC 7
v p__br_tmp10 = 1==1&&1==1&&p_dst==20&&1==1&&1==1 stmts len 1
p__br_tmp10 = 1==1&&1==1&&p_dst==20&&1==1&&1==1;
SCC 8
v p__br_tmp20 = 1==1&&1==1&&p_src==20&&1==1&&1==1 stmts len 1
p__br_tmp20 = 1==1&&1==1&&p_src==20&&1==1&&1==1;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f87b2f2aaf0>, <dependencyGraph.Codelet object at 0x7f87b2f2aa60>, <dependencyGraph.Codelet object at 0x7f87b2f2abe0>, <dependencyGraph.Codelet object at 0x7f87b2f2ab50>, <dependencyGraph.Codelet object at 0x7f87b2f2ac70>, <dependencyGraph.Codelet object at 0x7f87b2f2ad30>, <dependencyGraph.Codelet object at 0x7f87b2f2ad90>, <dependencyGraph.Codelet object at 0x7f87b2f2adf0>, <dependencyGraph.Codelet object at 0x7f87b2f2ae50>]
p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp5 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p__br_tmp3 ? (p_src+p_dst) : (p_array_index);
p__br_tmp3 = 1;
p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1;
p__br_tmp10 = 1==1&&1==1&&p_dst==20&&1==1&&1==1;
p__br_tmp20 = 1==1&&1==1&&p_src==20&&1==1&&1==1;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f87b2f2aa60>}
total number of nodes created:  9
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  9
total number of nodes created:  9
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp5 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp5 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  9
number of nodes in comp_graph:  9
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;', 'p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);', 'p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);', 'p_array_index0 = p__br_tmp3 ? (p_src+p_dst) : (p_array_index);', 'p__br_tmp20 = 1==1&&1==1&&p_src==20&&1==1&&1==1;', 'p__br_tmp10 = 1==1&&1==1&&p_dst==20&&1==1&&1==1;', 'p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1;', 'p__br_tmp3 = 1;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_established00', 'p_drop', 'p__br_tmp4']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_established00', 'p_drop', 'p__br_tmp4']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p_drop', 'p__br_tmp4', 'p__br_tmp5']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_drop', 'p__br_tmp4', 'p__br_tmp5']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);
     |  p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established00', 'established']
 node inputs:  ['established', 'p__br_tmp5']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p_drop', 'p__br_tmp4'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
redundant outputs []
adj_inputs ['p_established00', 'p_drop', 'p__br_tmp4']
redundant outputs []
state_var ['established']
     | merged inputs:  ['established', 'p__br_tmp20', 'p__br_tmp00']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp20', 'p__br_tmp00']
		| merge_candidate: Can try merging.
try_merge: trying to merge components: 
 | a:  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
 | b:  p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established00', 'p_established01']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);  with *************************
[<dependencyGraph.Statement object at 0x7f87b2f2a8b0>]
adj_inputs ['p_established00', 'p_drop', 'p__br_tmp4']
redundant outputs ['p_established01', 'p__br_tmp5']
state_var ['established']
resultant component: 
p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20); p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p__br_tmp00', 'p__br_tmp20']
new component outputs:  ['p_established00', 'established']
new component state_pkt_fields:  ['p_established00', 'p_established01']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp00', 'p__br_tmp20']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp00', 'metadata_hi': 'p__br_tmp20', 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_0_stateful.sk
return code 1
failed
---------- Merge failure. ---------
   | synthesis query failed. Not merging.
   | number of nodes in comp_graph:  9
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
 node outputs:  ['p__br_tmp5']
 node inputs:  ['p__br_tmp20', 'p__br_tmp00']
 exclude_read_write_flanks: successor inputs:  {'established', 'p__br_tmp5'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
     |  p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
     |  p__br_tmp20 = 1==1&&1==1&&p_src==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
 * recursive_merge: node ::  p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
 node outputs:  ['p__br_tmp4']
 node inputs:  ['p__br_tmp00', 'p__br_tmp10']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p_drop', 'p__br_tmp4'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
     |  p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
     |  p__br_tmp10 = 1==1&&1==1&&p_dst==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
 * recursive_merge: node ::  p_array_index0 = p__br_tmp3 ? (p_src+p_dst) : (p_array_index);
 node outputs:  ['p_array_index0']
 node inputs:  ['p__br_tmp3', 'p_array_index', 'p_src', 'p_dst']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_array_index0 = p__br_tmp3 ? (p_src+p_dst) : (p_array_index);
     |  p__br_tmp3 = 1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_array_index0 = p__br_tmp3 ? (p_src+p_dst) : (p_array_index);
 * recursive_merge: node ::  p__br_tmp20 = 1==1&&1==1&&p_src==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp20']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp20', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp20 = 1==1&&1==1&&p_src==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp10 = 1==1&&1==1&&p_dst==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp10']
 node inputs:  ['p_dst']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp10 = 1==1&&1==1&&p_dst==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1;
 node outputs:  ['p__br_tmp00']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp20', 'p__br_tmp00', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp3 = 1;
 node outputs:  ['p__br_tmp3']
 node inputs:  []
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp3', 'p_array_index', 'p_src', 'p_dst'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp3 = 1;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
try_merge: trying to merge components: 
 | a:  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
 | b:  p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established00', 'p_established01']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);  with *************************
[<dependencyGraph.Statement object at 0x7f87b2f2a8b0>]
adj_inputs ['p_established00', 'p_drop', 'p__br_tmp4']
redundant outputs ['p_established01', 'p__br_tmp5']
state_var ['established']
resultant component: 
p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20); p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p__br_tmp00', 'p__br_tmp20']
new component outputs:  ['p_established00', 'established']
new component state_pkt_fields:  ['p_established00', 'p_established01']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp00', 'p__br_tmp20']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp00', 'metadata_hi': 'p__br_tmp20', 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_1_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_1_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_1_stateful.sk
return code 1
failed
---------- Merge failure. ---------
 --- cannot fold.
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_array_index0', 'p__br_tmp5', 'p_drop0'}
{'p_array_index0', 'p__br_tmp5', 'p_drop0'}
u:  p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);
u:  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
v:  p_established00 = established; p_established01 = p__br_tmp5 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
v:  p_drop0 = p__br_tmp4 ? (p_established00==0) : (p_drop);
u:  p__br_tmp3 = 1;
v:  p_array_index0 = p__br_tmp3 ? (p_src+p_dst) : (p_array_index);
u:  p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1;
v:  p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
u:  p__br_tmp00 = 1==1&&!(p_src==20&&1==1)&&1==1&&1==1;
v:  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
u:  p__br_tmp10 = 1==1&&1==1&&p_dst==20&&1==1&&1==1;
v:  p__br_tmp4 = 1&&(p__br_tmp00)&&(p__br_tmp10);
u:  p__br_tmp20 = 1==1&&1==1&&p_src==20&&1==1&&1==1;
v:  p__br_tmp5 = 1&&!(p__br_tmp00)&&(p__br_tmp20);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp5']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp5', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_11_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_11_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_11_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_11_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_11_stateless_p_array_index0_bnd_1.sk.out
['comp_11']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_11 , type?  STATELESS
filename_to_compname: filename =  comp_11_stateless_p_array_index0_bnd_1.sk.out
['comp_11']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_9_stateless_p__br_tmp5_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_9_stateless_p__br_tmp5_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_9_stateless_p__br_tmp5_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_9_stateless_p__br_tmp5_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp5 --------- 
filename_to_compname: filename =  comp_9_stateless_p__br_tmp5_bnd_1.sk.out
['comp_9']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_9 , type?  STATELESS
filename_to_compname: filename =  comp_9_stateless_p__br_tmp5_bnd_1.sk.out
['comp_9']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_10_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_10_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_10_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_10_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_10_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_10_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_10_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_10_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_10_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_10_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_10 , type?  STATELESS
filename_to_compname: filename =  comp_10_stateless_p_drop0_bnd_3.sk.out
['comp_10']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  3  and ALU  6
 *** found stateless dependency between ALU  4  and ALU  6
 *** found stateless dependency between ALU  5  and ALU  6
 *** found stateless dependency between ALU  6  and ALU  15
 *** found stateless dependency between ALU  7  and ALU  10
 *** found stateless dependency between ALU  8  and ALU  10
 *** found stateless dependency between ALU  9  and ALU  10
 *** found stateless dependency between ALU  10  and ALU  15
 *** found stateless dependency between ALU  11  and ALU  14
 *** found stateless dependency between ALU  12  and ALU  14
 *** found stateless dependency between ALU  13  and ALU  14
 *** found stateless dependency between ALU  14  and ALU  15
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_9  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f87b2ee0610>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
Stateless ALU id 2 has output p__br_tmp5
 *** found dependency between stateless ALU  2  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** found stateless dependency between ALU  0  and ALU  5
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** found stateless dependency between ALU  0  and ALU  11
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** found stateless dependency between ALU  0  and ALU  12
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** found stateless dependency between ALU  0  and ALU  13
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_10  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_11', 2: 'comp_9', 3: 'comp_10', 4: 'comp_10', 5: 'comp_10', 6: 'comp_10', 7: 'comp_10', 8: 'comp_10', 9: 'comp_10', 10: 'comp_10', 11: 'comp_10', 12: 'comp_10', 13: 'comp_10', 14: 'comp_10', 15: 'comp_10'}
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
5,11,12,13,
+---> dependencies of ALU  1 : 

+---> dependencies of ALU  2 : 
0,
+---> dependencies of ALU  3 : 
6,
+---> dependencies of ALU  4 : 
6,
+---> dependencies of ALU  5 : 
6,
+---> dependencies of ALU  6 : 
15,
+---> dependencies of ALU  7 : 
10,
+---> dependencies of ALU  8 : 
10,
+---> dependencies of ALU  9 : 
10,
+---> dependencies of ALU  10 : 
15,
+---> dependencies of ALU  11 : 
14,
+---> dependencies of ALU  12 : 
14,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 
15,
+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  5
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  0  and  13
 * gen_dependency_list: dependency between  2  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 5), (0, 11), (0, 12), (0, 13), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 288 rows, 210 columns and 678 nonzeros
Model fingerprint: 0x49070ade
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 17 rows and 0 columns
Presolve removed 0 rows and 49 columns
Presolve time: 0.01s
Presolved: 305 rows, 161 columns, 722 nonzeros
Variable types: 0 continuous, 161 integer (144 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 10.0000000
Found heuristic solution: objective 8.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 4: 4 8 10 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 -0
T0_A_5 2
T0_A_6 3
T0_A_7 -0
T0_A_8 -0
T0_A_9 -0
T0_A_10 1
T0_A_11 2
T0_A_12 2
T0_A_13 2
T0_A_14 3
T0_A_15 4
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  2.0
action:  5
num stages:  5
stage:  3.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  -0.0
action:  9
num stages:  5
stage:  1.0
action:  10
num stages:  5
stage:  2.0
action:  11
num stages:  5
stage:  2.0
action:  12
num stages:  5
stage:  2.0
action:  13
num stages:  5
stage:  3.0
action:  14
num stages:  5
stage:  4.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  2.0
 > get_alu_stage: table  0 , alu_id =  5 :  2.0
alu  5  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
alu  6  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
alu  9  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  10 :  1.0
 > get_alu_stage: table  0 , alu_id =  10 :  1.0
alu  10  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
alu  11  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
alu  12  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  13 :  2.0
 > get_alu_stage: table  0 , alu_id =  13 :  2.0
alu  13  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
alu  14  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
alu  15  is of type  STATELESS ; scheduled to stage  4
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f87b2ee0430>, 0), (<alus.DominoALU object at 0x7f87b2ee0790>, 1), (<alus.DominoALU object at 0x7f87b2ee0730>, 2), (<alus.DominoALU object at 0x7f87b2ee0160>, 3), (<alus.DominoALU object at 0x7f87b2ee0be0>, 4), (<alus.DominoALU object at 0x7f87b2ee0af0>, 5), (<alus.DominoALU object at 0x7f87b2ee09a0>, 6), (<alus.DominoALU object at 0x7f87b2ee0b50>, 7), (<alus.DominoALU object at 0x7f87b2ee0c10>, 8), (<alus.DominoALU object at 0x7f87b2ee0ca0>, 9), (<alus.DominoALU object at 0x7f87b2ee0970>, 10), (<alus.DominoALU object at 0x7f87b2ee0850>, 11), (<alus.DominoALU object at 0x7f87b2ee0940>, 12), (<alus.DominoALU object at 0x7f87b2ee0a90>, 13), (<alus.DominoALU object at 0x7f87b2ee0b80>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f87b2ee0610>, 0)]
 * gen_dependency_list: dependency between  0  and  5
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  0  and  13
 * gen_dependency_list: dependency between  2  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 5), (0, 11), (0, 12), (0, 13), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp5'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '3'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp5', 'immediate_operand': '20'}, {'id': 3, 'opcode': 10, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '1'}, {'id': 4, 'opcode': 13, 'operand0': 'p_drop', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '0'}, {'id': 5, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 6, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 7, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_2', 'immediate_operand': '4'}, {'id': 8, 'opcode': 4, 'operand0': '1', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_3', 'immediate_operand': '5'}, {'id': 9, 'opcode': 14, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '14'}, {'id': 10, 'opcode': 3, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 11, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '4'}, {'id': 13, 'opcode': 30, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '9'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '1'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '17'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 5), (0, 11), (0, 12), (0, 13), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp5'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '3'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp5', 'immediate_operand': '20'}, {'id': 3, 'opcode': 10, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '1'}, {'id': 4, 'opcode': 13, 'operand0': 'p_drop', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '0'}, {'id': 5, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 6, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 7, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_2', 'immediate_operand': '4'}, {'id': 8, 'opcode': 4, 'operand0': '1', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_3', 'immediate_operand': '5'}, {'id': 9, 'opcode': 14, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '14'}, {'id': 10, 'opcode': 3, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 11, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '4'}, {'id': 13, 'opcode': 30, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '9'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '1'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '17'}]}
Time taken: 752.0813205242157 s
preprocessor time:
running mutation 10
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_10. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p__br_tmp5 = 1;

lhs p__br_tmp5 rhs 1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = 1;

 is_read_flank: processing rhs_vars =  []
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

lhs p_array_index0 rhs p__br_tmp5 ? (p_src+p_dst) : (p_array_index)
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_src', 'p_dst', 'p_array_index']
p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1;

lhs p__br_tmp00 rhs !(!(!(p_src==20)&&1==1))&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp10 = !(p_src==20)&&1==1&&1==1;

lhs p__br_tmp10 rhs !(p_src==20)&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp10 = !(p_src==20)&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp20 = p_dst==20&&1==1&&1==1;

lhs p__br_tmp20 rhs p_dst==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp20 = p_dst==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_dst']
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

lhs p__br_tmp6 rhs 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp10', 'p__br_tmp20']
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp6 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00', 'p_drop']
p__br_tmp30 = !(!(p_src==20)&&1==1)&&1==1;

lhs p__br_tmp30 rhs !(!(p_src==20)&&1==1)&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp30 = !(!(p_src==20)&&1==1)&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp40 = p_src==20&&1==1&&1==1;

lhs p__br_tmp40 rhs p_src==20&&1==1&&1==1
state_vars {'established'}
read/write flanks: processing line  p__br_tmp40 = p_src==20&&1==1&&1==1;

 is_read_flank: processing rhs_vars =  ['p_src']
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

lhs p__br_tmp7 rhs 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);

 is_read_flank: processing rhs_vars =  ['p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40']
p_established01 = p__br_tmp7 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp7 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp7 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p__br_tmp5 = 1; p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
RAW p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp10 = !(p_src==20)&&1==1&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp20 = p_dst==20&&1==1&&1==1; p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
RAW p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20); p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
RAW p__br_tmp30 = !(!(p_src==20)&&1==1)&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp40 = p_src==20&&1==1&&1==1; p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
RAW p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40); p_established01 = p__br_tmp7 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f99a4569640>, 'write': <dependencyGraph.Statement object at 0x7f99a45a48b0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f99a4569640>, 'write': <dependencyGraph.Statement object at 0x7f99a45a48b0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  13
SCC 0
v p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp7 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp7 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index) stmts len 1
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
SCC 3
v p__br_tmp5 = 1 stmts len 1
p__br_tmp5 = 1;
SCC 4
v p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20) stmts len 1
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
SCC 5
v p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40) stmts len 1
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
SCC 6
v p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1 stmts len 1
p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1;
SCC 7
v p__br_tmp10 = !(p_src==20)&&1==1&&1==1 stmts len 1
p__br_tmp10 = !(p_src==20)&&1==1&&1==1;
SCC 8
v p__br_tmp20 = p_dst==20&&1==1&&1==1 stmts len 1
p__br_tmp20 = p_dst==20&&1==1&&1==1;
SCC 9
v p__br_tmp30 = !(!(p_src==20)&&1==1)&&1==1 stmts len 1
p__br_tmp30 = !(!(p_src==20)&&1==1)&&1==1;
SCC 10
v p__br_tmp40 = p_src==20&&1==1&&1==1 stmts len 1
p__br_tmp40 = p_src==20&&1==1&&1==1;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f99a45a4ca0>, <dependencyGraph.Codelet object at 0x7f99a45a4bb0>, <dependencyGraph.Codelet object at 0x7f99a45a4cd0>, <dependencyGraph.Codelet object at 0x7f99a45a4d90>, <dependencyGraph.Codelet object at 0x7f99a45a4df0>, <dependencyGraph.Codelet object at 0x7f99a45a4e50>, <dependencyGraph.Codelet object at 0x7f99a45a4eb0>, <dependencyGraph.Codelet object at 0x7f99a45a4f10>, <dependencyGraph.Codelet object at 0x7f99a45a4f70>, <dependencyGraph.Codelet object at 0x7f99a45a4fd0>, <dependencyGraph.Codelet object at 0x7f99a45a4d60>]
p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp7 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
p__br_tmp5 = 1;
p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1;
p__br_tmp10 = !(p_src==20)&&1==1&&1==1;
p__br_tmp20 = p_dst==20&&1==1&&1==1;
p__br_tmp30 = !(!(p_src==20)&&1==1)&&1==1;
p__br_tmp40 = p_src==20&&1==1&&1==1;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f99a45a4bb0>}
total number of nodes created:  11
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  11
total number of nodes created:  11
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp7 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  11
number of nodes in comp_graph:  11
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;', 'p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);', 'p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);', 'p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);', 'p__br_tmp40 = p_src==20&&1==1&&1==1;', 'p__br_tmp30 = !(!(p_src==20)&&1==1)&&1==1;', 'p__br_tmp20 = p_dst==20&&1==1&&1==1;', 'p__br_tmp10 = !(p_src==20)&&1==1&&1==1;', 'p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1;', 'p__br_tmp5 = 1;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_drop', 'p__br_tmp6', 'p_established00']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_drop', 'p__br_tmp6', 'p_established00']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp6', 'p_drop', 'p__br_tmp7']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp6', 'p_drop', 'p__br_tmp7']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
     |  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['established', 'p_established00']
 node inputs:  ['established', 'p__br_tmp7']
 exclude_read_write_flanks: successor inputs:  {'p_drop', 'p__br_tmp6', 'p_established00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
redundant outputs []
adj_inputs ['p_drop', 'p__br_tmp6', 'p_established00']
redundant outputs []
state_var ['established']
     | merged inputs:  ['p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40', 'established']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40']
 	| cannot merge: too many inputs.
     | not a merge candidate.
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 node outputs:  ['p__br_tmp7']
 node inputs:  ['p__br_tmp30', 'p__br_tmp40', 'p__br_tmp00']
 exclude_read_write_flanks: successor inputs:  {'established', 'p__br_tmp7'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp30 = !(!(p_src==20)&&1==1)&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
     |  p__br_tmp40 = p_src==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 * recursive_merge: node ::  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p__br_tmp20', 'p__br_tmp00', 'p__br_tmp10']
 exclude_read_write_flanks: successor inputs:  {'p_drop', 'p__br_tmp6', 'p_established00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp10 = !(p_src==20)&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
     |  p__br_tmp20 = p_dst==20&&1==1&&1==1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
 * recursive_merge: node ::  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 node outputs:  ['p_array_index0']
 node inputs:  ['p_array_index', 'p__br_tmp5', 'p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
     |  p__br_tmp5 = 1;
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
 * recursive_merge: node ::  p__br_tmp40 = p_src==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp40']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp30', 'p__br_tmp40', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp40 = p_src==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp30 = !(!(p_src==20)&&1==1)&&1==1;
 node outputs:  ['p__br_tmp30']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp30', 'p__br_tmp40', 'p__br_tmp00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp30 = !(!(p_src==20)&&1==1)&&1==1;
 * recursive_merge: node ::  p__br_tmp20 = p_dst==20&&1==1&&1==1;
 node outputs:  ['p__br_tmp20']
 node inputs:  ['p_dst']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp20', 'p__br_tmp00', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp20 = p_dst==20&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp10 = !(p_src==20)&&1==1&&1==1;
 node outputs:  ['p__br_tmp10']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp20', 'p__br_tmp00', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp10 = !(p_src==20)&&1==1&&1==1;
 * recursive_merge: node ::  p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1;
 node outputs:  ['p__br_tmp00']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp00', 'p__br_tmp20', 'p__br_tmp30', 'p__br_tmp40', 'p__br_tmp10'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1;
 * recursive_merge: node ::  p__br_tmp5 = 1;
 node outputs:  ['p__br_tmp5']
 node inputs:  []
 exclude_read_write_flanks: successor inputs:  {'p_array_index', 'p__br_tmp5', 'p_dst', 'p_src'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = 1;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
 --- cannot fold. too many stateless inputs:  ['p__br_tmp00', 'p__br_tmp30', 'p__br_tmp40']
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_array_index0', 'p__br_tmp7', 'p_drop0'}
{'p_array_index0', 'p__br_tmp7', 'p_drop0'}
u:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
v:  p_established00 = established; p_established01 = p__br_tmp7 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
v:  p_drop0 = p__br_tmp6 ? (p_established00==0) : (p_drop);
u:  p__br_tmp5 = 1;
v:  p_array_index0 = p__br_tmp5 ? (p_src+p_dst) : (p_array_index);
u:  p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp00 = !(!(!(p_src==20)&&1==1))&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp10 = !(p_src==20)&&1==1&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp20 = p_dst==20&&1==1&&1==1;
v:  p__br_tmp6 = 1&&(p__br_tmp00)&&(p__br_tmp10)&&(p__br_tmp20);
u:  p__br_tmp30 = !(!(p_src==20)&&1==1)&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
u:  p__br_tmp40 = p_src==20&&1==1&&1==1;
v:  p__br_tmp7 = 1&&!(p__br_tmp00)&&(p__br_tmp30)&&(p__br_tmp40);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp7']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp7', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_13_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_13_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_13_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_13 , type?  STATELESS
filename_to_compname: filename =  comp_13_stateless_p_array_index0_bnd_1.sk.out
['comp_13']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_11_stateless_p__br_tmp7_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_11_stateless_p__br_tmp7_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_11_stateless_p__br_tmp7_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp7 --------- 
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_11 , type?  STATELESS
filename_to_compname: filename =  comp_11_stateless_p__br_tmp7_bnd_1.sk.out
['comp_11']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_12_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_12_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_12_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_12_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_12_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_12_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_12_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_12_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_12_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_12_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_12 , type?  STATELESS
filename_to_compname: filename =  comp_12_stateless_p_drop0_bnd_3.sk.out
['comp_12']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  3  and ALU  6
 *** found stateless dependency between ALU  4  and ALU  6
 *** found stateless dependency between ALU  5  and ALU  6
 *** found stateless dependency between ALU  6  and ALU  15
 *** found stateless dependency between ALU  7  and ALU  10
 *** found stateless dependency between ALU  8  and ALU  10
 *** found stateless dependency between ALU  9  and ALU  10
 *** found stateless dependency between ALU  10  and ALU  15
 *** found stateless dependency between ALU  11  and ALU  14
 *** found stateless dependency between ALU  12  and ALU  14
 *** found stateless dependency between ALU  13  and ALU  14
 *** found stateless dependency between ALU  14  and ALU  15
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_11  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f99a4559760>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
Stateless ALU id 2 has output p__br_tmp7
 *** found dependency between stateless ALU  2  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  3
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  7
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  12
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** found stateless dependency between ALU  0  and ALU  13
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_12  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_13', 2: 'comp_11', 3: 'comp_12', 4: 'comp_12', 5: 'comp_12', 6: 'comp_12', 7: 'comp_12', 8: 'comp_12', 9: 'comp_12', 10: 'comp_12', 11: 'comp_12', 12: 'comp_12', 13: 'comp_12', 14: 'comp_12', 15: 'comp_12'}
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
3,7,12,13,
+---> dependencies of ALU  1 : 

+---> dependencies of ALU  2 : 
0,
+---> dependencies of ALU  3 : 
6,
+---> dependencies of ALU  4 : 
6,
+---> dependencies of ALU  5 : 
6,
+---> dependencies of ALU  6 : 
15,
+---> dependencies of ALU  7 : 
10,
+---> dependencies of ALU  8 : 
10,
+---> dependencies of ALU  9 : 
10,
+---> dependencies of ALU  10 : 
15,
+---> dependencies of ALU  11 : 
14,
+---> dependencies of ALU  12 : 
14,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 
15,
+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  0  and  13
 * gen_dependency_list: dependency between  2  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 3), (0, 7), (0, 12), (0, 13), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 288 rows, 210 columns and 678 nonzeros
Model fingerprint: 0xe4febf3e
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 13 rows and 0 columns
Presolve removed 0 rows and 51 columns
Presolve time: 0.01s
Presolved: 301 rows, 159 columns, 712 nonzeros
Variable types: 0 continuous, 159 integer (142 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 2
T0_A_4 -0
T0_A_5 -0
T0_A_6 3
T0_A_7 2
T0_A_8 -0
T0_A_9 -0
T0_A_10 3
T0_A_11 -0
T0_A_12 2
T0_A_13 2
T0_A_14 3
T0_A_15 4
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  2.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  -0.0
action:  5
num stages:  5
stage:  3.0
action:  6
num stages:  5
stage:  2.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  -0.0
action:  9
num stages:  5
stage:  3.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  2.0
action:  12
num stages:  5
stage:  2.0
action:  13
num stages:  5
stage:  3.0
action:  14
num stages:  5
stage:  4.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
alu  3  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
alu  5  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
alu  6  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
alu  7  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
alu  9  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
alu  10  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
alu  12  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  13 :  2.0
 > get_alu_stage: table  0 , alu_id =  13 :  2.0
alu  13  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
alu  14  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
alu  15  is of type  STATELESS ; scheduled to stage  4
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f99a45595e0>, 0), (<alus.DominoALU object at 0x7f99a45597c0>, 1), (<alus.DominoALU object at 0x7f99a4559be0>, 2), (<alus.DominoALU object at 0x7f99a45a4910>, 3), (<alus.DominoALU object at 0x7f99a45595b0>, 4), (<alus.DominoALU object at 0x7f99a4559d30>, 5), (<alus.DominoALU object at 0x7f99a4559a60>, 6), (<alus.DominoALU object at 0x7f99a4559c10>, 7), (<alus.DominoALU object at 0x7f99a45594f0>, 8), (<alus.DominoALU object at 0x7f99a4559d60>, 9), (<alus.DominoALU object at 0x7f99a4559a30>, 10), (<alus.DominoALU object at 0x7f99a4559790>, 11), (<alus.DominoALU object at 0x7f99a4559a00>, 12), (<alus.DominoALU object at 0x7f99a4559b50>, 13), (<alus.DominoALU object at 0x7f99a4559c40>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f99a4559760>, 0)]
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  0  and  13
 * gen_dependency_list: dependency between  2  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 7), (0, 12), (0, 13), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_array_index', 'result': 'p_array_index0', 'immediate_operand': '2'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp7', 'immediate_operand': '20'}, {'id': 3, 'opcode': 15, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '17'}, {'id': 4, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 5, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_1', 'immediate_operand': '1'}, {'id': 6, 'opcode': 18, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '17'}, {'id': 7, 'opcode': 27, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_2', 'immediate_operand': '19'}, {'id': 8, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 9, 'opcode': 15, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '31'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '4'}, {'id': 11, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 23, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_6', 'immediate_operand': '30'}, {'id': 13, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_7', 'immediate_operand': '3'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '6'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '17'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 7), (0, 12), (0, 13), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp7'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_array_index', 'result': 'p_array_index0', 'immediate_operand': '2'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp7', 'immediate_operand': '20'}, {'id': 3, 'opcode': 15, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '17'}, {'id': 4, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 5, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_1', 'immediate_operand': '1'}, {'id': 6, 'opcode': 18, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '17'}, {'id': 7, 'opcode': 27, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_2', 'immediate_operand': '19'}, {'id': 8, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 9, 'opcode': 15, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '31'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '4'}, {'id': 11, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 23, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_6', 'immediate_operand': '30'}, {'id': 13, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_7', 'immediate_operand': '3'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '6'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '17'}]}
Time taken: 18.480706691741943 s
preprocessor time:
