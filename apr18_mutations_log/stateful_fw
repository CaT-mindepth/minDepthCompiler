running mutation 1
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_1. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f99fa5fe610>, 'write': <dependencyGraph.Statement object at 0x7f99fa5bc490>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f99fa5fe610>, 'write': <dependencyGraph.Statement object at 0x7f99fa5bc490>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f99fa5bc100>, <dependencyGraph.Codelet object at 0x7f99fa5bc280>, <dependencyGraph.Codelet object at 0x7f99fa5bc370>, <dependencyGraph.Codelet object at 0x7f99fa5bc130>, <dependencyGraph.Codelet object at 0x7f99fa5bca00>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f99fa5bc280>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Created output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;', 'p_array_index0 = p_dst+p_src;', 'p__br_tmp5 = (!(p_src==20))&&(p_dst==20);', 'p__br_tmp6 = p_src==20;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_established00', 'p__br_tmp5', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp6', 'p_drop', 'p__br_tmp5']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp6', 'p_drop', 'p__br_tmp5']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established00', 'established']
 node inputs:  ['established', 'p__br_tmp6']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp5', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp6 = p_src==20;
redundant outputs []
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['established', 'p_src']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_src']
		| merge_candidate: Can try merging.
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f99fa5bc430>]
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p__br_tmp6', 'p_established01']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['p_established00', 'established']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/try_merge_query_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/try_merge_query_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/try_merge_query_0_stateful.sk
return code 1
failed
---------- Merge failure. ---------
   | synthesis query failed. Not merging.
   | number of nodes in comp_graph:  5
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p_array_index0 = p_dst+p_src;
 node outputs:  ['p_array_index0']
 node inputs:  ['p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p_array_index0 = p_dst+p_src;
 * recursive_merge: node ::  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 node outputs:  ['p__br_tmp5']
 node inputs:  ['p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp5', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 * recursive_merge: node ::  p__br_tmp6 = p_src==20;
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp6', 'established'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp6 = p_src==20;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp6 = p_src==20;
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f99fa5bc430>]
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p__br_tmp6', 'p_established01']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['p_established00', 'established']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/try_merge_query_1_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/try_merge_query_1_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/try_merge_query_1_stateful.sk
return code 1
failed
---------- Merge failure. ---------
 --- cannot fold.
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp6', 'p_drop0', 'p_array_index0'}
{'p__br_tmp6', 'p_drop0', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f99fa5bcdf0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
Stateless ALU id 1 has output p__br_tmp6
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  3
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  4
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  10
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
3,4,8,10,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 3), (0, 4), (0, 8), (0, 10), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 288 rows, 210 columns and 678 nonzeros
Model fingerprint: 0x148ef46a
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 13 rows and 0 columns
Presolve removed 0 rows and 51 columns
Presolve time: 0.01s
Presolved: 301 rows, 159 columns, 712 nonzeros
Variable types: 0 continuous, 159 integer (142 binary)
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 1: 4 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 2
T0_A_4 2
T0_A_5 3
T0_A_6 -0
T0_A_7 -0
T0_A_8 2
T0_A_9 3
T0_A_10 2
T0_A_11 -0
T0_A_12 -0
T0_A_13 3
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  2.0
action:  3
num stages:  5
stage:  2.0
action:  4
num stages:  5
stage:  3.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  2.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
stage:  3.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
alu  3  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
alu  4  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
alu  5  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
alu  10  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
alu  13  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f99fa5f4280>, 0), (<alus.DominoALU object at 0x7f99fa5f4490>, 1), (<alus.DominoALU object at 0x7f99fa5f40a0>, 2), (<alus.DominoALU object at 0x7f99fa5f4190>, 3), (<alus.DominoALU object at 0x7f99fa5f4550>, 4), (<alus.DominoALU object at 0x7f99fa5f44f0>, 5), (<alus.DominoALU object at 0x7f99fa5f4580>, 6), (<alus.DominoALU object at 0x7f99fa5f45b0>, 7), (<alus.DominoALU object at 0x7f99fa5f45e0>, 8), (<alus.DominoALU object at 0x7f99fa5f4610>, 9), (<alus.DominoALU object at 0x7f99fa5f4640>, 10), (<alus.DominoALU object at 0x7f99fa5f4670>, 11), (<alus.DominoALU object at 0x7f99fa5f46a0>, 12), (<alus.DominoALU object at 0x7f99fa5f46d0>, 13), (<alus.DominoALU object at 0x7f99fa5f43a0>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f99fa5bcdf0>, 0)]
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 4), (0, 8), (0, 10), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 2, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 7, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '10'}, {'id': 4, 'opcode': 12, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '30'}, {'id': 5, 'opcode': 7, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '1'}, {'id': 6, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 15, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 26, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '26'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '4'}, {'id': 10, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '27'}, {'id': 12, 'opcode': 11, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '21'}, {'id': 13, 'opcode': 15, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '3'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '1'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 4), (0, 8), (0, 10), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 2, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 7, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '10'}, {'id': 4, 'opcode': 12, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '30'}, {'id': 5, 'opcode': 7, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '1'}, {'id': 6, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 15, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 26, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '26'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '4'}, {'id': 10, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '27'}, {'id': 12, 'opcode': 11, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '21'}, {'id': 13, 'opcode': 15, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '3'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '1'}]}
Time taken: 296.3199245929718 s
preprocessor time:
running mutation 2
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_2. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f709f2c8610>, 'write': <dependencyGraph.Statement object at 0x7f709f286490>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f709f2c8610>, 'write': <dependencyGraph.Statement object at 0x7f709f286490>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f709f2860d0>, <dependencyGraph.Codelet object at 0x7f709f286250>, <dependencyGraph.Codelet object at 0x7f709f286370>, <dependencyGraph.Codelet object at 0x7f709f286220>, <dependencyGraph.Codelet object at 0x7f709f286a00>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f709f286250>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Created output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;', 'p_array_index0 = p_dst+p_src;', 'p__br_tmp5 = (!(p_src==20))&&(p_dst==20);', 'p__br_tmp6 = p_src==20;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_drop', 'p__br_tmp5', 'p_established00']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_drop', 'p__br_tmp5', 'p_established00']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp5', 'p_drop', 'p__br_tmp6']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp5', 'p_drop', 'p__br_tmp6']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['established', 'p_established00']
 node inputs:  ['established', 'p__br_tmp6']
 exclude_read_write_flanks: successor inputs:  {'p_drop', 'p__br_tmp5', 'p_established00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp6 = p_src==20;
redundant outputs []
adj_inputs ['p_drop', 'p__br_tmp5', 'p_established00']
redundant outputs []
state_var ['established']
     | merged inputs:  ['p_src', 'established']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_src']
		| merge_candidate: Can try merging.
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f709f286430>]
adj_inputs ['p_drop', 'p__br_tmp5', 'p_established00']
redundant outputs ['p_established01', 'p__br_tmp6']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['established', 'p_established00']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/try_merge_query_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/try_merge_query_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/try_merge_query_0_stateful.sk
return code 1
failed
---------- Merge failure. ---------
   | synthesis query failed. Not merging.
   | number of nodes in comp_graph:  5
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p_array_index0 = p_dst+p_src;
 node outputs:  ['p_array_index0']
 node inputs:  ['p_src', 'p_dst']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p_array_index0 = p_dst+p_src;
 * recursive_merge: node ::  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 node outputs:  ['p__br_tmp5']
 node inputs:  ['p_src', 'p_dst']
 exclude_read_write_flanks: successor inputs:  {'p_drop', 'p__br_tmp5', 'p_established00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 * recursive_merge: node ::  p__br_tmp6 = p_src==20;
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp6', 'established'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp6 = p_src==20;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp6 = p_src==20;
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f709f286430>]
adj_inputs ['p_drop', 'p__br_tmp5', 'p_established00']
redundant outputs ['p_established01', 'p__br_tmp6']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['established', 'p_established00']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/try_merge_query_1_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/try_merge_query_1_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/try_merge_query_1_stateful.sk
return code 1
failed
---------- Merge failure. ---------
 --- cannot fold.
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_array_index0', 'p_drop0', 'p__br_tmp6'}
{'p_array_index0', 'p_drop0', 'p__br_tmp6'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  6
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  7
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  12
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f709f286df0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
Stateless ALU id 15 has output p__br_tmp6
 *** found dependency between stateless ALU  15  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
6,7,12,
+---> dependencies of ALU  1 : 

+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 
0,
# alus: =  16
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 6), (0, 7), (0, 12), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 287 rows, 210 columns and 676 nonzeros
Model fingerprint: 0x6bbbfbad
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 21 rows and 0 columns
Presolve removed 0 rows and 47 columns
Presolve time: 0.01s
Presolved: 308 rows, 163 columns, 730 nonzeros
Variable types: 0 continuous, 163 integer (146 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 10.0000000
Found heuristic solution: objective 8.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 4: 4 8 10 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 -0
T0_A_5 1
T0_A_6 2
T0_A_7 2
T0_A_8 -0
T0_A_9 3
T0_A_10 -0
T0_A_11 -0
T0_A_12 2
T0_A_13 3
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  1.0
action:  5
num stages:  5
stage:  2.0
action:  6
num stages:  5
stage:  2.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  -0.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  2.0
action:  12
num stages:  5
stage:  3.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  1.0
 > get_alu_stage: table  0 , alu_id =  5 :  1.0
alu  5  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
alu  6  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
alu  7  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
alu  10  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
alu  12  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
alu  13  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f709f2be280>, 0), (<alus.DominoALU object at 0x7f709f2be490>, 1), (<alus.DominoALU object at 0x7f709f2be0a0>, 2), (<alus.DominoALU object at 0x7f709f2be190>, 3), (<alus.DominoALU object at 0x7f709f2be550>, 4), (<alus.DominoALU object at 0x7f709f2be520>, 5), (<alus.DominoALU object at 0x7f709f2be580>, 6), (<alus.DominoALU object at 0x7f709f2be5b0>, 7), (<alus.DominoALU object at 0x7f709f2be5e0>, 8), (<alus.DominoALU object at 0x7f709f2be610>, 9), (<alus.DominoALU object at 0x7f709f2be640>, 10), (<alus.DominoALU object at 0x7f709f2be670>, 11), (<alus.DominoALU object at 0x7f709f2be6a0>, 12), (<alus.DominoALU object at 0x7f709f2be6d0>, 13), (<alus.DominoALU object at 0x7f709f2be3a0>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f709f286df0>, 0)]
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 6), (0, 7), (0, 12), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 2, 'opcode': 9, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 5, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '22'}, {'id': 4, 'opcode': 3, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '2'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '31'}, {'id': 6, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 9, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '23'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '2'}, {'id': 10, 'opcode': 5, 'operand0': '1', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 11, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '19'}, {'id': 12, 'opcode': 18, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_7', 'immediate_operand': '2'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '2'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 6), (0, 7), (0, 12), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 2, 'opcode': 9, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 5, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '22'}, {'id': 4, 'opcode': 3, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '2'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '31'}, {'id': 6, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 9, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '23'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '2'}, {'id': 10, 'opcode': 5, 'operand0': '1', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 11, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '19'}, {'id': 12, 'opcode': 18, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_7', 'immediate_operand': '2'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '2'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}]}
Time taken: 101.8418881893158 s
preprocessor time:
running mutation 3
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_3. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp7 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp7 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_established00', 'p_drop']
p__br_tmp8 = p_src==20;

lhs p__br_tmp8 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp8 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp8 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp8 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp8 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp8', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00);
RAW p__br_tmp7 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
RAW p__br_tmp8 = p_src==20; p_established01 = p__br_tmp8 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f97237a2610>, 'write': <dependencyGraph.Statement object at 0x7f9723760490>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f97237a2610>, 'write': <dependencyGraph.Statement object at 0x7f9723760490>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp8 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp8 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp7 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp8 = p_src==20 stmts len 1
p__br_tmp8 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f9723760160>, <dependencyGraph.Codelet object at 0x7f9723760280>, <dependencyGraph.Codelet object at 0x7f9723760370>, <dependencyGraph.Codelet object at 0x7f97237600a0>, <dependencyGraph.Codelet object at 0x7f9723760a00>]
p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp8 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
p__br_tmp8 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f9723760280>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp8 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp8 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;', 'p_array_index0 = p_dst+p_src;', 'p__br_tmp7 = (!(p_src==20))&&(p_dst==20);', 'p__br_tmp8 = p_src==20;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p__br_tmp7', 'p_established00', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p__br_tmp7', 'p_established00', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp8', 'p__br_tmp7', 'p_drop']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp8', 'p__br_tmp7', 'p_drop']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
     |  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['established', 'p_established00']
 node inputs:  ['established', 'p__br_tmp8']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp7', 'p_established00', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp8 = p_src==20;
redundant outputs []
adj_inputs ['p__br_tmp7', 'p_established00', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['established', 'p_src']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_src']
		| merge_candidate: Can try merging.
try_merge: trying to merge components: 
 | a:  p__br_tmp8 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp8 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f9723760430>]
adj_inputs ['p__br_tmp7', 'p_established00', 'p_drop']
redundant outputs ['p__br_tmp8', 'p_established01']
state_var ['established']
resultant component: 
p__br_tmp8 = p_src==20; p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['established', 'p_established00']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/try_merge_query_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/try_merge_query_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/try_merge_query_0_stateful.sk
return code 1
failed
---------- Merge failure. ---------
   | synthesis query failed. Not merging.
   | number of nodes in comp_graph:  5
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p_array_index0 = p_dst+p_src;
 node outputs:  ['p_array_index0']
 node inputs:  ['p_src', 'p_dst']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p_array_index0 = p_dst+p_src;
 * recursive_merge: node ::  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
 node outputs:  ['p__br_tmp7']
 node inputs:  ['p_src', 'p_dst']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp7', 'p_established00', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
 * recursive_merge: node ::  p__br_tmp8 = p_src==20;
 node outputs:  ['p__br_tmp8']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'established', 'p__br_tmp8'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp8 = p_src==20;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp8 = p_src==20;
try_merge: trying to merge components: 
 | a:  p__br_tmp8 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp8 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f9723760430>]
adj_inputs ['p__br_tmp7', 'p_established00', 'p_drop']
redundant outputs ['p__br_tmp8', 'p_established01']
state_var ['established']
resultant component: 
p__br_tmp8 = p_src==20; p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['established', 'p_established00']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/try_merge_query_1_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/try_merge_query_1_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/try_merge_query_1_stateful.sk
return code 1
failed
---------- Merge failure. ---------
 --- cannot fold.
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_drop0', 'p__br_tmp8', 'p_array_index0'}
{'p_drop0', 'p__br_tmp8', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
u:  p__br_tmp8 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp8']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp8', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_5_stateless_p__br_tmp8_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_5_stateless_p__br_tmp8_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_5_stateless_p__br_tmp8_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_5_stateless_p__br_tmp8_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp8 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp8_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp8_bnd_1.sk.out
['comp_5']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  1  and ALU  10
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  10
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  10
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  4
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f9723760dc0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_5', 12: 'comp_7'}
Stateless ALU id 11 has output p__br_tmp8
 *** found dependency between stateless ALU  11  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
4,8,
+---> dependencies of ALU  1 : 
10,
+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
10,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
10,
+---> dependencies of ALU  10 : 

+---> dependencies of ALU  11 : 
0,
+---> dependencies of ALU  12 : 

# alus: =  13
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  1  and  10
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  10
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  11  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 13}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 4), (0, 8), (1, 10), (2, 5), (3, 5), (4, 5), (5, 10), (6, 9), (7, 9), (8, 9), (9, 10), (11, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 235 rows, 171 columns and 548 nonzeros
Model fingerprint: 0x12c2835b
Model has 156 general constraints
Variable types: 0 continuous, 171 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 15 rows and 0 columns
Presolve removed 0 rows and 38 columns
Presolve time: 0.01s
Presolved: 250 rows, 133 columns, 593 nonzeros
Variable types: 0 continuous, 133 integer (119 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 2
T0_A_5 3
T0_A_6 -0
T0_A_7 -0
T0_A_8 2
T0_A_9 3
T0_A_10 4
T0_A_11 -0
T0_A_12 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  2.0
action:  4
num stages:  5
stage:  3.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  4.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
alu  4  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
alu  5  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  4.0
 > get_alu_stage: table  0 , alu_id =  10 :  4.0
alu  10  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  12  ;  [(<alus.DominoALU object at 0x7f97237982b0>, 0), (<alus.DominoALU object at 0x7f9723760d30>, 1), (<alus.DominoALU object at 0x7f9723798220>, 2), (<alus.DominoALU object at 0x7f97237980d0>, 3), (<alus.DominoALU object at 0x7f9723798430>, 4), (<alus.DominoALU object at 0x7f9723798550>, 5), (<alus.DominoALU object at 0x7f9723798490>, 6), (<alus.DominoALU object at 0x7f97237985b0>, 7), (<alus.DominoALU object at 0x7f97237985e0>, 8), (<alus.DominoALU object at 0x7f9723798610>, 9), (<alus.DominoALU object at 0x7f9723798040>, 10), (<alus.DominoALU object at 0x7f9723798640>, 11)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f9723760dc0>, 0)]
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  1  and  10
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  10
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  11  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 8), (1, 10), (2, 5), (3, 5), (4, 5), (5, 10), (6, 9), (7, 9), (8, 9), (9, 10), (11, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp8'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 5, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 2, 'opcode': 13, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '30'}, {'id': 3, 'opcode': 14, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '2'}, {'id': 4, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '0'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12_0', 'operand1': '_out_s12_1', 'operand2': '_out_s12_2', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 8, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 7, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '18'}, {'id': 8, 'opcode': 23, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_5', 'immediate_operand': '25'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_3', 'operand1': '_out_s12_4', 'operand2': '_out_s12_5', 'result': '_out_s20_0', 'immediate_operand': '1'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s20', 'operand2': '_out_s20_0', 'result': 'p_drop0', 'immediate_operand': '0'}, {'id': 11, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': 'p__br_tmp8', 'immediate_operand': '20'}, {'id': 12, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '1'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 8), (1, 10), (2, 5), (3, 5), (4, 5), (5, 10), (6, 9), (7, 9), (8, 9), (9, 10), (11, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp8'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 5, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 2, 'opcode': 13, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '30'}, {'id': 3, 'opcode': 14, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '2'}, {'id': 4, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '0'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12_0', 'operand1': '_out_s12_1', 'operand2': '_out_s12_2', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 8, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 7, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '18'}, {'id': 8, 'opcode': 23, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_5', 'immediate_operand': '25'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_3', 'operand1': '_out_s12_4', 'operand2': '_out_s12_5', 'result': '_out_s20_0', 'immediate_operand': '1'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s20', 'operand2': '_out_s20_0', 'result': 'p_drop0', 'immediate_operand': '0'}, {'id': 11, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': 'p__br_tmp8', 'immediate_operand': '20'}, {'id': 12, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '1'}]}
Time taken: 32.65026593208313 s
preprocessor time:
running mutation 4
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_4. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f29da140610>, 'write': <dependencyGraph.Statement object at 0x7f29da0ff490>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f29da140610>, 'write': <dependencyGraph.Statement object at 0x7f29da0ff490>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f29da0ff100>, <dependencyGraph.Codelet object at 0x7f29da0ff280>, <dependencyGraph.Codelet object at 0x7f29da0ff370>, <dependencyGraph.Codelet object at 0x7f29da0ff130>, <dependencyGraph.Codelet object at 0x7f29da0ffa00>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f29da0ff280>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Created output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;', 'p_array_index0 = p_dst+p_src;', 'p__br_tmp5 = (!(p_src==20))&&(p_dst==20);', 'p__br_tmp6 = p_src==20;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p__br_tmp5', 'p_established00', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p__br_tmp5', 'p_established00', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp5', 'p_drop', 'p__br_tmp6']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp5', 'p_drop', 'p__br_tmp6']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established00', 'established']
 node inputs:  ['established', 'p__br_tmp6']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp5', 'p_established00', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp6 = p_src==20;
redundant outputs []
adj_inputs ['p__br_tmp5', 'p_established00', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['established', 'p_src']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_src']
		| merge_candidate: Can try merging.
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f29da0ff430>]
adj_inputs ['p__br_tmp5', 'p_established00', 'p_drop']
redundant outputs ['p__br_tmp6', 'p_established01']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['p_established00', 'established']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/try_merge_query_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/try_merge_query_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/try_merge_query_0_stateful.sk
return code 1
failed
---------- Merge failure. ---------
   | synthesis query failed. Not merging.
   | number of nodes in comp_graph:  5
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p_array_index0 = p_dst+p_src;
 node outputs:  ['p_array_index0']
 node inputs:  ['p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p_array_index0 = p_dst+p_src;
 * recursive_merge: node ::  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 node outputs:  ['p__br_tmp5']
 node inputs:  ['p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp5', 'p_established00', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 * recursive_merge: node ::  p__br_tmp6 = p_src==20;
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp6', 'established'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp6 = p_src==20;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp6 = p_src==20;
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f29da0ff430>]
adj_inputs ['p__br_tmp5', 'p_established00', 'p_drop']
redundant outputs ['p__br_tmp6', 'p_established01']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['p_established00', 'established']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/try_merge_query_1_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/try_merge_query_1_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/try_merge_query_1_stateful.sk
return code 1
failed
---------- Merge failure. ---------
 --- cannot fold.
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp6', 'p_array_index0', 'p_drop0'}
{'p__br_tmp6', 'p_array_index0', 'p_drop0'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  3  and ALU  6
 *** found stateless dependency between ALU  4  and ALU  6
 *** found stateless dependency between ALU  5  and ALU  6
 *** found stateless dependency between ALU  6  and ALU  15
 *** found stateless dependency between ALU  7  and ALU  10
 *** found stateless dependency between ALU  8  and ALU  10
 *** found stateless dependency between ALU  9  and ALU  10
 *** found stateless dependency between ALU  10  and ALU  15
 *** found stateless dependency between ALU  11  and ALU  14
 *** found stateless dependency between ALU  12  and ALU  14
 *** found stateless dependency between ALU  13  and ALU  14
 *** found stateless dependency between ALU  14  and ALU  15
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f29da0ffdf0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
Stateless ALU id 1 has output p__br_tmp6
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  9
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  12
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
9,12,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 

+---> dependencies of ALU  3 : 
6,
+---> dependencies of ALU  4 : 
6,
+---> dependencies of ALU  5 : 
6,
+---> dependencies of ALU  6 : 
15,
+---> dependencies of ALU  7 : 
10,
+---> dependencies of ALU  8 : 
10,
+---> dependencies of ALU  9 : 
10,
+---> dependencies of ALU  10 : 
15,
+---> dependencies of ALU  11 : 
14,
+---> dependencies of ALU  12 : 
14,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 
15,
+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 9), (0, 12), (1, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 286 rows, 210 columns and 674 nonzeros
Model fingerprint: 0x072a0e84
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 25 rows and 0 columns
Presolve removed 0 rows and 45 columns
Presolve time: 0.01s
Presolved: 311 rows, 165 columns, 738 nonzeros
Variable types: 0 continuous, 165 integer (148 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 10.0000000
Found heuristic solution: objective 8.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 4: 4 8 10 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 -0
T0_A_5 -0
T0_A_6 1
T0_A_7 -0
T0_A_8 -0
T0_A_9 2
T0_A_10 3
T0_A_11 -0
T0_A_12 2
T0_A_13 -0
T0_A_14 3
T0_A_15 4
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  -0.0
action:  5
num stages:  5
stage:  1.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  2.0
action:  9
num stages:  5
stage:  3.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  2.0
action:  12
num stages:  5
stage:  -0.0
action:  13
num stages:  5
stage:  3.0
action:  14
num stages:  5
stage:  4.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
alu  5  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  6 :  1.0
 > get_alu_stage: table  0 , alu_id =  6 :  1.0
alu  6  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
alu  9  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
alu  10  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
alu  12  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  13 :  -0.0
 > get_alu_stage: table  0 , alu_id =  13 :  -0.0
alu  13  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
alu  14  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
alu  15  is of type  STATELESS ; scheduled to stage  4
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f29da136280>, 0), (<alus.DominoALU object at 0x7f29da1364f0>, 1), (<alus.DominoALU object at 0x7f29da136400>, 2), (<alus.DominoALU object at 0x7f29da136070>, 3), (<alus.DominoALU object at 0x7f29da1360a0>, 4), (<alus.DominoALU object at 0x7f29da136580>, 5), (<alus.DominoALU object at 0x7f29da136040>, 6), (<alus.DominoALU object at 0x7f29da1365b0>, 7), (<alus.DominoALU object at 0x7f29da1365e0>, 8), (<alus.DominoALU object at 0x7f29da136610>, 9), (<alus.DominoALU object at 0x7f29da136640>, 10), (<alus.DominoALU object at 0x7f29da136670>, 11), (<alus.DominoALU object at 0x7f29da1366a0>, 12), (<alus.DominoALU object at 0x7f29da1366d0>, 13), (<alus.DominoALU object at 0x7f29da136700>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f29da0ffdf0>, 0)]
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 9), (0, 12), (1, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 2, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 3, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 4, 'opcode': 5, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_0', 'immediate_operand': '2'}, {'id': 5, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_1', 'immediate_operand': '11'}, {'id': 6, 'opcode': 15, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 7, 'opcode': 5, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '16'}, {'id': 8, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 9, 'opcode': 7, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '11'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '21'}, {'id': 11, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 29, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_6', 'immediate_operand': '31'}, {'id': 13, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_7', 'immediate_operand': '10'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '11'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '16'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 9), (0, 12), (1, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 2, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 3, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 4, 'opcode': 5, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_0', 'immediate_operand': '2'}, {'id': 5, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_1', 'immediate_operand': '11'}, {'id': 6, 'opcode': 15, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 7, 'opcode': 5, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '16'}, {'id': 8, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 9, 'opcode': 7, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '11'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '21'}, {'id': 11, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 29, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_6', 'immediate_operand': '31'}, {'id': 13, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_7', 'immediate_operand': '10'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '11'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '16'}]}
Time taken: 69.25674319267273 s
preprocessor time:
running mutation 5
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_5. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f0c9cf7c610>, 'write': <dependencyGraph.Statement object at 0x7f0c9cf3a490>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f0c9cf7c610>, 'write': <dependencyGraph.Statement object at 0x7f0c9cf3a490>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f0c9cf3a100>, <dependencyGraph.Codelet object at 0x7f0c9cf3a280>, <dependencyGraph.Codelet object at 0x7f0c9cf3a370>, <dependencyGraph.Codelet object at 0x7f0c9cf3a130>, <dependencyGraph.Codelet object at 0x7f0c9cf3aa00>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f0c9cf3a280>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Created output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;', 'p_array_index0 = p_dst+p_src;', 'p__br_tmp5 = (!(p_src==20))&&(p_dst==20);', 'p__br_tmp6 = p_src==20;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_established00', 'p__br_tmp5', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p_drop', 'p__br_tmp5', 'p__br_tmp6']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_drop', 'p__br_tmp5', 'p__br_tmp6']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established00', 'established']
 node inputs:  ['established', 'p__br_tmp6']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp5', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp6 = p_src==20;
redundant outputs []
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['established', 'p_src']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_src']
		| merge_candidate: Can try merging.
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established00', 'p_established01']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f0c9cf3a430>]
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p_established01', 'p__br_tmp6']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['p_established00', 'established']
new component state_pkt_fields:  ['p_established00', 'p_established01']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/try_merge_query_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/try_merge_query_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/try_merge_query_0_stateful.sk
return code 1
failed
---------- Merge failure. ---------
   | synthesis query failed. Not merging.
   | number of nodes in comp_graph:  5
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p_array_index0 = p_dst+p_src;
 node outputs:  ['p_array_index0']
 node inputs:  ['p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p_array_index0 = p_dst+p_src;
 * recursive_merge: node ::  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 node outputs:  ['p__br_tmp5']
 node inputs:  ['p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp5', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 * recursive_merge: node ::  p__br_tmp6 = p_src==20;
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'established', 'p__br_tmp6'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp6 = p_src==20;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp6 = p_src==20;
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established00', 'p_established01']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f0c9cf3a430>]
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p_established01', 'p__br_tmp6']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['p_established00', 'established']
new component state_pkt_fields:  ['p_established00', 'p_established01']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/try_merge_query_1_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/try_merge_query_1_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/try_merge_query_1_stateful.sk
return code 1
failed
---------- Merge failure. ---------
 --- cannot fold.
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_array_index0', 'p__br_tmp6', 'p_drop0'}
{'p_array_index0', 'p__br_tmp6', 'p_drop0'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  3  and ALU  6
 *** found stateless dependency between ALU  4  and ALU  6
 *** found stateless dependency between ALU  5  and ALU  6
 *** found stateless dependency between ALU  6  and ALU  15
 *** found stateless dependency between ALU  7  and ALU  10
 *** found stateless dependency between ALU  8  and ALU  10
 *** found stateless dependency between ALU  9  and ALU  10
 *** found stateless dependency between ALU  10  and ALU  15
 *** found stateless dependency between ALU  11  and ALU  14
 *** found stateless dependency between ALU  12  and ALU  14
 *** found stateless dependency between ALU  13  and ALU  14
 *** found stateless dependency between ALU  14  and ALU  15
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f0c9cf3adf0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
Stateless ALU id 2 has output p__br_tmp6
 *** found dependency between stateless ALU  2  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  3
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  5
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  11
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  12
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
3,5,8,11,12,
+---> dependencies of ALU  1 : 

+---> dependencies of ALU  2 : 
0,
+---> dependencies of ALU  3 : 
6,
+---> dependencies of ALU  4 : 
6,
+---> dependencies of ALU  5 : 
6,
+---> dependencies of ALU  6 : 
15,
+---> dependencies of ALU  7 : 
10,
+---> dependencies of ALU  8 : 
10,
+---> dependencies of ALU  9 : 
10,
+---> dependencies of ALU  10 : 
15,
+---> dependencies of ALU  11 : 
14,
+---> dependencies of ALU  12 : 
14,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 
15,
+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  5
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  2  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 3), (0, 5), (0, 8), (0, 11), (0, 12), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 289 rows, 210 columns and 680 nonzeros
Model fingerprint: 0x67cda951
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 9 rows and 0 columns
Presolve removed 0 rows and 53 columns
Presolve time: 0.01s
Presolved: 298 rows, 157 columns, 704 nonzeros
Variable types: 0 continuous, 157 integer (140 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 2
T0_A_4 -0
T0_A_5 2
T0_A_6 3
T0_A_7 -0
T0_A_8 2
T0_A_9 -0
T0_A_10 3
T0_A_11 2
T0_A_12 2
T0_A_13 -0
T0_A_14 3
T0_A_15 4
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  2.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  2.0
action:  5
num stages:  5
stage:  3.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  -0.0
action:  9
num stages:  5
stage:  3.0
action:  10
num stages:  5
stage:  2.0
action:  11
num stages:  5
stage:  2.0
action:  12
num stages:  5
stage:  -0.0
action:  13
num stages:  5
stage:  3.0
action:  14
num stages:  5
stage:  4.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
alu  3  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  2.0
 > get_alu_stage: table  0 , alu_id =  5 :  2.0
alu  5  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
alu  6  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
alu  9  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
alu  10  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
alu  11  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
alu  12  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  13 :  -0.0
 > get_alu_stage: table  0 , alu_id =  13 :  -0.0
alu  13  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
alu  14  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
alu  15  is of type  STATELESS ; scheduled to stage  4
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f0c9cf72280>, 0), (<alus.DominoALU object at 0x7f0c9cf724f0>, 1), (<alus.DominoALU object at 0x7f0c9cf72400>, 2), (<alus.DominoALU object at 0x7f0c9cf72070>, 3), (<alus.DominoALU object at 0x7f0c9cf720a0>, 4), (<alus.DominoALU object at 0x7f0c9cf72580>, 5), (<alus.DominoALU object at 0x7f0c9cf72040>, 6), (<alus.DominoALU object at 0x7f0c9cf725b0>, 7), (<alus.DominoALU object at 0x7f0c9cf725e0>, 8), (<alus.DominoALU object at 0x7f0c9cf72610>, 9), (<alus.DominoALU object at 0x7f0c9cf72640>, 10), (<alus.DominoALU object at 0x7f0c9cf72670>, 11), (<alus.DominoALU object at 0x7f0c9cf726a0>, 12), (<alus.DominoALU object at 0x7f0c9cf726d0>, 13), (<alus.DominoALU object at 0x7f0c9cf72700>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f0c9cf3adf0>, 0)]
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  5
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  2  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 5), (0, 8), (0, 11), (0, 12), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 3, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '0'}, {'id': 4, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '30'}, {'id': 5, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '1'}, {'id': 6, 'opcode': 3, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 7, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 8, 'opcode': 25, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 9, 'opcode': 2, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '30'}, {'id': 11, 'opcode': 11, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '18'}, {'id': 12, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '31'}, {'id': 13, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '9'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '0'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 5), (0, 8), (0, 11), (0, 12), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 3, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '0'}, {'id': 4, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '30'}, {'id': 5, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '1'}, {'id': 6, 'opcode': 3, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 7, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 8, 'opcode': 25, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 9, 'opcode': 2, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '30'}, {'id': 11, 'opcode': 11, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '18'}, {'id': 12, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '31'}, {'id': 13, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '9'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '0'}]}
Time taken: 56.962764739990234 s
preprocessor time:
running mutation 6
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_6. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp9 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp9 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp9 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp9 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp9', 'p_established00', 'p_drop']
p__br_tmp11 = p_src==20;

lhs p__br_tmp11 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp11 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp11 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp11 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp11 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp11', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00);
RAW p__br_tmp9 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
RAW p__br_tmp11 = p_src==20; p_established01 = p__br_tmp11 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7fb223d40610>, 'write': <dependencyGraph.Statement object at 0x7fb223cff490>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7fb223d40610>, 'write': <dependencyGraph.Statement object at 0x7fb223cff490>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp11 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp11 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp9 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp9 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp11 = p_src==20 stmts len 1
p__br_tmp11 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7fb223cff040>, <dependencyGraph.Codelet object at 0x7fb223cff280>, <dependencyGraph.Codelet object at 0x7fb223cff370>, <dependencyGraph.Codelet object at 0x7fb223cff070>, <dependencyGraph.Codelet object at 0x7fb223cffa00>]
p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp11 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp9 = (!(p_src==20))&&(p_dst==20);
p__br_tmp11 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7fb223cff280>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Created output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp11 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp11 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;', 'p_array_index0 = p_dst+p_src;', 'p__br_tmp9 = (!(p_src==20))&&(p_dst==20);', 'p__br_tmp11 = p_src==20;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_established00', 'p__br_tmp9', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_established00', 'p__br_tmp9', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p_drop', 'p__br_tmp11', 'p__br_tmp9']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_drop', 'p__br_tmp11', 'p__br_tmp9']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
     |  p__br_tmp9 = (!(p_src==20))&&(p_dst==20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established00', 'established']
 node inputs:  ['established', 'p__br_tmp11']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp9', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp11 = p_src==20;
redundant outputs []
adj_inputs ['p_established00', 'p__br_tmp9', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['p_src', 'established']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_src']
		| merge_candidate: Can try merging.
try_merge: trying to merge components: 
 | a:  p__br_tmp11 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established00', 'p_established01']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp11 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7fb223cff430>]
adj_inputs ['p_established00', 'p__br_tmp9', 'p_drop']
redundant outputs ['p__br_tmp11', 'p_established01']
state_var ['established']
resultant component: 
p__br_tmp11 = p_src==20; p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['established', 'p_established00']
new component state_pkt_fields:  ['p_established00', 'p_established01']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/try_merge_query_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/try_merge_query_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/try_merge_query_0_stateful.sk
return code 1
failed
---------- Merge failure. ---------
   | synthesis query failed. Not merging.
   | number of nodes in comp_graph:  5
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p_array_index0 = p_dst+p_src;
 node outputs:  ['p_array_index0']
 node inputs:  ['p_src', 'p_dst']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p_array_index0 = p_dst+p_src;
 * recursive_merge: node ::  p__br_tmp9 = (!(p_src==20))&&(p_dst==20);
 node outputs:  ['p__br_tmp9']
 node inputs:  ['p_src', 'p_dst']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp9', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp9 = (!(p_src==20))&&(p_dst==20);
 * recursive_merge: node ::  p__br_tmp11 = p_src==20;
 node outputs:  ['p__br_tmp11']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp11', 'established'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp11 = p_src==20;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp11 = p_src==20;
try_merge: trying to merge components: 
 | a:  p__br_tmp11 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established00', 'p_established01']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp11 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7fb223cff430>]
adj_inputs ['p_established00', 'p__br_tmp9', 'p_drop']
redundant outputs ['p__br_tmp11', 'p_established01']
state_var ['established']
resultant component: 
p__br_tmp11 = p_src==20; p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['established', 'p_established00']
new component state_pkt_fields:  ['p_established00', 'p_established01']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/try_merge_query_1_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/try_merge_query_1_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/try_merge_query_1_stateful.sk
return code 1
failed
---------- Merge failure. ---------
 --- cannot fold.
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp11', 'p_drop0', 'p_array_index0'}
{'p__br_tmp11', 'p_drop0', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
u:  p__br_tmp11 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp9 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp11']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp11', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_5_stateless_p__br_tmp11_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_5_stateless_p__br_tmp11_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_5_stateless_p__br_tmp11_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_5_stateless_p__br_tmp11_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp11 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp11_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp11_bnd_1.sk.out
['comp_5']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7fb223cffdc0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
Stateless ALU id 1 has output p__br_tmp11
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  3
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  4
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  7
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
3,4,7,8,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 3), (0, 4), (0, 7), (0, 8), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 288 rows, 210 columns and 678 nonzeros
Model fingerprint: 0x6ff9d7ac
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 17 rows and 0 columns
Presolve removed 0 rows and 49 columns
Presolve time: 0.01s
Presolved: 305 rows, 161 columns, 722 nonzeros
Variable types: 0 continuous, 161 integer (144 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 8.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 3: 4 8 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 2
T0_A_4 2
T0_A_5 3
T0_A_6 -0
T0_A_7 2
T0_A_8 2
T0_A_9 3
T0_A_10 -0
T0_A_11 -0
T0_A_12 -0
T0_A_13 1
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  2.0
action:  3
num stages:  5
stage:  2.0
action:  4
num stages:  5
stage:  3.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  2.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  -0.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
stage:  1.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
alu  3  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
alu  4  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
alu  5  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
alu  7  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
alu  10  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  13 :  1.0
 > get_alu_stage: table  0 , alu_id =  13 :  1.0
alu  13  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7fb223d37280>, 0), (<alus.DominoALU object at 0x7fb223d37490>, 1), (<alus.DominoALU object at 0x7fb223d370a0>, 2), (<alus.DominoALU object at 0x7fb223d37190>, 3), (<alus.DominoALU object at 0x7fb223d37550>, 4), (<alus.DominoALU object at 0x7fb223d37520>, 5), (<alus.DominoALU object at 0x7fb223d37580>, 6), (<alus.DominoALU object at 0x7fb223d375b0>, 7), (<alus.DominoALU object at 0x7fb223d375e0>, 8), (<alus.DominoALU object at 0x7fb223d37610>, 9), (<alus.DominoALU object at 0x7fb223d37640>, 10), (<alus.DominoALU object at 0x7fb223d37670>, 11), (<alus.DominoALU object at 0x7fb223d376a0>, 12), (<alus.DominoALU object at 0x7fb223d376d0>, 13), (<alus.DominoALU object at 0x7fb223d373a0>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7fb223cffdc0>, 0)]
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 4), (0, 7), (0, 8), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp11'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp11', 'immediate_operand': '20'}, {'id': 2, 'opcode': 3, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '15'}, {'id': 3, 'opcode': 11, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '18'}, {'id': 4, 'opcode': 5, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '16'}, {'id': 5, 'opcode': 15, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '31'}, {'id': 8, 'opcode': 12, 'operand0': 'p_established00', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_4', 'immediate_operand': '22'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '14'}, {'id': 11, 'opcode': 14, 'operand0': '1', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_6', 'immediate_operand': '12'}, {'id': 12, 'opcode': 3, 'operand0': 'p_drop', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '31'}, {'id': 13, 'opcode': 15, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '14'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '17'}, {'id': 15, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 4), (0, 7), (0, 8), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp11'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp11', 'immediate_operand': '20'}, {'id': 2, 'opcode': 3, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '15'}, {'id': 3, 'opcode': 11, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '18'}, {'id': 4, 'opcode': 5, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '16'}, {'id': 5, 'opcode': 15, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '31'}, {'id': 8, 'opcode': 12, 'operand0': 'p_established00', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_4', 'immediate_operand': '22'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '14'}, {'id': 11, 'opcode': 14, 'operand0': '1', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_6', 'immediate_operand': '12'}, {'id': 12, 'opcode': 3, 'operand0': 'p_drop', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '31'}, {'id': 13, 'opcode': 15, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '14'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '17'}, {'id': 15, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}]}
Time taken: 53.45996952056885 s
preprocessor time:
running mutation 7
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_7. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp7 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp7 ? (p_established01==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_established01', 'p_drop']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
RAW p__br_tmp7 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f9a131ce610>, 'write': <dependencyGraph.Statement object at 0x7f9a1318d400>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f9a131ce610>, 'write': <dependencyGraph.Statement object at 0x7f9a1318d400>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC 4
v p__br_tmp7 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f9a1318d9d0>, <dependencyGraph.Codelet object at 0x7f9a1318d280>, <dependencyGraph.Codelet object at 0x7f9a1318d370>, <dependencyGraph.Codelet object at 0x7f9a1318d040>, <dependencyGraph.Codelet object at 0x7f9a1318d160>]
p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp6 = p_src==20;
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f9a1318d280>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Created output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;', 'p_array_index0 = p_dst+p_src;', 'p__br_tmp7 = (!(p_src==20))&&(p_dst==20);', 'p__br_tmp6 = p_src==20;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_established01', 'p__br_tmp7', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_established01', 'p__br_tmp7', 'p_drop']
redundant outputs ['p_established00']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp7', 'p__br_tmp6', 'p_drop']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp7', 'p__br_tmp6', 'p_drop']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
     |  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established01', 'established']
 node inputs:  ['established', 'p__br_tmp6']
 exclude_read_write_flanks: successor inputs:  {'p_established01', 'p__br_tmp7', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established01']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp6 = p_src==20;
redundant outputs []
adj_inputs ['p_established01', 'p__br_tmp7', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['p_src', 'established']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_src']
		| merge_candidate: Can try merging.
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f9a1318d730>]
adj_inputs ['p_established01', 'p__br_tmp7', 'p_drop']
redundant outputs ['p_established00', 'p__br_tmp6']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['p_established01', 'established']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/try_merge_query_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/try_merge_query_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/try_merge_query_0_stateful.sk
return code 1
failed
---------- Merge failure. ---------
   | synthesis query failed. Not merging.
   | number of nodes in comp_graph:  5
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p_array_index0 = p_dst+p_src;
 node outputs:  ['p_array_index0']
 node inputs:  ['p_src', 'p_dst']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p_array_index0 = p_dst+p_src;
 * recursive_merge: node ::  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
 node outputs:  ['p__br_tmp7']
 node inputs:  ['p_src', 'p_dst']
 exclude_read_write_flanks: successor inputs:  {'p_established01', 'p__br_tmp7', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
 * recursive_merge: node ::  p__br_tmp6 = p_src==20;
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'established', 'p__br_tmp6'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp6 = p_src==20;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp6 = p_src==20;
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f9a1318d730>]
adj_inputs ['p_established01', 'p__br_tmp7', 'p_drop']
redundant outputs ['p_established00', 'p__br_tmp6']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['p_established01', 'established']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/try_merge_query_1_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/try_merge_query_1_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/try_merge_query_1_stateful.sk
return code 1
failed
---------- Merge failure. ---------
 --- cannot fold.
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp6', 'p_drop0', 'p_array_index0'}
{'p__br_tmp6', 'p_drop0', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f9a1318ddc0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
Stateless ALU id 1 has output p__br_tmp6
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  6
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  10
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  12
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
6,10,12,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 6), (0, 10), (0, 12), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 287 rows, 210 columns and 676 nonzeros
Model fingerprint: 0x6c84863f
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 21 rows and 0 columns
Presolve removed 0 rows and 47 columns
Presolve time: 0.01s
Presolved: 308 rows, 163 columns, 730 nonzeros
Variable types: 0 continuous, 163 integer (146 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 8.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 3: 4 8 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 -0
T0_A_5 1
T0_A_6 2
T0_A_7 -0
T0_A_8 -0
T0_A_9 3
T0_A_10 2
T0_A_11 -0
T0_A_12 2
T0_A_13 3
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  1.0
action:  5
num stages:  5
stage:  2.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  2.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  2.0
action:  12
num stages:  5
stage:  3.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  1.0
 > get_alu_stage: table  0 , alu_id =  5 :  1.0
alu  5  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
alu  6  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
alu  10  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
alu  12  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
alu  13  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f9a131c5280>, 0), (<alus.DominoALU object at 0x7f9a131c5490>, 1), (<alus.DominoALU object at 0x7f9a131c50a0>, 2), (<alus.DominoALU object at 0x7f9a131c5190>, 3), (<alus.DominoALU object at 0x7f9a131c5550>, 4), (<alus.DominoALU object at 0x7f9a131c5520>, 5), (<alus.DominoALU object at 0x7f9a131c5580>, 6), (<alus.DominoALU object at 0x7f9a131c55b0>, 7), (<alus.DominoALU object at 0x7f9a131c55e0>, 8), (<alus.DominoALU object at 0x7f9a131c5610>, 9), (<alus.DominoALU object at 0x7f9a131c5640>, 10), (<alus.DominoALU object at 0x7f9a131c5670>, 11), (<alus.DominoALU object at 0x7f9a131c56a0>, 12), (<alus.DominoALU object at 0x7f9a131c56d0>, 13), (<alus.DominoALU object at 0x7f9a131c53a0>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f9a1318ddc0>, 0)]
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 6), (0, 10), (0, 12), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established01', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 2, 'opcode': 12, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '22'}, {'id': 3, 'opcode': 10, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '30'}, {'id': 4, 'opcode': 13, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '21'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 13, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_established01', 'result': '_out_s12_2', 'immediate_operand': '21'}, {'id': 7, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '14'}, {'id': 8, 'opcode': 13, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '22'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 4, 'operand0': 'p_dst', 'operand1': 'p_established01', 'operand2': 'p_dst', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '31'}, {'id': 12, 'opcode': 24, 'operand0': 'p_established01', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_7', 'immediate_operand': '25'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '3'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '4'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 6), (0, 10), (0, 12), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established01', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 2, 'opcode': 12, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '22'}, {'id': 3, 'opcode': 10, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '30'}, {'id': 4, 'opcode': 13, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12_1', 'immediate_operand': '21'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 13, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_established01', 'result': '_out_s12_2', 'immediate_operand': '21'}, {'id': 7, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '14'}, {'id': 8, 'opcode': 13, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '22'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 4, 'operand0': 'p_dst', 'operand1': 'p_established01', 'operand2': 'p_dst', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '31'}, {'id': 12, 'opcode': 24, 'operand0': 'p_established01', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_7', 'immediate_operand': '25'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '3'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '4'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}]}
Time taken: 87.46628379821777 s
preprocessor time:
running mutation 8
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_8. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f0352012610>, 'write': <dependencyGraph.Statement object at 0x7f0351fd0490>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f0352012610>, 'write': <dependencyGraph.Statement object at 0x7f0351fd0490>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f0351fd0160>, <dependencyGraph.Codelet object at 0x7f0351fd0280>, <dependencyGraph.Codelet object at 0x7f0351fd0370>, <dependencyGraph.Codelet object at 0x7f0351fd00a0>, <dependencyGraph.Codelet object at 0x7f0351fd0a00>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f0351fd0280>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Created output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;', 'p_array_index0 = p_dst+p_src;', 'p__br_tmp5 = (!(p_src==20))&&(p_dst==20);', 'p__br_tmp6 = p_src==20;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_established00', 'p__br_tmp5', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp5', 'p__br_tmp6', 'p_drop']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp5', 'p__br_tmp6', 'p_drop']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['established', 'p_established00']
 node inputs:  ['established', 'p__br_tmp6']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp5', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp6 = p_src==20;
redundant outputs []
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['p_src', 'established']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_src']
		| merge_candidate: Can try merging.
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established00', 'p_established01']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f0351fd0430>]
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p_established01', 'p__br_tmp6']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['established', 'p_established00']
new component state_pkt_fields:  ['p_established00', 'p_established01']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/try_merge_query_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/try_merge_query_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/try_merge_query_0_stateful.sk
return code 1
failed
---------- Merge failure. ---------
   | synthesis query failed. Not merging.
   | number of nodes in comp_graph:  5
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p_array_index0 = p_dst+p_src;
 node outputs:  ['p_array_index0']
 node inputs:  ['p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p_array_index0 = p_dst+p_src;
 * recursive_merge: node ::  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 node outputs:  ['p__br_tmp5']
 node inputs:  ['p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp5', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 * recursive_merge: node ::  p__br_tmp6 = p_src==20;
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp6', 'established'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp6 = p_src==20;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp6 = p_src==20;
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established00', 'p_established01']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f0351fd0430>]
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p_established01', 'p__br_tmp6']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['established', 'p_established00']
new component state_pkt_fields:  ['p_established00', 'p_established01']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/try_merge_query_1_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/try_merge_query_1_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/try_merge_query_1_stateful.sk
return code 1
failed
---------- Merge failure. ---------
 --- cannot fold.
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_array_index0', 'p_drop0', 'p__br_tmp6'}
{'p_array_index0', 'p_drop0', 'p__br_tmp6'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  7
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  11
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  12
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f0351fd0df0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
Stateless ALU id 15 has output p__br_tmp6
 *** found dependency between stateless ALU  15  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
7,11,12,
+---> dependencies of ALU  1 : 

+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 
0,
# alus: =  16
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 7), (0, 11), (0, 12), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 287 rows, 210 columns and 676 nonzeros
Model fingerprint: 0xe0955479
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 21 rows and 0 columns
Presolve removed 0 rows and 47 columns
Presolve time: 0.01s
Presolved: 308 rows, 163 columns, 730 nonzeros
Variable types: 0 continuous, 163 integer (146 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 10.0000000
Found heuristic solution: objective 8.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 4: 4 8 10 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 -0
T0_A_5 1
T0_A_6 -0
T0_A_7 2
T0_A_8 -0
T0_A_9 3
T0_A_10 -0
T0_A_11 2
T0_A_12 2
T0_A_13 3
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  1.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  2.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  -0.0
action:  10
num stages:  5
stage:  2.0
action:  11
num stages:  5
stage:  2.0
action:  12
num stages:  5
stage:  3.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  1.0
 > get_alu_stage: table  0 , alu_id =  5 :  1.0
alu  5  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
alu  7  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
alu  10  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
alu  11  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
alu  12  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
alu  13  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f0352008280>, 0), (<alus.DominoALU object at 0x7f0352008490>, 1), (<alus.DominoALU object at 0x7f03520080a0>, 2), (<alus.DominoALU object at 0x7f0352008190>, 3), (<alus.DominoALU object at 0x7f0352008550>, 4), (<alus.DominoALU object at 0x7f0352008520>, 5), (<alus.DominoALU object at 0x7f0352008580>, 6), (<alus.DominoALU object at 0x7f03520085b0>, 7), (<alus.DominoALU object at 0x7f03520085e0>, 8), (<alus.DominoALU object at 0x7f0352008610>, 9), (<alus.DominoALU object at 0x7f0352008640>, 10), (<alus.DominoALU object at 0x7f0352008670>, 11), (<alus.DominoALU object at 0x7f03520086a0>, 12), (<alus.DominoALU object at 0x7f03520086d0>, 13), (<alus.DominoALU object at 0x7f03520083a0>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f0351fd0df0>, 0)]
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 7), (0, 11), (0, 12), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '3'}, {'id': 2, 'opcode': 19, 'operand0': 'p_drop', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '0'}, {'id': 3, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 0, 'operand0': '1', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '0'}, {'id': 5, 'opcode': 12, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 9, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 14, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '1'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 21, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '5'}, {'id': 12, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_7', 'immediate_operand': '7'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '30'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 7), (0, 11), (0, 12), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '3'}, {'id': 2, 'opcode': 19, 'operand0': 'p_drop', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '0'}, {'id': 3, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 0, 'operand0': '1', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '0'}, {'id': 5, 'opcode': 12, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 9, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 14, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '1'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 21, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '5'}, {'id': 12, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_7', 'immediate_operand': '7'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '30'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}]}
Time taken: 33.95396566390991 s
preprocessor time:
running mutation 9
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_9. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp3 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp3 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp3 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp3 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp3', 'p_established00', 'p_drop']
p__br_tmp4 = p_src==20;

lhs p__br_tmp4 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp4 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp4 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp4 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp4 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp4', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00);
RAW p__br_tmp3 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
RAW p__br_tmp4 = p_src==20; p_established01 = p__br_tmp4 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f0085927610>, 'write': <dependencyGraph.Statement object at 0x7f00858e5490>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f0085927610>, 'write': <dependencyGraph.Statement object at 0x7f00858e5490>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp4 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp4 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp3 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp3 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp4 = p_src==20 stmts len 1
p__br_tmp4 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f00858e5160>, <dependencyGraph.Codelet object at 0x7f00858e5280>, <dependencyGraph.Codelet object at 0x7f00858e5370>, <dependencyGraph.Codelet object at 0x7f00858e50a0>, <dependencyGraph.Codelet object at 0x7f00858e5a00>]
p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp4 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp3 = (!(p_src==20))&&(p_dst==20);
p__br_tmp4 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f00858e5280>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Created output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp4 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp4 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;', 'p_array_index0 = p_dst+p_src;', 'p__br_tmp3 = (!(p_src==20))&&(p_dst==20);', 'p__br_tmp4 = p_src==20;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_established00', 'p__br_tmp3', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_established00', 'p__br_tmp3', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p_drop', 'p__br_tmp3', 'p__br_tmp4']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_drop', 'p__br_tmp3', 'p__br_tmp4']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
     |  p__br_tmp3 = (!(p_src==20))&&(p_dst==20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['established', 'p_established00']
 node inputs:  ['established', 'p__br_tmp4']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp3', 'p_drop', 'p_established00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp4 = p_src==20;
redundant outputs []
adj_inputs ['p_established00', 'p__br_tmp3', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['established', 'p_src']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_src']
		| merge_candidate: Can try merging.
try_merge: trying to merge components: 
 | a:  p__br_tmp4 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp4 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f00858e5430>]
adj_inputs ['p_established00', 'p__br_tmp3', 'p_drop']
redundant outputs ['p_established01', 'p__br_tmp4']
state_var ['established']
resultant component: 
p__br_tmp4 = p_src==20; p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['established', 'p_established00']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_0_stateful.sk
return code 1
failed
---------- Merge failure. ---------
   | synthesis query failed. Not merging.
   | number of nodes in comp_graph:  5
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p_array_index0 = p_dst+p_src;
 node outputs:  ['p_array_index0']
 node inputs:  ['p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p_array_index0 = p_dst+p_src;
 * recursive_merge: node ::  p__br_tmp3 = (!(p_src==20))&&(p_dst==20);
 node outputs:  ['p__br_tmp3']
 node inputs:  ['p_dst', 'p_src']
 exclude_read_write_flanks: successor inputs:  {'p__br_tmp3', 'p_drop', 'p_established00'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp3 = (!(p_src==20))&&(p_dst==20);
 * recursive_merge: node ::  p__br_tmp4 = p_src==20;
 node outputs:  ['p__br_tmp4']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'established', 'p__br_tmp4'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp4 = p_src==20;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp4 = p_src==20;
try_merge: trying to merge components: 
 | a:  p__br_tmp4 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established01', 'p_established00']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp4 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f00858e5430>]
adj_inputs ['p_established00', 'p__br_tmp3', 'p_drop']
redundant outputs ['p_established01', 'p__br_tmp4']
state_var ['established']
resultant component: 
p__br_tmp4 = p_src==20; p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['established', 'p_established00']
new component state_pkt_fields:  ['p_established01', 'p_established00']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_1_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_1_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/try_merge_query_1_stateful.sk
return code 1
failed
---------- Merge failure. ---------
 --- cannot fold.
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp4', 'p_drop0', 'p_array_index0'}
{'p__br_tmp4', 'p_drop0', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
u:  p__br_tmp4 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp3 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp4']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp4', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_5_stateless_p__br_tmp4_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_5_stateless_p__br_tmp4_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_5_stateless_p__br_tmp4_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_5_stateless_p__br_tmp4_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp4 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp4_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp4_bnd_1.sk.out
['comp_5']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f00858e5df0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
Stateless ALU id 1 has output p__br_tmp4
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  3
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  10
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  11
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
3,8,10,11,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 3), (0, 8), (0, 10), (0, 11), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 288 rows, 210 columns and 678 nonzeros
Model fingerprint: 0x5fbab212
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 13 rows and 0 columns
Presolve removed 0 rows and 51 columns
Presolve time: 0.01s
Presolved: 301 rows, 159 columns, 712 nonzeros
Variable types: 0 continuous, 159 integer (142 binary)
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 1: 4 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 2
T0_A_4 -0
T0_A_5 3
T0_A_6 -0
T0_A_7 -0
T0_A_8 2
T0_A_9 3
T0_A_10 2
T0_A_11 2
T0_A_12 -0
T0_A_13 3
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  2.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  3.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  2.0
action:  10
num stages:  5
stage:  2.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
stage:  3.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
alu  3  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
alu  5  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
alu  10  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
alu  11  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
alu  13  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f008591d280>, 0), (<alus.DominoALU object at 0x7f008591d490>, 1), (<alus.DominoALU object at 0x7f008591d0a0>, 2), (<alus.DominoALU object at 0x7f008591d190>, 3), (<alus.DominoALU object at 0x7f008591d550>, 4), (<alus.DominoALU object at 0x7f008591d4f0>, 5), (<alus.DominoALU object at 0x7f008591d580>, 6), (<alus.DominoALU object at 0x7f008591d5b0>, 7), (<alus.DominoALU object at 0x7f008591d5e0>, 8), (<alus.DominoALU object at 0x7f008591d610>, 9), (<alus.DominoALU object at 0x7f008591d640>, 10), (<alus.DominoALU object at 0x7f008591d670>, 11), (<alus.DominoALU object at 0x7f008591d6a0>, 12), (<alus.DominoALU object at 0x7f008591d6d0>, 13), (<alus.DominoALU object at 0x7f008591d3a0>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f00858e5df0>, 0)]
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 8), (0, 10), (0, 11), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp4'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp4', 'immediate_operand': '20'}, {'id': 2, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 8, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '27'}, {'id': 4, 'opcode': 4, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '21'}, {'id': 5, 'opcode': 15, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '1'}, {'id': 6, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '14'}, {'id': 7, 'opcode': 2, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 12, 'operand0': 'p_drop', 'operand1': 'p_established00', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '18'}, {'id': 9, 'opcode': 2, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '14'}, {'id': 10, 'opcode': 3, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 11, 'opcode': 10, 'operand0': '1', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12_6', 'immediate_operand': '1'}, {'id': 12, 'opcode': 14, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '21'}, {'id': 13, 'opcode': 18, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '21'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '0'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '31'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 8), (0, 10), (0, 11), (1, 0), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp4'], 'outputs': ['established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp4', 'immediate_operand': '20'}, {'id': 2, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 8, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '27'}, {'id': 4, 'opcode': 4, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '21'}, {'id': 5, 'opcode': 15, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '1'}, {'id': 6, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '14'}, {'id': 7, 'opcode': 2, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 12, 'operand0': 'p_drop', 'operand1': 'p_established00', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '18'}, {'id': 9, 'opcode': 2, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '14'}, {'id': 10, 'opcode': 3, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 11, 'opcode': 10, 'operand0': '1', 'operand1': 'p_established00', 'operand2': 'p_src', 'result': '_out_s12_6', 'immediate_operand': '1'}, {'id': 12, 'opcode': 14, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '21'}, {'id': 13, 'opcode': 18, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '21'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '0'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '31'}]}
Time taken: 33.81777048110962 s
preprocessor time:
running mutation 10
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_10. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f095ba94610>, 'write': <dependencyGraph.Statement object at 0x7f095ba52490>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f095ba94610>, 'write': <dependencyGraph.Statement object at 0x7f095ba52490>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f095ba520d0>, <dependencyGraph.Codelet object at 0x7f095ba52250>, <dependencyGraph.Codelet object at 0x7f095ba52370>, <dependencyGraph.Codelet object at 0x7f095ba52220>, <dependencyGraph.Codelet object at 0x7f095ba52a00>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f095ba52250>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Created output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 * recursive_merge strategy: nodes ordered  ['p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);', 'p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;', 'p_array_index0 = p_dst+p_src;', 'p__br_tmp5 = (!(p_src==20))&&(p_dst==20);', 'p__br_tmp6 = p_src==20;']
 * recursive_merge: node ::  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 node outputs:  ['p_drop0']
 node inputs:  ['p_established00', 'p__br_tmp5', 'p_drop']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p_established01']
state_var ['established']
redundant outputs []
     | merged inputs:  ['p__br_tmp6', 'p__br_tmp5', 'p_drop']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p__br_tmp6', 'p__br_tmp5', 'p_drop']
 	| cannot merge: too many inputs.
     | not a merge candidate.
  - recursive_merge: looking at preds of  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
     |  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
redundant outputs []
redundant outputs []
    ~ merge_candidate: both components are stateless.
     | not a merge candidate.
 * recursive_merge: finished processing  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
 * recursive_merge: node ::  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 node outputs:  ['p_established00', 'established']
 node inputs:  ['established', 'p__br_tmp6']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp5', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  ['p_established00']
  - recursive_merge: looking at preds of  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
     |  p__br_tmp6 = p_src==20;
redundant outputs []
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs []
state_var ['established']
     | merged inputs:  ['established', 'p_src']
		| merged state vars:  {'established'}
		| merged stateless vars:  ['p_src']
		| merge_candidate: Can try merging.
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established00', 'p_established01']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f095ba52430>]
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p_established01', 'p__br_tmp6']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['p_established00', 'established']
new component state_pkt_fields:  ['p_established00', 'p_established01']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/try_merge_query_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/try_merge_query_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/try_merge_query_0_stateful.sk
return code 1
failed
---------- Merge failure. ---------
   | synthesis query failed. Not merging.
   | number of nodes in comp_graph:  5
 * recursive_merge: finished processing  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 * recursive_merge: node ::  p_array_index0 = p_dst+p_src;
 node outputs:  ['p_array_index0']
 node inputs:  ['p_src', 'p_dst']
 exclude_read_write_flanks: successor inputs:  set()
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p_array_index0 = p_dst+p_src;
 * recursive_merge: node ::  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 node outputs:  ['p__br_tmp5']
 node inputs:  ['p_src', 'p_dst']
 exclude_read_write_flanks: successor inputs:  {'p_established00', 'p__br_tmp5', 'p_drop'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
 * recursive_merge: node ::  p__br_tmp6 = p_src==20;
 node outputs:  ['p__br_tmp6']
 node inputs:  ['p_src']
 exclude_read_write_flanks: successor inputs:  {'established', 'p__br_tmp6'}
 exclude_read_write_flanks: filtered outputs (temp filtered):  []
 * recursive_merge: finished processing  p__br_tmp6 = p_src==20;
 ----------------- iteratively folding node. folding_idx =  0
trying to fold node:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
trying to fold predecessor:  p__br_tmp6 = p_src==20;
try_merge: trying to merge components: 
 | a:  p__br_tmp6 = p_src==20;
 | b:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 | state_pkt_fields of component b:  ['p_established00', 'p_established01']
merge component: component is ----  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
 ********************** adding statements from component  p__br_tmp6 = p_src==20;  with *************************
[<dependencyGraph.Statement object at 0x7f095ba52430>]
adj_inputs ['p_established00', 'p__br_tmp5', 'p_drop']
redundant outputs ['p_established01', 'p__br_tmp6']
state_var ['established']
resultant component: 
p__br_tmp6 = p_src==20; p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
new component inputs:  ['established', 'p_src']
new component outputs:  ['p_established00', 'established']
new component state_pkt_fields:  ['p_established00', 'p_established01']
-------------- Merging... -------------
~~~~~~~~~~set_alu_inputs:  ['established', 'p_src']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p_src', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/try_merge_query_1_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/try_merge_query_1_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/try_merge_query_1_stateful.sk
return code 1
failed
---------- Merge failure. ---------
 --- cannot fold.
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_array_index0', 'p_drop0', 'p__br_tmp6'}
{'p_array_index0', 'p_drop0', 'p__br_tmp6'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  4
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  7
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  10
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  11
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f095ba52df0>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
Stateless ALU id 15 has output p__br_tmp6
 *** found dependency between stateless ALU  15  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
4,7,8,10,11,
+---> dependencies of ALU  1 : 

+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 
0,
# alus: =  16
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 4), (0, 7), (0, 8), (0, 10), (0, 11), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 289 rows, 210 columns and 680 nonzeros
Model fingerprint: 0xa38ec287
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 9 rows and 0 columns
Presolve removed 0 rows and 53 columns
Presolve time: 0.01s
Presolved: 298 rows, 157 columns, 704 nonzeros
Variable types: 0 continuous, 157 integer (140 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 2
T0_A_5 3
T0_A_6 -0
T0_A_7 2
T0_A_8 2
T0_A_9 3
T0_A_10 2
T0_A_11 2
T0_A_12 -0
T0_A_13 3
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  2.0
action:  4
num stages:  5
stage:  3.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  2.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  2.0
action:  10
num stages:  5
stage:  2.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
stage:  3.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
alu  4  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
alu  5  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
alu  7  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
alu  10  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
alu  11  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
alu  13  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f095ba8a280>, 0), (<alus.DominoALU object at 0x7f095ba8a490>, 1), (<alus.DominoALU object at 0x7f095ba8a0a0>, 2), (<alus.DominoALU object at 0x7f095ba8a190>, 3), (<alus.DominoALU object at 0x7f095ba8a550>, 4), (<alus.DominoALU object at 0x7f095ba8a520>, 5), (<alus.DominoALU object at 0x7f095ba8a580>, 6), (<alus.DominoALU object at 0x7f095ba8a5b0>, 7), (<alus.DominoALU object at 0x7f095ba8a5e0>, 8), (<alus.DominoALU object at 0x7f095ba8a610>, 9), (<alus.DominoALU object at 0x7f095ba8a640>, 10), (<alus.DominoALU object at 0x7f095ba8a670>, 11), (<alus.DominoALU object at 0x7f095ba8a6a0>, 12), (<alus.DominoALU object at 0x7f095ba8a6d0>, 13), (<alus.DominoALU object at 0x7f095ba8a3a0>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f095ba52df0>, 0)]
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 7), (0, 8), (0, 10), (0, 11), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 2, 'opcode': 5, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 18, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_1', 'immediate_operand': '7'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '17'}, {'id': 6, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 27, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_dst', 'result': '_out_s12_3', 'immediate_operand': '31'}, {'id': 8, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_4', 'immediate_operand': '11'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '0'}, {'id': 12, 'opcode': 2, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '23'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '1'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 7), (0, 8), (0, 10), (0, 11), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 2, 'opcode': 5, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 18, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_1', 'immediate_operand': '7'}, {'id': 5, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '17'}, {'id': 6, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 27, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_dst', 'result': '_out_s12_3', 'immediate_operand': '31'}, {'id': 8, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_4', 'immediate_operand': '11'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '0'}, {'id': 12, 'opcode': 2, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '23'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '1'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}]}
Time taken: 77.5681505203247 s
preprocessor time:
