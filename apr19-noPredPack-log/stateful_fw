running mutation 1
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_1. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f90d55de6a0>, 'write': <dependencyGraph.Statement object at 0x7f90d56184f0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f90d55de6a0>, 'write': <dependencyGraph.Statement object at 0x7f90d56184f0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f90d5618130>, <dependencyGraph.Codelet object at 0x7f90d56182b0>, <dependencyGraph.Codelet object at 0x7f90d56183d0>, <dependencyGraph.Codelet object at 0x7f90d5618280>, <dependencyGraph.Codelet object at 0x7f90d5618a60>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f90d56182b0>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_drop0', 'p_array_index0', 'p__br_tmp6'}
{'p_drop0', 'p_array_index0', 'p__br_tmp6'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_1_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  1  and ALU  4
 *** found stateless dependency between ALU  2  and ALU  4
 *** found stateless dependency between ALU  3  and ALU  4
 *** found stateless dependency between ALU  4  and ALU  13
 *** found stateless dependency between ALU  5  and ALU  8
 *** found stateless dependency between ALU  6  and ALU  8
 *** found stateless dependency between ALU  7  and ALU  8
 *** found stateless dependency between ALU  8  and ALU  13
 *** found stateless dependency between ALU  9  and ALU  12
 *** found stateless dependency between ALU  10  and ALU  12
 *** found stateless dependency between ALU  11  and ALU  12
 *** found stateless dependency between ALU  12  and ALU  13
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  2
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  6
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  7
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  10
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f90d5618f10>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
Stateless ALU id 15 has output p__br_tmp6
 *** found dependency between stateless ALU  15  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
2,6,7,10,
+---> dependencies of ALU  1 : 
4,
+---> dependencies of ALU  2 : 
4,
+---> dependencies of ALU  3 : 
4,
+---> dependencies of ALU  4 : 
13,
+---> dependencies of ALU  5 : 
8,
+---> dependencies of ALU  6 : 
8,
+---> dependencies of ALU  7 : 
8,
+---> dependencies of ALU  8 : 
13,
+---> dependencies of ALU  9 : 
12,
+---> dependencies of ALU  10 : 
12,
+---> dependencies of ALU  11 : 
12,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 

+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 
0,
# alus: =  16
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  1  and  4
 * gen_dependency_list: dependency between  2  and  4
 * gen_dependency_list: dependency between  3  and  4
 * gen_dependency_list: dependency between  4  and  13
 * gen_dependency_list: dependency between  5  and  8
 * gen_dependency_list: dependency between  6  and  8
 * gen_dependency_list: dependency between  7  and  8
 * gen_dependency_list: dependency between  8  and  13
 * gen_dependency_list: dependency between  9  and  12
 * gen_dependency_list: dependency between  10  and  12
 * gen_dependency_list: dependency between  11  and  12
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  15  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 2), (0, 6), (0, 7), (0, 10), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (15, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 288 rows, 210 columns and 678 nonzeros
Model fingerprint: 0xe6b06abe
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 13 rows and 0 columns
Presolve removed 0 rows and 51 columns
Presolve time: 0.01s
Presolved: 301 rows, 159 columns, 712 nonzeros
Variable types: 0 continuous, 159 integer (142 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 2
T0_A_3 -0
T0_A_4 3
T0_A_5 -0
T0_A_6 2
T0_A_7 2
T0_A_8 3
T0_A_9 -0
T0_A_10 2
T0_A_11 -0
T0_A_12 3
T0_A_13 4
T0_A_14 -0
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  2.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  3.0
action:  4
num stages:  5
stage:  -0.0
action:  5
num stages:  5
stage:  2.0
action:  6
num stages:  5
stage:  2.0
action:  7
num stages:  5
stage:  3.0
action:  8
num stages:  5
stage:  -0.0
action:  9
num stages:  5
stage:  2.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  3.0
action:  12
num stages:  5
stage:  4.0
action:  13
num stages:  5
stage:  -0.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
alu  2  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  3.0
 > get_alu_stage: table  0 , alu_id =  4 :  3.0
alu  4  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
alu  5  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
alu  6  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
alu  7  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  8 :  3.0
 > get_alu_stage: table  0 , alu_id =  8 :  3.0
alu  8  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
alu  9  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
alu  10  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  3.0
 > get_alu_stage: table  0 , alu_id =  12 :  3.0
alu  12  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  13 :  4.0
 > get_alu_stage: table  0 , alu_id =  13 :  4.0
alu  13  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  14 :  -0.0
 > get_alu_stage: table  0 , alu_id =  14 :  -0.0
alu  14  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f90d5618e20>, 0), (<alus.DominoALU object at 0x7f90d55d2190>, 1), (<alus.DominoALU object at 0x7f90d55d20d0>, 2), (<alus.DominoALU object at 0x7f90d55d2070>, 3), (<alus.DominoALU object at 0x7f90d55d2400>, 4), (<alus.DominoALU object at 0x7f90d55d2460>, 5), (<alus.DominoALU object at 0x7f90d55d2490>, 6), (<alus.DominoALU object at 0x7f90d55d24c0>, 7), (<alus.DominoALU object at 0x7f90d55d24f0>, 8), (<alus.DominoALU object at 0x7f90d55d2520>, 9), (<alus.DominoALU object at 0x7f90d55d2550>, 10), (<alus.DominoALU object at 0x7f90d55d2580>, 11), (<alus.DominoALU object at 0x7f90d55d25b0>, 12), (<alus.DominoALU object at 0x7f90d55d2700>, 13), (<alus.DominoALU object at 0x7f90d55d2310>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f90d5618f10>, 0)]
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  1  and  4
 * gen_dependency_list: dependency between  2  and  4
 * gen_dependency_list: dependency between  3  and  4
 * gen_dependency_list: dependency between  4  and  13
 * gen_dependency_list: dependency between  5  and  8
 * gen_dependency_list: dependency between  6  and  8
 * gen_dependency_list: dependency between  7  and  8
 * gen_dependency_list: dependency between  8  and  13
 * gen_dependency_list: dependency between  9  and  12
 * gen_dependency_list: dependency between  10  and  12
 * gen_dependency_list: dependency between  11  and  12
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  15  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 6), (0, 7), (0, 10), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['established', 'p_established01', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 12, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '0'}, {'id': 2, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '28'}, {'id': 3, 'opcode': 4, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 4, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '1'}, {'id': 5, 'opcode': 5, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 6, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 7, 'opcode': 24, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 8, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 9, 'opcode': 11, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '28'}, {'id': 10, 'opcode': 9, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_6', 'immediate_operand': '29'}, {'id': 11, 'opcode': 2, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 12, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '2'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '1'}, {'id': 14, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 6), (0, 7), (0, 10), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['established', 'p_established01', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 12, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '0'}, {'id': 2, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '28'}, {'id': 3, 'opcode': 4, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_1', 'immediate_operand': '20'}, {'id': 4, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '1'}, {'id': 5, 'opcode': 5, 'operand0': 'p_dst', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 6, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 7, 'opcode': 24, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 8, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 9, 'opcode': 11, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '28'}, {'id': 10, 'opcode': 9, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_6', 'immediate_operand': '29'}, {'id': 11, 'opcode': 2, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 12, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '2'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '1'}, {'id': 14, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}]}
Time taken: 140.17243027687073 s
preprocessor time:
running mutation 2
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_2. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f129ec7f6a0>, 'write': <dependencyGraph.Statement object at 0x7f129ecb94f0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f129ec7f6a0>, 'write': <dependencyGraph.Statement object at 0x7f129ecb94f0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f129ecb9130>, <dependencyGraph.Codelet object at 0x7f129ecb92b0>, <dependencyGraph.Codelet object at 0x7f129ecb93d0>, <dependencyGraph.Codelet object at 0x7f129ecb9280>, <dependencyGraph.Codelet object at 0x7f129ecb9a60>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f129ecb92b0>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp6', 'p_drop0', 'p_array_index0'}
{'p__br_tmp6', 'p_drop0', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
final_output:  _out_s20_1
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s20_1
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_2_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  11
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  11
 *** found stateless dependency between ALU  10  and ALU  11
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f129ecb9f10>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
Stateless ALU id 1 has output p__br_tmp6
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  2
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  4
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
2,4,8,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
11,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
11,
+---> dependencies of ALU  10 : 
11,
+---> dependencies of ALU  11 : 

+---> dependencies of ALU  12 : 

# alus: =  13
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  11
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  11
 * gen_dependency_list: dependency between  10  and  11
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 13}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 2), (0, 4), (0, 8), (1, 0), (2, 5), (3, 5), (4, 5), (5, 11), (6, 9), (7, 9), (8, 9), (9, 11), (10, 11)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 236 rows, 171 columns and 550 nonzeros
Model fingerprint: 0x7912423c
Model has 156 general constraints
Variable types: 0 continuous, 171 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 11 rows and 0 columns
Presolve removed 0 rows and 40 columns
Presolve time: 0.01s
Presolved: 247 rows, 131 columns, 585 nonzeros
Variable types: 0 continuous, 131 integer (117 binary)
Found heuristic solution: objective 9.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 9 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 2
T0_A_3 -0
T0_A_4 2
T0_A_5 3
T0_A_6 -0
T0_A_7 -0
T0_A_8 2
T0_A_9 3
T0_A_10 -0
T0_A_11 4
T0_A_12 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  2.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  2.0
action:  4
num stages:  5
stage:  3.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  -0.0
action:  10
num stages:  5
stage:  4.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
alu  2  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
alu  4  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
alu  5  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
alu  10  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  11 :  4.0
 > get_alu_stage: table  0 , alu_id =  11 :  4.0
alu  11  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  12  ;  [(<alus.DominoALU object at 0x7f129ecb9e20>, 0), (<alus.DominoALU object at 0x7f129ec73460>, 1), (<alus.DominoALU object at 0x7f129ec73370>, 2), (<alus.DominoALU object at 0x7f129ec73490>, 3), (<alus.DominoALU object at 0x7f129ec730d0>, 4), (<alus.DominoALU object at 0x7f129ec73310>, 5), (<alus.DominoALU object at 0x7f129ec73220>, 6), (<alus.DominoALU object at 0x7f129ec733a0>, 7), (<alus.DominoALU object at 0x7f129ec73280>, 8), (<alus.DominoALU object at 0x7f129ec73400>, 9), (<alus.DominoALU object at 0x7f129ec73070>, 10), (<alus.DominoALU object at 0x7f129ec736a0>, 11)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f129ecb9f10>, 0)]
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  11
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  11
 * gen_dependency_list: dependency between  10  and  11
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 4), (0, 8), (1, 0), (2, 5), (3, 5), (4, 5), (5, 11), (6, 9), (7, 9), (8, 9), (9, 11), (10, 11)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established01', 'p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 2, 'opcode': 5, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 4, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 11, 'operand0': 'p_drop', 'operand1': 'p_established00', 'operand2': 'p_dst', 'result': '_out_s12_1', 'immediate_operand': '2'}, {'id': 5, 'opcode': 15, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 12, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '20'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s12_5', 'result': 'p_drop0', 'immediate_operand': '0'}, {'id': 12, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '1'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 4), (0, 8), (1, 0), (2, 5), (3, 5), (4, 5), (5, 11), (6, 9), (7, 9), (8, 9), (9, 11), (10, 11)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established01', 'p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 2, 'opcode': 5, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 4, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 4, 'opcode': 11, 'operand0': 'p_drop', 'operand1': 'p_established00', 'operand2': 'p_dst', 'result': '_out_s12_1', 'immediate_operand': '2'}, {'id': 5, 'opcode': 15, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '0'}, {'id': 6, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 7, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 12, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '20'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 10, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s12_5', 'result': 'p_drop0', 'immediate_operand': '0'}, {'id': 12, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '1'}]}
Time taken: 63.13287329673767 s
preprocessor time:
running mutation 3
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_3. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp7 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp7 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_established00', 'p_drop']
p__br_tmp8 = p_src==20;

lhs p__br_tmp8 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp8 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp8 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp8 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp8 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp8', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00);
RAW p__br_tmp7 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
RAW p__br_tmp8 = p_src==20; p_established01 = p__br_tmp8 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f2fa608d6a0>, 'write': <dependencyGraph.Statement object at 0x7f2fa60c74f0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f2fa608d6a0>, 'write': <dependencyGraph.Statement object at 0x7f2fa60c74f0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp8 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp8 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp7 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp8 = p_src==20 stmts len 1
p__br_tmp8 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f2fa60c7130>, <dependencyGraph.Codelet object at 0x7f2fa60c72b0>, <dependencyGraph.Codelet object at 0x7f2fa60c73d0>, <dependencyGraph.Codelet object at 0x7f2fa60c7280>, <dependencyGraph.Codelet object at 0x7f2fa60c7a60>]
p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp8 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
p__br_tmp8 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f2fa60c72b0>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp8 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp8 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_drop0', 'p_array_index0', 'p__br_tmp8'}
{'p_drop0', 'p_array_index0', 'p__br_tmp8'}
u:  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
u:  p__br_tmp8 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp8 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp7 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp8']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp8', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_5_stateless_p__br_tmp8_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_5_stateless_p__br_tmp8_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_5_stateless_p__br_tmp8_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_3_out/comp_5_stateless_p__br_tmp8_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp8 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp8_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp8_bnd_1.sk.out
['comp_5']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  1  and ALU  4
 *** found stateless dependency between ALU  2  and ALU  4
 *** found stateless dependency between ALU  3  and ALU  4
 *** found stateless dependency between ALU  4  and ALU  13
 *** found stateless dependency between ALU  5  and ALU  8
 *** found stateless dependency between ALU  6  and ALU  8
 *** found stateless dependency between ALU  7  and ALU  8
 *** found stateless dependency between ALU  8  and ALU  13
 *** found stateless dependency between ALU  9  and ALU  12
 *** found stateless dependency between ALU  10  and ALU  12
 *** found stateless dependency between ALU  11  and ALU  12
 *** found stateless dependency between ALU  12  and ALU  13
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  1
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  2
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  3
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  5
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  11
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f2fa60c7f10>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_7', 15: 'comp_5'}
Stateless ALU id 15 has output p__br_tmp8
 *** found dependency between stateless ALU  15  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
1,2,3,5,11,
+---> dependencies of ALU  1 : 
4,
+---> dependencies of ALU  2 : 
4,
+---> dependencies of ALU  3 : 
4,
+---> dependencies of ALU  4 : 
13,
+---> dependencies of ALU  5 : 
8,
+---> dependencies of ALU  6 : 
8,
+---> dependencies of ALU  7 : 
8,
+---> dependencies of ALU  8 : 
13,
+---> dependencies of ALU  9 : 
12,
+---> dependencies of ALU  10 : 
12,
+---> dependencies of ALU  11 : 
12,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 

+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 
0,
# alus: =  16
 * gen_dependency_list: dependency between  0  and  1
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  5
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  1  and  4
 * gen_dependency_list: dependency between  2  and  4
 * gen_dependency_list: dependency between  3  and  4
 * gen_dependency_list: dependency between  4  and  13
 * gen_dependency_list: dependency between  5  and  8
 * gen_dependency_list: dependency between  6  and  8
 * gen_dependency_list: dependency between  7  and  8
 * gen_dependency_list: dependency between  8  and  13
 * gen_dependency_list: dependency between  9  and  12
 * gen_dependency_list: dependency between  10  and  12
 * gen_dependency_list: dependency between  11  and  12
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  15  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 1), (0, 2), (0, 3), (0, 5), (0, 11), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (15, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 289 rows, 210 columns and 680 nonzeros
Model fingerprint: 0xeae264bf
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 9 rows and 0 columns
Presolve removed 0 rows and 53 columns
Presolve time: 0.01s
Presolved: 298 rows, 157 columns, 704 nonzeros
Variable types: 0 continuous, 157 integer (140 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 10.0000000
Found heuristic solution: objective 8.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 4: 4 8 10 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 2
T0_A_2 2
T0_A_3 2
T0_A_4 3
T0_A_5 2
T0_A_6 -0
T0_A_7 -0
T0_A_8 3
T0_A_9 -0
T0_A_10 -0
T0_A_11 2
T0_A_12 3
T0_A_13 4
T0_A_14 -0
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  2.0
action:  1
num stages:  5
stage:  2.0
action:  2
num stages:  5
stage:  2.0
action:  3
num stages:  5
stage:  3.0
action:  4
num stages:  5
stage:  2.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  3.0
action:  8
num stages:  5
stage:  -0.0
action:  9
num stages:  5
stage:  -0.0
action:  10
num stages:  5
stage:  2.0
action:  11
num stages:  5
stage:  3.0
action:  12
num stages:  5
stage:  4.0
action:  13
num stages:  5
stage:  -0.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  2.0
 > get_alu_stage: table  0 , alu_id =  1 :  2.0
alu  1  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
alu  2  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
alu  3  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  4 :  3.0
 > get_alu_stage: table  0 , alu_id =  4 :  3.0
alu  4  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  5 :  2.0
 > get_alu_stage: table  0 , alu_id =  5 :  2.0
alu  5  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  3.0
 > get_alu_stage: table  0 , alu_id =  8 :  3.0
alu  8  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
alu  9  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
alu  10  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
alu  11  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  12 :  3.0
 > get_alu_stage: table  0 , alu_id =  12 :  3.0
alu  12  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  13 :  4.0
 > get_alu_stage: table  0 , alu_id =  13 :  4.0
alu  13  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  14 :  -0.0
 > get_alu_stage: table  0 , alu_id =  14 :  -0.0
alu  14  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f2fa60c7e20>, 0), (<alus.DominoALU object at 0x7f2fa6081190>, 1), (<alus.DominoALU object at 0x7f2fa60810d0>, 2), (<alus.DominoALU object at 0x7f2fa6081070>, 3), (<alus.DominoALU object at 0x7f2fa6081400>, 4), (<alus.DominoALU object at 0x7f2fa6081460>, 5), (<alus.DominoALU object at 0x7f2fa6081490>, 6), (<alus.DominoALU object at 0x7f2fa60814c0>, 7), (<alus.DominoALU object at 0x7f2fa60814f0>, 8), (<alus.DominoALU object at 0x7f2fa6081520>, 9), (<alus.DominoALU object at 0x7f2fa6081550>, 10), (<alus.DominoALU object at 0x7f2fa6081580>, 11), (<alus.DominoALU object at 0x7f2fa60815b0>, 12), (<alus.DominoALU object at 0x7f2fa6081700>, 13), (<alus.DominoALU object at 0x7f2fa6081310>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f2fa60c7f10>, 0)]
 * gen_dependency_list: dependency between  0  and  1
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  5
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  1  and  4
 * gen_dependency_list: dependency between  2  and  4
 * gen_dependency_list: dependency between  3  and  4
 * gen_dependency_list: dependency between  4  and  13
 * gen_dependency_list: dependency between  5  and  8
 * gen_dependency_list: dependency between  6  and  8
 * gen_dependency_list: dependency between  7  and  8
 * gen_dependency_list: dependency between  8  and  13
 * gen_dependency_list: dependency between  9  and  12
 * gen_dependency_list: dependency between  10  and  12
 * gen_dependency_list: dependency between  11  and  12
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  15  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 1), (0, 2), (0, 3), (0, 5), (0, 11), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp8'], 'outputs': ['p_established00', 'established', 'p_established01'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 11, 'operand0': '1', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '29'}, {'id': 2, 'opcode': 6, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '21'}, {'id': 3, 'opcode': 15, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_drop', 'result': '_out_s12_1', 'immediate_operand': '17'}, {'id': 4, 'opcode': 8, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '17'}, {'id': 5, 'opcode': 13, 'operand0': '1', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_2', 'immediate_operand': '31'}, {'id': 6, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 7, 'opcode': 8, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '12'}, {'id': 8, 'opcode': 15, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 9, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 10, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '11'}, {'id': 11, 'opcode': 24, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '23'}, {'id': 12, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '12'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '28'}, {'id': 14, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': 'p__br_tmp8', 'immediate_operand': '20'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 1), (0, 2), (0, 3), (0, 5), (0, 11), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp8'], 'outputs': ['p_established00', 'established', 'p_established01'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 11, 'operand0': '1', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '29'}, {'id': 2, 'opcode': 6, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '21'}, {'id': 3, 'opcode': 15, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_drop', 'result': '_out_s12_1', 'immediate_operand': '17'}, {'id': 4, 'opcode': 8, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '17'}, {'id': 5, 'opcode': 13, 'operand0': '1', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_2', 'immediate_operand': '31'}, {'id': 6, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 7, 'opcode': 8, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '12'}, {'id': 8, 'opcode': 15, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 9, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 10, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '11'}, {'id': 11, 'opcode': 24, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '23'}, {'id': 12, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '12'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '28'}, {'id': 14, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': 'p__br_tmp8', 'immediate_operand': '20'}]}
Time taken: 32.11907601356506 s
preprocessor time:
running mutation 4
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_4. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f06a44736a0>, 'write': <dependencyGraph.Statement object at 0x7f06a44ad4f0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f06a44736a0>, 'write': <dependencyGraph.Statement object at 0x7f06a44ad4f0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f06a44ad130>, <dependencyGraph.Codelet object at 0x7f06a44ad2b0>, <dependencyGraph.Codelet object at 0x7f06a44ad3d0>, <dependencyGraph.Codelet object at 0x7f06a44ad280>, <dependencyGraph.Codelet object at 0x7f06a44ada60>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f06a44ad2b0>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_array_index0', 'p_drop0', 'p__br_tmp6'}
{'p_array_index0', 'p_drop0', 'p__br_tmp6'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_4_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  5
 *** found stateless dependency between ALU  3  and ALU  5
 *** found stateless dependency between ALU  4  and ALU  5
 *** found stateless dependency between ALU  5  and ALU  14
 *** found stateless dependency between ALU  6  and ALU  9
 *** found stateless dependency between ALU  7  and ALU  9
 *** found stateless dependency between ALU  8  and ALU  9
 *** found stateless dependency between ALU  9  and ALU  14
 *** found stateless dependency between ALU  10  and ALU  13
 *** found stateless dependency between ALU  11  and ALU  13
 *** found stateless dependency between ALU  12  and ALU  13
 *** found stateless dependency between ALU  13  and ALU  14
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  4
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  7
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** found stateless dependency between ALU  0  and ALU  12
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f06a44adf10>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_5'}
Stateless ALU id 15 has output p__br_tmp6
 *** found dependency between stateless ALU  15  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
4,7,8,12,
+---> dependencies of ALU  1 : 

+---> dependencies of ALU  2 : 
5,
+---> dependencies of ALU  3 : 
5,
+---> dependencies of ALU  4 : 
5,
+---> dependencies of ALU  5 : 
14,
+---> dependencies of ALU  6 : 
9,
+---> dependencies of ALU  7 : 
9,
+---> dependencies of ALU  8 : 
9,
+---> dependencies of ALU  9 : 
14,
+---> dependencies of ALU  10 : 
13,
+---> dependencies of ALU  11 : 
13,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 

+---> dependencies of ALU  15 : 
0,
# alus: =  16
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 4), (0, 7), (0, 8), (0, 12), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 288 rows, 210 columns and 678 nonzeros
Model fingerprint: 0x2f2bd28c
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 13 rows and 0 columns
Presolve removed 0 rows and 51 columns
Presolve time: 0.01s
Presolved: 301 rows, 159 columns, 712 nonzeros
Variable types: 0 continuous, 159 integer (142 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 2
T0_A_5 3
T0_A_6 -0
T0_A_7 2
T0_A_8 2
T0_A_9 3
T0_A_10 -0
T0_A_11 -0
T0_A_12 2
T0_A_13 3
T0_A_14 4
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  2.0
action:  4
num stages:  5
stage:  3.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  2.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  3.0
action:  9
num stages:  5
stage:  -0.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  2.0
action:  12
num stages:  5
stage:  3.0
action:  13
num stages:  5
stage:  4.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
alu  4  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
 > get_alu_stage: table  0 , alu_id =  5 :  3.0
alu  5  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
alu  7  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
 > get_alu_stage: table  0 , alu_id =  9 :  3.0
alu  9  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
alu  10  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
 > get_alu_stage: table  0 , alu_id =  12 :  2.0
alu  12  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
 > get_alu_stage: table  0 , alu_id =  13 :  3.0
alu  13  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
 > get_alu_stage: table  0 , alu_id =  14 :  4.0
alu  14  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f06a44ade20>, 0), (<alus.DominoALU object at 0x7f06a4467490>, 1), (<alus.DominoALU object at 0x7f06a4467430>, 2), (<alus.DominoALU object at 0x7f06a44674f0>, 3), (<alus.DominoALU object at 0x7f06a44670d0>, 4), (<alus.DominoALU object at 0x7f06a4467310>, 5), (<alus.DominoALU object at 0x7f06a4467220>, 6), (<alus.DominoALU object at 0x7f06a44673a0>, 7), (<alus.DominoALU object at 0x7f06a4467280>, 8), (<alus.DominoALU object at 0x7f06a4467400>, 9), (<alus.DominoALU object at 0x7f06a4467070>, 10), (<alus.DominoALU object at 0x7f06a4467190>, 11), (<alus.DominoALU object at 0x7f06a4467370>, 12), (<alus.DominoALU object at 0x7f06a4467610>, 13), (<alus.DominoALU object at 0x7f06a4467730>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f06a44adf10>, 0)]
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  12
 * gen_dependency_list: dependency between  2  and  5
 * gen_dependency_list: dependency between  3  and  5
 * gen_dependency_list: dependency between  4  and  5
 * gen_dependency_list: dependency between  5  and  14
 * gen_dependency_list: dependency between  6  and  9
 * gen_dependency_list: dependency between  7  and  9
 * gen_dependency_list: dependency between  8  and  9
 * gen_dependency_list: dependency between  9  and  14
 * gen_dependency_list: dependency between  10  and  13
 * gen_dependency_list: dependency between  11  and  13
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  15  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 7), (0, 8), (0, 12), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['established', 'p_established00', 'p_established01'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 2, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 3, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '31'}, {'id': 4, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '8'}, {'id': 5, 'opcode': 9, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '20'}, {'id': 6, 'opcode': 8, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '28'}, {'id': 7, 'opcode': 2, 'operand0': 'p_drop', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 26, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '1'}, {'id': 10, 'opcode': 4, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_6', 'immediate_operand': '0'}, {'id': 12, 'opcode': 13, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '1'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '10'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '1'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 7), (0, 8), (0, 12), (2, 5), (3, 5), (4, 5), (5, 14), (6, 9), (7, 9), (8, 9), (9, 14), (10, 13), (11, 13), (12, 13), (13, 14), (15, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['established', 'p_established00', 'p_established01'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 != pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = 1;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '0'}, {'id': 2, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 3, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_0', 'immediate_operand': '31'}, {'id': 4, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '8'}, {'id': 5, 'opcode': 9, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '20'}, {'id': 6, 'opcode': 8, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_2', 'immediate_operand': '28'}, {'id': 7, 'opcode': 2, 'operand0': 'p_drop', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_3', 'immediate_operand': '0'}, {'id': 8, 'opcode': 26, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 9, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '1'}, {'id': 10, 'opcode': 4, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_dst', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 11, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_6', 'immediate_operand': '0'}, {'id': 12, 'opcode': 13, 'operand0': 'p_established00', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '1'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '10'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '1'}, {'id': 15, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}]}
Time taken: 251.3226203918457 s
preprocessor time:
running mutation 5
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_5. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f38dffec6a0>, 'write': <dependencyGraph.Statement object at 0x7f38e00264f0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f38dffec6a0>, 'write': <dependencyGraph.Statement object at 0x7f38e00264f0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f38e0026130>, <dependencyGraph.Codelet object at 0x7f38e00262b0>, <dependencyGraph.Codelet object at 0x7f38e00263d0>, <dependencyGraph.Codelet object at 0x7f38e0026280>, <dependencyGraph.Codelet object at 0x7f38e0026a60>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f38e00262b0>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out
Stored read, write flank variables
{'p_established00', 'p_established01'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_drop0', 'p__br_tmp6', 'p_array_index0'}
{'p_drop0', 'p__br_tmp6', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_5_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  1  and ALU  4
 *** found stateless dependency between ALU  2  and ALU  4
 *** found stateless dependency between ALU  3  and ALU  4
 *** found stateless dependency between ALU  4  and ALU  13
 *** found stateless dependency between ALU  5  and ALU  8
 *** found stateless dependency between ALU  6  and ALU  8
 *** found stateless dependency between ALU  7  and ALU  8
 *** found stateless dependency between ALU  8  and ALU  13
 *** found stateless dependency between ALU  9  and ALU  12
 *** found stateless dependency between ALU  10  and ALU  12
 *** found stateless dependency between ALU  11  and ALU  12
 *** found stateless dependency between ALU  12  and ALU  13
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  2
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  6
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  7
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  10
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  11
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f38e0026f10>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
Stateless ALU id 14 has output p__br_tmp6
 *** found dependency between stateless ALU  14  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
2,6,7,10,11,
+---> dependencies of ALU  1 : 
4,
+---> dependencies of ALU  2 : 
4,
+---> dependencies of ALU  3 : 
4,
+---> dependencies of ALU  4 : 
13,
+---> dependencies of ALU  5 : 
8,
+---> dependencies of ALU  6 : 
8,
+---> dependencies of ALU  7 : 
8,
+---> dependencies of ALU  8 : 
13,
+---> dependencies of ALU  9 : 
12,
+---> dependencies of ALU  10 : 
12,
+---> dependencies of ALU  11 : 
12,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 

+---> dependencies of ALU  14 : 
0,
+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  1  and  4
 * gen_dependency_list: dependency between  2  and  4
 * gen_dependency_list: dependency between  3  and  4
 * gen_dependency_list: dependency between  4  and  13
 * gen_dependency_list: dependency between  5  and  8
 * gen_dependency_list: dependency between  6  and  8
 * gen_dependency_list: dependency between  7  and  8
 * gen_dependency_list: dependency between  8  and  13
 * gen_dependency_list: dependency between  9  and  12
 * gen_dependency_list: dependency between  10  and  12
 * gen_dependency_list: dependency between  11  and  12
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  14  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 2), (0, 6), (0, 7), (0, 10), (0, 11), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (14, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 289 rows, 210 columns and 680 nonzeros
Model fingerprint: 0xea2be389
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 9 rows and 0 columns
Presolve removed 0 rows and 53 columns
Presolve time: 0.01s
Presolved: 298 rows, 157 columns, 704 nonzeros
Variable types: 0 continuous, 157 integer (140 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 2
T0_A_3 -0
T0_A_4 3
T0_A_5 -0
T0_A_6 2
T0_A_7 2
T0_A_8 3
T0_A_9 -0
T0_A_10 2
T0_A_11 2
T0_A_12 3
T0_A_13 4
T0_A_14 -0
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  2.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  3.0
action:  4
num stages:  5
stage:  -0.0
action:  5
num stages:  5
stage:  2.0
action:  6
num stages:  5
stage:  2.0
action:  7
num stages:  5
stage:  3.0
action:  8
num stages:  5
stage:  -0.0
action:  9
num stages:  5
stage:  2.0
action:  10
num stages:  5
stage:  2.0
action:  11
num stages:  5
stage:  3.0
action:  12
num stages:  5
stage:  4.0
action:  13
num stages:  5
stage:  -0.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
alu  2  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  3.0
 > get_alu_stage: table  0 , alu_id =  4 :  3.0
alu  4  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
alu  5  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
alu  6  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
alu  7  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  8 :  3.0
 > get_alu_stage: table  0 , alu_id =  8 :  3.0
alu  8  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
alu  9  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
alu  10  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
alu  11  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  12 :  3.0
 > get_alu_stage: table  0 , alu_id =  12 :  3.0
alu  12  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  13 :  4.0
 > get_alu_stage: table  0 , alu_id =  13 :  4.0
alu  13  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  14 :  -0.0
 > get_alu_stage: table  0 , alu_id =  14 :  -0.0
alu  14  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7f38e0026e20>, 0), (<alus.DominoALU object at 0x7f38dffe0190>, 1), (<alus.DominoALU object at 0x7f38dffe00d0>, 2), (<alus.DominoALU object at 0x7f38dffe0070>, 3), (<alus.DominoALU object at 0x7f38dffe0400>, 4), (<alus.DominoALU object at 0x7f38dffe0460>, 5), (<alus.DominoALU object at 0x7f38dffe0490>, 6), (<alus.DominoALU object at 0x7f38dffe04c0>, 7), (<alus.DominoALU object at 0x7f38dffe04f0>, 8), (<alus.DominoALU object at 0x7f38dffe0520>, 9), (<alus.DominoALU object at 0x7f38dffe0550>, 10), (<alus.DominoALU object at 0x7f38dffe0580>, 11), (<alus.DominoALU object at 0x7f38dffe05b0>, 12), (<alus.DominoALU object at 0x7f38dffe0700>, 13), (<alus.DominoALU object at 0x7f38dffe0820>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f38e0026f10>, 0)]
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  1  and  4
 * gen_dependency_list: dependency between  2  and  4
 * gen_dependency_list: dependency between  3  and  4
 * gen_dependency_list: dependency between  4  and  13
 * gen_dependency_list: dependency between  5  and  8
 * gen_dependency_list: dependency between  6  and  8
 * gen_dependency_list: dependency between  7  and  8
 * gen_dependency_list: dependency between  8  and  13
 * gen_dependency_list: dependency between  9  and  12
 * gen_dependency_list: dependency between  10  and  12
 * gen_dependency_list: dependency between  11  and  12
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  14  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 6), (0, 7), (0, 10), (0, 11), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (14, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['established', 'p_established00', 'p_established01'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 10, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '23'}, {'id': 2, 'opcode': 4, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '10'}, {'id': 3, 'opcode': 8, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '31'}, {'id': 4, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '31'}, {'id': 5, 'opcode': 12, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '28'}, {'id': 6, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_established00', 'result': '_out_s12_3', 'immediate_operand': '20'}, {'id': 7, 'opcode': 4, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 8, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '8'}, {'id': 9, 'opcode': 9, 'operand0': 'p_dst', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 10, 'opcode': 9, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_6', 'immediate_operand': '0'}, {'id': 11, 'opcode': 2, 'operand0': 'p_drop', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 12, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '11'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '14'}, {'id': 14, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 15, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 6), (0, 7), (0, 10), (0, 11), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (14, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['established', 'p_established00', 'p_established01'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 10, 'operand0': '1', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12', 'immediate_operand': '23'}, {'id': 2, 'opcode': 4, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '10'}, {'id': 3, 'opcode': 8, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '31'}, {'id': 4, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '31'}, {'id': 5, 'opcode': 12, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '28'}, {'id': 6, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_established00', 'result': '_out_s12_3', 'immediate_operand': '20'}, {'id': 7, 'opcode': 4, 'operand0': 'p_drop', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 8, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '8'}, {'id': 9, 'opcode': 9, 'operand0': 'p_dst', 'operand1': '1', 'operand2': '1', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 10, 'opcode': 9, 'operand0': 'p_established00', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_6', 'immediate_operand': '0'}, {'id': 11, 'opcode': 2, 'operand0': 'p_drop', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 12, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '11'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '14'}, {'id': 14, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 15, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}]}
Time taken: 36.872807025909424 s
preprocessor time:
running mutation 6
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_6. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp9 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp9 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp9 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp9 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp9', 'p_established00', 'p_drop']
p__br_tmp11 = p_src==20;

lhs p__br_tmp11 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp11 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp11 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp11 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp11 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp11', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00);
RAW p__br_tmp9 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
RAW p__br_tmp11 = p_src==20; p_established01 = p__br_tmp11 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7f403af086a0>, 'write': <dependencyGraph.Statement object at 0x7f403af424f0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7f403af086a0>, 'write': <dependencyGraph.Statement object at 0x7f403af424f0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp11 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp11 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp9 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp9 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp11 = p_src==20 stmts len 1
p__br_tmp11 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7f403af42130>, <dependencyGraph.Codelet object at 0x7f403af422b0>, <dependencyGraph.Codelet object at 0x7f403af423d0>, <dependencyGraph.Codelet object at 0x7f403af42280>, <dependencyGraph.Codelet object at 0x7f403af42a60>]
p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp11 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp9 = (!(p_src==20))&&(p_dst==20);
p__br_tmp11 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7f403af422b0>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp11 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp11 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp11', 'p_drop0', 'p_array_index0'}
{'p__br_tmp11', 'p_drop0', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
u:  p__br_tmp11 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp11 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp9 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp9 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp11']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp11', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_5_stateless_p__br_tmp11_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_5_stateless_p__br_tmp11_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_5_stateless_p__br_tmp11_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_5_stateless_p__br_tmp11_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp11 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp11_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp11_bnd_1.sk.out
['comp_5']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
final_output:  _out_s20_1
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s12_2
   alu output:  _out_s20
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s12_5
   alu output:  _out_s20_0
   alu output:  _out_s20_1
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_6_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  2  and ALU  11
 *** found stateless dependency between ALU  3  and ALU  6
 *** found stateless dependency between ALU  4  and ALU  6
 *** found stateless dependency between ALU  5  and ALU  6
 *** found stateless dependency between ALU  6  and ALU  11
 *** found stateless dependency between ALU  7  and ALU  10
 *** found stateless dependency between ALU  8  and ALU  10
 *** found stateless dependency between ALU  9  and ALU  10
 *** found stateless dependency between ALU  10  and ALU  11
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7f403af42f10>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
Stateless ALU id 1 has output p__br_tmp11
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  4
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  9
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
4,9,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 
11,
+---> dependencies of ALU  3 : 
6,
+---> dependencies of ALU  4 : 
6,
+---> dependencies of ALU  5 : 
6,
+---> dependencies of ALU  6 : 
11,
+---> dependencies of ALU  7 : 
10,
+---> dependencies of ALU  8 : 
10,
+---> dependencies of ALU  9 : 
10,
+---> dependencies of ALU  10 : 
11,
+---> dependencies of ALU  11 : 

+---> dependencies of ALU  12 : 

# alus: =  13
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  11
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  11
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  11
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 13}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 4), (0, 9), (1, 0), (2, 11), (3, 6), (4, 6), (5, 6), (6, 11), (7, 10), (8, 10), (9, 10), (10, 11)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 235 rows, 171 columns and 548 nonzeros
Model fingerprint: 0x99e89c77
Model has 156 general constraints
Variable types: 0 continuous, 171 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 15 rows and 0 columns
Presolve removed 0 rows and 38 columns
Presolve time: 0.01s
Presolved: 250 rows, 133 columns, 593 nonzeros
Variable types: 0 continuous, 133 integer (119 binary)
Found heuristic solution: objective 9.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 9 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 2
T0_A_5 -0
T0_A_6 3
T0_A_7 -0
T0_A_8 -0
T0_A_9 2
T0_A_10 3
T0_A_11 4
T0_A_12 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  2.0
action:  4
num stages:  5
stage:  -0.0
action:  5
num stages:  5
stage:  3.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  2.0
action:  9
num stages:  5
stage:  3.0
action:  10
num stages:  5
stage:  4.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
 > get_alu_stage: table  0 , alu_id =  4 :  2.0
alu  4  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
alu  5  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
alu  6  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
alu  9  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
alu  10  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  11 :  4.0
 > get_alu_stage: table  0 , alu_id =  11 :  4.0
alu  11  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  12  ;  [(<alus.DominoALU object at 0x7f403af42e20>, 0), (<alus.DominoALU object at 0x7f403aefc460>, 1), (<alus.DominoALU object at 0x7f403aefc370>, 2), (<alus.DominoALU object at 0x7f403aefc490>, 3), (<alus.DominoALU object at 0x7f403aefc0d0>, 4), (<alus.DominoALU object at 0x7f403aefc310>, 5), (<alus.DominoALU object at 0x7f403aefc220>, 6), (<alus.DominoALU object at 0x7f403aefc3a0>, 7), (<alus.DominoALU object at 0x7f403aefc280>, 8), (<alus.DominoALU object at 0x7f403aefc400>, 9), (<alus.DominoALU object at 0x7f403aefc070>, 10), (<alus.DominoALU object at 0x7f403aefc6a0>, 11)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7f403af42f10>, 0)]
 * gen_dependency_list: dependency between  0  and  4
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  2  and  11
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  11
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  11
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 9), (1, 0), (2, 11), (3, 6), (4, 6), (5, 6), (6, 11), (7, 10), (8, 10), (9, 10), (10, 11)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp11'], 'outputs': ['p_established01', 'p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_src', 'result': 'p__br_tmp11', 'immediate_operand': '20'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 9, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_0', 'immediate_operand': '8'}, {'id': 4, 'opcode': 4, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '12'}, {'id': 5, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 6, 'opcode': 14, 'operand0': '_out_s12_0', 'operand1': '_out_s12_1', 'operand2': '_out_s12_2', 'result': '_out_s20', 'immediate_operand': '1'}, {'id': 7, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_3', 'immediate_operand': '20'}, {'id': 8, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '3'}, {'id': 9, 'opcode': 9, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_3', 'operand1': '_out_s12_4', 'operand2': '_out_s12_5', 'result': '_out_s20_0', 'immediate_operand': '16'}, {'id': 11, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s20', 'operand2': '_out_s20_0', 'result': 'p_drop0', 'immediate_operand': '1'}, {'id': 12, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '0'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 4), (0, 9), (1, 0), (2, 11), (3, 6), (4, 6), (5, 6), (6, 11), (7, 10), (8, 10), (9, 10), (10, 11)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp11'], 'outputs': ['p_established01', 'p_established00', 'established'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': 'p_src', 'result': 'p__br_tmp11', 'immediate_operand': '20'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 3, 'opcode': 9, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_0', 'immediate_operand': '8'}, {'id': 4, 'opcode': 4, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '12'}, {'id': 5, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 6, 'opcode': 14, 'operand0': '_out_s12_0', 'operand1': '_out_s12_1', 'operand2': '_out_s12_2', 'result': '_out_s20', 'immediate_operand': '1'}, {'id': 7, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_3', 'immediate_operand': '20'}, {'id': 8, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '3'}, {'id': 9, 'opcode': 9, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_drop', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_3', 'operand1': '_out_s12_4', 'operand2': '_out_s12_5', 'result': '_out_s20_0', 'immediate_operand': '16'}, {'id': 11, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s20', 'operand2': '_out_s20_0', 'result': 'p_drop0', 'immediate_operand': '1'}, {'id': 12, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '0'}]}
Time taken: 22.266724348068237 s
preprocessor time:
running mutation 7
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_7. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp7 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp7 ? (p_established01==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp7', 'p_established01', 'p_drop']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
RAW p__br_tmp7 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7fdbaffc36a0>, 'write': <dependencyGraph.Statement object at 0x7fdbafffd460>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7fdbaffc36a0>, 'write': <dependencyGraph.Statement object at 0x7fdbafffd460>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC 4
v p__br_tmp7 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7fdbafffda30>, <dependencyGraph.Codelet object at 0x7fdbafffd2b0>, <dependencyGraph.Codelet object at 0x7fdbafffd3d0>, <dependencyGraph.Codelet object at 0x7fdbafffd1c0>, <dependencyGraph.Codelet object at 0x7fdbafffd130>]
p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp6 = p_src==20;
p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7fdbafffd2b0>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established01'}
p_established01  is write flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_array_index0', 'p__br_tmp6', 'p_drop0'}
{'p_array_index0', 'p__br_tmp6', 'p_drop0'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp7 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp7 ? (p_established01==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_7_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  3  and ALU  6
 *** found stateless dependency between ALU  4  and ALU  6
 *** found stateless dependency between ALU  5  and ALU  6
 *** found stateless dependency between ALU  6  and ALU  15
 *** found stateless dependency between ALU  7  and ALU  10
 *** found stateless dependency between ALU  8  and ALU  10
 *** found stateless dependency between ALU  9  and ALU  10
 *** found stateless dependency between ALU  10  and ALU  15
 *** found stateless dependency between ALU  11  and ALU  14
 *** found stateless dependency between ALU  12  and ALU  14
 *** found stateless dependency between ALU  13  and ALU  14
 *** found stateless dependency between ALU  14  and ALU  15
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7fdbafffdf10>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
Stateless ALU id 2 has output p__br_tmp6
 *** found dependency between stateless ALU  2  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  3
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  9
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  11
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_7', 2: 'comp_5', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
3,9,11,
+---> dependencies of ALU  1 : 

+---> dependencies of ALU  2 : 
0,
+---> dependencies of ALU  3 : 
6,
+---> dependencies of ALU  4 : 
6,
+---> dependencies of ALU  5 : 
6,
+---> dependencies of ALU  6 : 
15,
+---> dependencies of ALU  7 : 
10,
+---> dependencies of ALU  8 : 
10,
+---> dependencies of ALU  9 : 
10,
+---> dependencies of ALU  10 : 
15,
+---> dependencies of ALU  11 : 
14,
+---> dependencies of ALU  12 : 
14,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 
15,
+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  2  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 3), (0, 9), (0, 11), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 287 rows, 210 columns and 676 nonzeros
Model fingerprint: 0x12384335
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 17 rows and 0 columns
Presolve removed 0 rows and 49 columns
Presolve time: 0.01s
Presolved: 304 rows, 161 columns, 720 nonzeros
Variable types: 0 continuous, 161 integer (144 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 2
T0_A_4 -0
T0_A_5 -0
T0_A_6 3
T0_A_7 -0
T0_A_8 -0
T0_A_9 2
T0_A_10 3
T0_A_11 2
T0_A_12 -0
T0_A_13 -0
T0_A_14 3
T0_A_15 4
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  2.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  -0.0
action:  5
num stages:  5
stage:  3.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  -0.0
action:  8
num stages:  5
stage:  2.0
action:  9
num stages:  5
stage:  3.0
action:  10
num stages:  5
stage:  2.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
stage:  -0.0
action:  13
num stages:  5
stage:  3.0
action:  14
num stages:  5
stage:  4.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
alu  3  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
alu  5  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
 > get_alu_stage: table  0 , alu_id =  6 :  3.0
alu  6  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
 > get_alu_stage: table  0 , alu_id =  8 :  -0.0
alu  8  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
alu  9  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
alu  10  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
alu  11  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  13 :  -0.0
 > get_alu_stage: table  0 , alu_id =  13 :  -0.0
alu  13  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
 > get_alu_stage: table  0 , alu_id =  14 :  3.0
alu  14  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
alu  15  is of type  STATELESS ; scheduled to stage  4
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7fdbafffde20>, 0), (<alus.DominoALU object at 0x7fdbaffb7430>, 1), (<alus.DominoALU object at 0x7fdbaffb7220>, 2), (<alus.DominoALU object at 0x7fdbaffb7520>, 3), (<alus.DominoALU object at 0x7fdbaffb73a0>, 4), (<alus.DominoALU object at 0x7fdbaffb7160>, 5), (<alus.DominoALU object at 0x7fdbaffb7340>, 6), (<alus.DominoALU object at 0x7fdbaffb7490>, 7), (<alus.DominoALU object at 0x7fdbaffb7550>, 8), (<alus.DominoALU object at 0x7fdbaffb75e0>, 9), (<alus.DominoALU object at 0x7fdbaffb7310>, 10), (<alus.DominoALU object at 0x7fdbaffb7460>, 11), (<alus.DominoALU object at 0x7fdbaffb7610>, 12), (<alus.DominoALU object at 0x7fdbaffb7640>, 13), (<alus.DominoALU object at 0x7fdbaffb74c0>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7fdbafffdf10>, 0)]
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  2  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 9), (0, 11), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established01', 'established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 3, 'opcode': 11, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_established01', 'result': '_out_s12', 'immediate_operand': '6'}, {'id': 4, 'opcode': 3, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_0', 'immediate_operand': '17'}, {'id': 5, 'opcode': 6, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '31'}, {'id': 6, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '9'}, {'id': 7, 'opcode': 5, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 8, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '31'}, {'id': 9, 'opcode': 20, 'operand0': 'p_established01', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '11'}, {'id': 11, 'opcode': 18, 'operand0': '1', 'operand1': 'p_established01', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '3'}, {'id': 12, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_6', 'immediate_operand': '28'}, {'id': 13, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '1'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '16'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '27'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 3), (0, 9), (0, 11), (2, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established01', 'established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 1, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 2, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 3, 'opcode': 11, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_established01', 'result': '_out_s12', 'immediate_operand': '6'}, {'id': 4, 'opcode': 3, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_0', 'immediate_operand': '17'}, {'id': 5, 'opcode': 6, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_1', 'immediate_operand': '31'}, {'id': 6, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '9'}, {'id': 7, 'opcode': 5, 'operand0': 'p_dst', 'operand1': '1', 'operand2': 'p_src', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 8, 'opcode': 14, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '31'}, {'id': 9, 'opcode': 20, 'operand0': 'p_established01', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '11'}, {'id': 11, 'opcode': 18, 'operand0': '1', 'operand1': 'p_established01', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '3'}, {'id': 12, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_6', 'immediate_operand': '28'}, {'id': 13, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '1'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '16'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '27'}]}
Time taken: 39.08224534988403 s
preprocessor time:
running mutation 8
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_8. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7fd252a886a0>, 'write': <dependencyGraph.Statement object at 0x7fd252ac24f0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7fd252a886a0>, 'write': <dependencyGraph.Statement object at 0x7fd252ac24f0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7fd252ac2130>, <dependencyGraph.Codelet object at 0x7fd252ac22b0>, <dependencyGraph.Codelet object at 0x7fd252ac23d0>, <dependencyGraph.Codelet object at 0x7fd252ac2280>, <dependencyGraph.Codelet object at 0x7fd252ac2a60>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7fd252ac22b0>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p__br_tmp6', 'p_array_index0', 'p_drop0'}
{'p__br_tmp6', 'p_array_index0', 'p_drop0'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_8_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  3  and ALU  6
 *** found stateless dependency between ALU  4  and ALU  6
 *** found stateless dependency between ALU  5  and ALU  6
 *** found stateless dependency between ALU  6  and ALU  15
 *** found stateless dependency between ALU  7  and ALU  10
 *** found stateless dependency between ALU  8  and ALU  10
 *** found stateless dependency between ALU  9  and ALU  10
 *** found stateless dependency between ALU  10  and ALU  15
 *** found stateless dependency between ALU  11  and ALU  14
 *** found stateless dependency between ALU  12  and ALU  14
 *** found stateless dependency between ALU  13  and ALU  14
 *** found stateless dependency between ALU  14  and ALU  15
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7fd252ac2f10>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
Stateless ALU id 1 has output p__br_tmp6
 *** found dependency between stateless ALU  1  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  8
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** found stateless dependency between ALU  0  and ALU  9
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_5', 2: 'comp_7', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_6', 15: 'comp_6'}
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
8,9,
+---> dependencies of ALU  1 : 
0,
+---> dependencies of ALU  2 : 

+---> dependencies of ALU  3 : 
6,
+---> dependencies of ALU  4 : 
6,
+---> dependencies of ALU  5 : 
6,
+---> dependencies of ALU  6 : 
15,
+---> dependencies of ALU  7 : 
10,
+---> dependencies of ALU  8 : 
10,
+---> dependencies of ALU  9 : 
10,
+---> dependencies of ALU  10 : 
15,
+---> dependencies of ALU  11 : 
14,
+---> dependencies of ALU  12 : 
14,
+---> dependencies of ALU  13 : 
14,
+---> dependencies of ALU  14 : 
15,
+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 8), (0, 9), (1, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 286 rows, 210 columns and 674 nonzeros
Model fingerprint: 0x7def7997
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 29 rows and 0 columns
Presolve removed 0 rows and 43 columns
Presolve time: 0.01s
Presolved: 315 rows, 167 columns, 748 nonzeros
Variable types: 0 continuous, 167 integer (150 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 10.0000000
Found heuristic solution: objective 8.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 4: 4 8 10 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 -0
T0_A_3 -0
T0_A_4 -0
T0_A_5 -0
T0_A_6 1
T0_A_7 -0
T0_A_8 2
T0_A_9 2
T0_A_10 3
T0_A_11 -0
T0_A_12 -0
T0_A_13 -0
T0_A_14 1
T0_A_15 4
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  -0.0
action:  3
num stages:  5
stage:  -0.0
action:  4
num stages:  5
stage:  -0.0
action:  5
num stages:  5
stage:  1.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  2.0
action:  8
num stages:  5
stage:  2.0
action:  9
num stages:  5
stage:  3.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  -0.0
action:  12
num stages:  5
stage:  -0.0
action:  13
num stages:  5
stage:  1.0
action:  14
num stages:  5
stage:  4.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
 > get_alu_stage: table  0 , alu_id =  3 :  -0.0
alu  3  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
 > get_alu_stage: table  0 , alu_id =  4 :  -0.0
alu  4  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
alu  5  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  6 :  1.0
 > get_alu_stage: table  0 , alu_id =  6 :  1.0
alu  6  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
 > get_alu_stage: table  0 , alu_id =  8 :  2.0
alu  8  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
 > get_alu_stage: table  0 , alu_id =  9 :  2.0
alu  9  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
 > get_alu_stage: table  0 , alu_id =  10 :  3.0
alu  10  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
 > get_alu_stage: table  0 , alu_id =  12 :  -0.0
alu  12  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  13 :  -0.0
 > get_alu_stage: table  0 , alu_id =  13 :  -0.0
alu  13  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  14 :  1.0
 > get_alu_stage: table  0 , alu_id =  14 :  1.0
alu  14  is of type  STATELESS ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
 > get_alu_stage: table  0 , alu_id =  15 :  4.0
alu  15  is of type  STATELESS ; scheduled to stage  4
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7fd252ac2e20>, 0), (<alus.DominoALU object at 0x7fd252a7c370>, 1), (<alus.DominoALU object at 0x7fd252a7c3a0>, 2), (<alus.DominoALU object at 0x7fd252a7c3d0>, 3), (<alus.DominoALU object at 0x7fd252a7c400>, 4), (<alus.DominoALU object at 0x7fd252a7c160>, 5), (<alus.DominoALU object at 0x7fd252a7c340>, 6), (<alus.DominoALU object at 0x7fd252a7c460>, 7), (<alus.DominoALU object at 0x7fd252a7c4f0>, 8), (<alus.DominoALU object at 0x7fd252a7c580>, 9), (<alus.DominoALU object at 0x7fd252a7c310>, 10), (<alus.DominoALU object at 0x7fd252a7c2e0>, 11), (<alus.DominoALU object at 0x7fd252a7c430>, 12), (<alus.DominoALU object at 0x7fd252a7c4c0>, 13), (<alus.DominoALU object at 0x7fd252a7c640>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7fd252ac2f10>, 0)]
 * gen_dependency_list: dependency between  0  and  8
 * gen_dependency_list: dependency between  0  and  9
 * gen_dependency_list: dependency between  1  and  0
 * gen_dependency_list: dependency between  3  and  6
 * gen_dependency_list: dependency between  4  and  6
 * gen_dependency_list: dependency between  5  and  6
 * gen_dependency_list: dependency between  6  and  15
 * gen_dependency_list: dependency between  7  and  10
 * gen_dependency_list: dependency between  8  and  10
 * gen_dependency_list: dependency between  9  and  10
 * gen_dependency_list: dependency between  10  and  15
 * gen_dependency_list: dependency between  11  and  14
 * gen_dependency_list: dependency between  12  and  14
 * gen_dependency_list: dependency between  13  and  14
 * gen_dependency_list: dependency between  14  and  15
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 8), (0, 9), (1, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established01', 'established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 2, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 3, 'opcode': 9, 'operand0': 'p_dst', 'operand1': '1', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 4, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 5, 'opcode': 7, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_1', 'immediate_operand': '27'}, {'id': 6, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '2'}, {'id': 7, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 8, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '19'}, {'id': 9, 'opcode': 12, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_4', 'immediate_operand': '31'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '1'}, {'id': 11, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_6', 'immediate_operand': '20'}, {'id': 13, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '31'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '1'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '3'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 8), (0, 9), (1, 0), (3, 6), (4, 6), (5, 6), (6, 15), (7, 10), (8, 10), (9, 10), (10, 15), (11, 14), (12, 14), (13, 14), (14, 15)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established01', 'established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': 'p_src', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 2, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': 'p_array_index0', 'immediate_operand': '31'}, {'id': 3, 'opcode': 9, 'operand0': 'p_dst', 'operand1': '1', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 4, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_src', 'result': '_out_s12_0', 'immediate_operand': '20'}, {'id': 5, 'opcode': 7, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_1', 'immediate_operand': '27'}, {'id': 6, 'opcode': 14, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '2'}, {'id': 7, 'opcode': 7, 'operand0': 'p_dst', 'operand1': 'p_src', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 8, 'opcode': 14, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_3', 'immediate_operand': '19'}, {'id': 9, 'opcode': 12, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_4', 'immediate_operand': '31'}, {'id': 10, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '1'}, {'id': 11, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '20'}, {'id': 12, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': '1', 'result': '_out_s12_6', 'immediate_operand': '20'}, {'id': 13, 'opcode': 14, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_7', 'immediate_operand': '31'}, {'id': 14, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '1'}, {'id': 15, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '3'}]}
Time taken: 162.43903279304504 s
preprocessor time:
running mutation 9
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_9. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp3 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp3 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp3 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp3 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp3', 'p_established00', 'p_drop']
p__br_tmp4 = p_src==20;

lhs p__br_tmp4 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp4 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp4 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp4 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp4 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp4', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00);
RAW p__br_tmp3 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
RAW p__br_tmp4 = p_src==20; p_established01 = p__br_tmp4 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7facd4c306a0>, 'write': <dependencyGraph.Statement object at 0x7facd4c6a4f0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7facd4c306a0>, 'write': <dependencyGraph.Statement object at 0x7facd4c6a4f0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp4 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp4 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp3 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp3 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp4 = p_src==20 stmts len 1
p__br_tmp4 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7facd4c6a130>, <dependencyGraph.Codelet object at 0x7facd4c6a2b0>, <dependencyGraph.Codelet object at 0x7facd4c6a3d0>, <dependencyGraph.Codelet object at 0x7facd4c6a280>, <dependencyGraph.Codelet object at 0x7facd4c6aa60>]
p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp4 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp3 = (!(p_src==20))&&(p_dst==20);
p__br_tmp4 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7facd4c6a2b0>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp4 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp4 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_drop0', 'p__br_tmp4', 'p_array_index0'}
{'p_drop0', 'p__br_tmp4', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
u:  p__br_tmp4 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp4 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp3 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp3 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp4']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp4', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_5_stateless_p__br_tmp4_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_5_stateless_p__br_tmp4_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_5_stateless_p__br_tmp4_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_5_stateless_p__br_tmp4_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp4 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp4_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp4_bnd_1.sk.out
['comp_5']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_9_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  1  and ALU  4
 *** found stateless dependency between ALU  2  and ALU  4
 *** found stateless dependency between ALU  3  and ALU  4
 *** found stateless dependency between ALU  4  and ALU  13
 *** found stateless dependency between ALU  5  and ALU  8
 *** found stateless dependency between ALU  6  and ALU  8
 *** found stateless dependency between ALU  7  and ALU  8
 *** found stateless dependency between ALU  8  and ALU  13
 *** found stateless dependency between ALU  9  and ALU  12
 *** found stateless dependency between ALU  10  and ALU  12
 *** found stateless dependency between ALU  11  and ALU  12
 *** found stateless dependency between ALU  12  and ALU  13
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  1
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  3
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  7
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  11
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7facd4c6af10>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
Stateless ALU id 14 has output p__br_tmp4
 *** found dependency between stateless ALU  14  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
1,3,7,11,
+---> dependencies of ALU  1 : 
4,
+---> dependencies of ALU  2 : 
4,
+---> dependencies of ALU  3 : 
4,
+---> dependencies of ALU  4 : 
13,
+---> dependencies of ALU  5 : 
8,
+---> dependencies of ALU  6 : 
8,
+---> dependencies of ALU  7 : 
8,
+---> dependencies of ALU  8 : 
13,
+---> dependencies of ALU  9 : 
12,
+---> dependencies of ALU  10 : 
12,
+---> dependencies of ALU  11 : 
12,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 

+---> dependencies of ALU  14 : 
0,
+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  1
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  1  and  4
 * gen_dependency_list: dependency between  2  and  4
 * gen_dependency_list: dependency between  3  and  4
 * gen_dependency_list: dependency between  4  and  13
 * gen_dependency_list: dependency between  5  and  8
 * gen_dependency_list: dependency between  6  and  8
 * gen_dependency_list: dependency between  7  and  8
 * gen_dependency_list: dependency between  8  and  13
 * gen_dependency_list: dependency between  9  and  12
 * gen_dependency_list: dependency between  10  and  12
 * gen_dependency_list: dependency between  11  and  12
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  14  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 1), (0, 3), (0, 7), (0, 11), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (14, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 288 rows, 210 columns and 678 nonzeros
Model fingerprint: 0x0cd55fba
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 13 rows and 0 columns
Presolve removed 0 rows and 51 columns
Presolve time: 0.01s
Presolved: 301 rows, 159 columns, 712 nonzeros
Variable types: 0 continuous, 159 integer (142 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 2
T0_A_2 -0
T0_A_3 2
T0_A_4 3
T0_A_5 -0
T0_A_6 -0
T0_A_7 2
T0_A_8 3
T0_A_9 -0
T0_A_10 -0
T0_A_11 2
T0_A_12 3
T0_A_13 4
T0_A_14 -0
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  2.0
action:  1
num stages:  5
stage:  -0.0
action:  2
num stages:  5
stage:  2.0
action:  3
num stages:  5
stage:  3.0
action:  4
num stages:  5
stage:  -0.0
action:  5
num stages:  5
stage:  -0.0
action:  6
num stages:  5
stage:  2.0
action:  7
num stages:  5
stage:  3.0
action:  8
num stages:  5
stage:  -0.0
action:  9
num stages:  5
stage:  -0.0
action:  10
num stages:  5
stage:  2.0
action:  11
num stages:  5
stage:  3.0
action:  12
num stages:  5
stage:  4.0
action:  13
num stages:  5
stage:  -0.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  2.0
 > get_alu_stage: table  0 , alu_id =  1 :  2.0
alu  1  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
 > get_alu_stage: table  0 , alu_id =  2 :  -0.0
alu  2  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
alu  3  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  4 :  3.0
 > get_alu_stage: table  0 , alu_id =  4 :  3.0
alu  4  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
 > get_alu_stage: table  0 , alu_id =  5 :  -0.0
alu  5  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
 > get_alu_stage: table  0 , alu_id =  6 :  -0.0
alu  6  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
 > get_alu_stage: table  0 , alu_id =  7 :  2.0
alu  7  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  8 :  3.0
 > get_alu_stage: table  0 , alu_id =  8 :  3.0
alu  8  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
alu  9  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
 > get_alu_stage: table  0 , alu_id =  10 :  -0.0
alu  10  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
 > get_alu_stage: table  0 , alu_id =  11 :  2.0
alu  11  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  12 :  3.0
 > get_alu_stage: table  0 , alu_id =  12 :  3.0
alu  12  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  13 :  4.0
 > get_alu_stage: table  0 , alu_id =  13 :  4.0
alu  13  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  14 :  -0.0
 > get_alu_stage: table  0 , alu_id =  14 :  -0.0
alu  14  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7facd4c6ae20>, 0), (<alus.DominoALU object at 0x7facd4c24190>, 1), (<alus.DominoALU object at 0x7facd4c240d0>, 2), (<alus.DominoALU object at 0x7facd4c24070>, 3), (<alus.DominoALU object at 0x7facd4c24400>, 4), (<alus.DominoALU object at 0x7facd4c24460>, 5), (<alus.DominoALU object at 0x7facd4c24490>, 6), (<alus.DominoALU object at 0x7facd4c244c0>, 7), (<alus.DominoALU object at 0x7facd4c244f0>, 8), (<alus.DominoALU object at 0x7facd4c24520>, 9), (<alus.DominoALU object at 0x7facd4c24550>, 10), (<alus.DominoALU object at 0x7facd4c24580>, 11), (<alus.DominoALU object at 0x7facd4c245b0>, 12), (<alus.DominoALU object at 0x7facd4c24700>, 13), (<alus.DominoALU object at 0x7facd4c24820>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7facd4c6af10>, 0)]
 * gen_dependency_list: dependency between  0  and  1
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  7
 * gen_dependency_list: dependency between  0  and  11
 * gen_dependency_list: dependency between  1  and  4
 * gen_dependency_list: dependency between  2  and  4
 * gen_dependency_list: dependency between  3  and  4
 * gen_dependency_list: dependency between  4  and  13
 * gen_dependency_list: dependency between  5  and  8
 * gen_dependency_list: dependency between  6  and  8
 * gen_dependency_list: dependency between  7  and  8
 * gen_dependency_list: dependency between  8  and  13
 * gen_dependency_list: dependency between  9  and  12
 * gen_dependency_list: dependency between  10  and  12
 * gen_dependency_list: dependency between  11  and  12
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  14  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 1), (0, 3), (0, 7), (0, 11), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (14, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp4'], 'outputs': ['p_established01', 'established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 13, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '19'}, {'id': 2, 'opcode': 6, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '17'}, {'id': 3, 'opcode': 11, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '19'}, {'id': 4, 'opcode': 3, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '29'}, {'id': 5, 'opcode': 5, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 6, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_3', 'immediate_operand': '11'}, {'id': 7, 'opcode': 26, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '31'}, {'id': 8, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 9, 'opcode': 5, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 10, 'opcode': 13, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_6', 'immediate_operand': '19'}, {'id': 11, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 12, 'opcode': 5, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '6'}, {'id': 14, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp4', 'immediate_operand': '20'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 1), (0, 3), (0, 7), (0, 11), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (14, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp4'], 'outputs': ['p_established01', 'established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 13, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '19'}, {'id': 2, 'opcode': 6, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': '_out_s12_0', 'immediate_operand': '17'}, {'id': 3, 'opcode': 11, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '19'}, {'id': 4, 'opcode': 3, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '29'}, {'id': 5, 'opcode': 5, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_drop', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 6, 'opcode': 15, 'operand0': '1', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_3', 'immediate_operand': '11'}, {'id': 7, 'opcode': 26, 'operand0': 'p_established00', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_4', 'immediate_operand': '31'}, {'id': 8, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '0'}, {'id': 9, 'opcode': 5, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 10, 'opcode': 13, 'operand0': 'p_dst', 'operand1': 'p_drop', 'operand2': 'p_src', 'result': '_out_s12_6', 'immediate_operand': '19'}, {'id': 11, 'opcode': 14, 'operand0': 'p_drop', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 12, 'opcode': 5, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '6'}, {'id': 14, 'opcode': 9, 'operand0': 'p_src', 'operand1': '1', 'operand2': '1', 'result': 'p__br_tmp4', 'immediate_operand': '20'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': 'p_array_index0', 'immediate_operand': '0'}]}
Time taken: 72.77249264717102 s
preprocessor time:
running mutation 10
directory: /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw, program name: stateful_fw_equivalent_10. Grammar: pred_raw. Continue?
------------------------------
Preprocessing done. Continuing
Using stateful ALU pred_raw
Using stateless ALU grammars/stateless_domino/stateless.sk
p_established00 = established;

lhs p_established00 rhs established
state_vars {'established'}
read/write flanks: processing line  p_established00 = established;

 is_read_flank: processing rhs_vars =  ['established']
read flank
p_array_index0 = p_dst+p_src;

lhs p_array_index0 rhs p_dst+p_src
state_vars {'established'}
read/write flanks: processing line  p_array_index0 = p_dst+p_src;

 is_read_flank: processing rhs_vars =  ['p_dst', 'p_src']
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

lhs p__br_tmp5 rhs (!(p_src==20))&&(p_dst==20)
state_vars {'established'}
read/write flanks: processing line  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);

 is_read_flank: processing rhs_vars =  ['p_src', 'p_dst']
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

lhs p_drop0 rhs p__br_tmp5 ? (p_established00==0) : (p_drop)
state_vars {'established'}
read/write flanks: processing line  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);

 is_read_flank: processing rhs_vars =  ['p__br_tmp5', 'p_established00', 'p_drop']
p__br_tmp6 = p_src==20;

lhs p__br_tmp6 rhs p_src==20
state_vars {'established'}
read/write flanks: processing line  p__br_tmp6 = p_src==20;

 is_read_flank: processing rhs_vars =  ['p_src']
p_established01 = p__br_tmp6 ? (1) : (p_established00);

lhs p_established01 rhs p__br_tmp6 ? (1) : (p_established00)
state_vars {'established'}
read/write flanks: processing line  p_established01 = p__br_tmp6 ? (1) : (p_established00);

 is_read_flank: processing rhs_vars =  ['p__br_tmp6', 'p_established00']
established = p_established01;

lhs established rhs p_established01
state_vars {'established'}
read/write flanks: processing line  established = p_established01;

 is_read_flank: processing rhs_vars =  ['p_established01']
write flank
finding dependencies
RAW p_established00 = established; p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p__br_tmp5 = (!(p_src==20))&&(p_dst==20); p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
RAW p__br_tmp6 = p_src==20; p_established01 = p__br_tmp6 ? (1) : (p_established00);
RAW p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
read_write_flanks {'established': {'read': <dependencyGraph.Statement object at 0x7fc3bdc4e6a0>, 'write': <dependencyGraph.Statement object at 0x7fc3bdc884f0>}}
var:  established
{'read': <dependencyGraph.Statement object at 0x7fc3bdc4e6a0>, 'write': <dependencyGraph.Statement object at 0x7fc3bdc884f0>}
state_var  established
read_flank p_established00 = established
write_flank established = p_established01
total number of nodes created:  7
SCC 0
v p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop) stmts len 1
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
SCC 1
v p_established00 = established stmts len 1
p_established00 = established;
v p_established01 = p__br_tmp6 ? (1) : (p_established00) stmts len 1
p_established01 = p__br_tmp6 ? (1) : (p_established00);
v established = p_established01 stmts len 1
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
SCC 2
v p_array_index0 = p_dst+p_src stmts len 1
p_array_index0 = p_dst+p_src;
SCC 3
v p__br_tmp5 = (!(p_src==20))&&(p_dst==20) stmts len 1
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
SCC 4
v p__br_tmp6 = p_src==20 stmts len 1
p__br_tmp6 = p_src==20;
SCC graph nodes
[<dependencyGraph.Codelet object at 0x7fc3bdc88130>, <dependencyGraph.Codelet object at 0x7fc3bdc882b0>, <dependencyGraph.Codelet object at 0x7fc3bdc883d0>, <dependencyGraph.Codelet object at 0x7fc3bdc88280>, <dependencyGraph.Codelet object at 0x7fc3bdc88a60>]
p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
p_established00 = established;
p_established01 = p__br_tmp6 ? (1) : (p_established00);
established = p_established01;
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
stateful
p_array_index0 = p_dst+p_src;
p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
p__br_tmp6 = p_src==20;
SCC graph stateful nodes {<dependencyGraph.Codelet object at 0x7fc3bdc882b0>}
total number of nodes created:  5
state vars {'established'}
----calling split_SCC_graph---
 ---- split_SCC_graph ----- 
 -------------- v_outputs:  {'p_established00'}
p_established00  is read flank
everything fits within a stateful ALU. No need to do anything.
number of SCC nodes post splitting:  5
total number of nodes created:  5
TODO: call synthesizer
Output directory /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out could not be created
Synthesizer
output dir /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out
Stored read, write flank variables
{'p_established01', 'p_established00'}
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
-------------------------------------- stateful codelet vars :  ['established'] --------------***
compute_scc_graph: StatefulComponent( comp_0 ): state vars:  ['established']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
codelet  p_established00 = established p_established01 = p__br_tmp6 ? (1) : (p_established00) established = p_established01  is stateful
number of nodes on SCC_GRAPH:  5
number of nodes in comp_graph:  5
 is_read_flank: processing rhs_vars =  ['established']
 is_read_flank: processing rhs_vars =  ['p_established01']
Principal Outputs:  {'p_drop0', 'p__br_tmp6', 'p_array_index0'}
{'p_drop0', 'p__br_tmp6', 'p_array_index0'}
u:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
u:  p__br_tmp6 = p_src==20;
v:  p_established00 = established; p_established01 = p__br_tmp6 ? (1) : (p_established00); established = p_established01;
u:  p__br_tmp5 = (!(p_src==20))&&(p_dst==20);
v:  p_drop0 = p__br_tmp5 ? (p_established00==0) : (p_drop);
~~~~~~~~~~set_alu_inputs:  ['established', 'p__br_tmp6']
 ~~~| state var:  ['established']
salu_inputs {'metadata_lo': 'p__br_tmp6', 'metadata_hi': 0, 'register_lo': 'established', 'register_hi': 0}
number of outputs for  pred_raw :  2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk.out
running sketch for stateful
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_0_stateful.sk.out
 --------- processing stateful output ---------
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
>>>>>>>>>> add_new_alu: adding ALU with id  0  and component  comp_0 , type?  STATEFUL
filename_to_compname: filename =  comp_0_stateful.sk.out
['comp_0']
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_1.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_2.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_2.sk.out
running sketch, bnd = 2
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_2.sk
return code 1
failed
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_3.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_3.sk.out
running sketch, bnd = 3
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_3.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_6_stateless_p_drop0_bnd_3.sk.out
processing: output is stateless.
 --------- processing stateless output p_drop0 --------- 
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  1  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  2  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  3  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  4  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  5  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  6  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  7  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  8  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  9  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  10  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  11  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  12  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
>>>>>>>>>> add_new_alu: adding ALU with id  13  and component  comp_6 , type?  STATELESS
filename_to_compname: filename =  comp_6_stateless_p_drop0_bnd_3.sk.out
['comp_6']
final_output:  _out_s20_2
   alu output:  _out_s12
   alu output:  _out_s12_0
   alu output:  _out_s12_1
   alu output:  _out_s20
   alu output:  _out_s12_2
   alu output:  _out_s12_3
   alu output:  _out_s12_4
   alu output:  _out_s20_0
   alu output:  _out_s12_5
   alu output:  _out_s12_6
   alu output:  _out_s12_7
   alu output:  _out_s20_1
   alu output:  _out_s20_2
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_5_stateless_p__br_tmp6_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_5_stateless_p__br_tmp6_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_5_stateless_p__br_tmp6_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p__br_tmp6 --------- 
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
>>>>>>>>>> add_new_alu: adding ALU with id  14  and component  comp_5 , type?  STATELESS
filename_to_compname: filename =  comp_5_stateless_p__br_tmp6_bnd_1.sk.out
['comp_5']
final_output:  _out_s12
   alu output:  _out_s12
sketch /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_7_stateless_p_array_index0_bnd_1.sk > /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
running sketch, bnd = 1
sketch_filename /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_7_stateless_p_array_index0_bnd_1.sk
return code 0
solved
output is in /home/xiangyug/ruijief/benchmarks/Domino_mutations/stateful_fw/stateful_fw_equivalent_10_out/comp_7_stateless_p_array_index0_bnd_1.sk.out
processing: output is stateless.
 --------- processing stateless output p_array_index0 --------- 
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
>>>>>>>>>> add_new_alu: adding ALU with id  15  and component  comp_7 , type?  STATELESS
filename_to_compname: filename =  comp_7_stateless_p_array_index0_bnd_1.sk.out
['comp_7']
final_output:  _out_s12
   alu output:  _out_s12
postprocessing sketch output: finding stateful dependencies
 *** find_stateful_dependencies ***
type of component in graph:  <class 'synthesis.Component'>
 *** Done find_stateful_dependencies ***
postprocessing sketch output: finding stateless dependencies in each component
 *** finding dependencies between stateless ALUs ***
 *** found stateless dependency between ALU  1  and ALU  4
 *** found stateless dependency between ALU  2  and ALU  4
 *** found stateless dependency between ALU  3  and ALU  4
 *** found stateless dependency between ALU  4  and ALU  13
 *** found stateless dependency between ALU  5  and ALU  8
 *** found stateless dependency between ALU  6  and ALU  8
 *** found stateless dependency between ALU  7  and ALU  8
 *** found stateless dependency between ALU  8  and ALU  13
 *** found stateless dependency between ALU  9  and ALU  12
 *** found stateless dependency between ALU  10  and ALU  12
 *** found stateless dependency between ALU  11  and ALU  12
 *** found stateless dependency between ALU  12  and ALU  13
 *** done finding dependencies between stateless ALUs ***
postprocessing sketch output: finding stateless dependencies between components
 *** find stateless dependencies between components *** 
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  2
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  3
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  5
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  6
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** found stateless dependency between ALU  0  and ALU  10
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------predecessor of comp  comp_6  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
 *** Done finding stateless+stateful dependencies ***
------successor of comp  comp_5  :  comp_0
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
-------ALU in the component of  comp_0 :  [<alus.DominoGenericSALU object at 0x7fc3bdc88f10>]
||| alus_in_a_component  comp_0 : self.alu_compnames is  {0: 'comp_0', 1: 'comp_6', 2: 'comp_6', 3: 'comp_6', 4: 'comp_6', 5: 'comp_6', 6: 'comp_6', 7: 'comp_6', 8: 'comp_6', 9: 'comp_6', 10: 'comp_6', 11: 'comp_6', 12: 'comp_6', 13: 'comp_6', 14: 'comp_5', 15: 'comp_7'}
Stateless ALU id 14 has output p__br_tmp6
 *** found dependency between stateless ALU  14  and stateful ALU  0
 *** Done finding stateless+stateful dependencies ***
 *** Done finding stateless+stateful dependencies ***
postprocessing done!
----- starting ILP Gurobi -----
+---> dependencies of ALU  0 : 
2,3,5,6,10,
+---> dependencies of ALU  1 : 
4,
+---> dependencies of ALU  2 : 
4,
+---> dependencies of ALU  3 : 
4,
+---> dependencies of ALU  4 : 
13,
+---> dependencies of ALU  5 : 
8,
+---> dependencies of ALU  6 : 
8,
+---> dependencies of ALU  7 : 
8,
+---> dependencies of ALU  8 : 
13,
+---> dependencies of ALU  9 : 
12,
+---> dependencies of ALU  10 : 
12,
+---> dependencies of ALU  11 : 
12,
+---> dependencies of ALU  12 : 
13,
+---> dependencies of ALU  13 : 

+---> dependencies of ALU  14 : 
0,
+---> dependencies of ALU  15 : 

# alus: =  16
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  5
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  1  and  4
 * gen_dependency_list: dependency between  2  and  4
 * gen_dependency_list: dependency between  3  and  4
 * gen_dependency_list: dependency between  4  and  13
 * gen_dependency_list: dependency between  5  and  8
 * gen_dependency_list: dependency between  6  and  8
 * gen_dependency_list: dependency between  7  and  8
 * gen_dependency_list: dependency between  8  and  13
 * gen_dependency_list: dependency between  9  and  12
 * gen_dependency_list: dependency between  10  and  12
 * gen_dependency_list: dependency between  11  and  12
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  14  and  0
Set parameter Username
Academic license - for non-commercial use only - expires 2022-10-14
ILP_Gurobi: alu_dic =  {'T0': 16}
ILP_Gurobi: Adding var  T0_A_0
ILP_Gurobi: Adding var  T0_A_1
ILP_Gurobi: Adding var  T0_A_2
ILP_Gurobi: Adding var  T0_A_3
ILP_Gurobi: Adding var  T0_A_4
ILP_Gurobi: Adding var  T0_A_5
ILP_Gurobi: Adding var  T0_A_6
ILP_Gurobi: Adding var  T0_A_7
ILP_Gurobi: Adding var  T0_A_8
ILP_Gurobi: Adding var  T0_A_9
ILP_Gurobi: Adding var  T0_A_10
ILP_Gurobi: Adding var  T0_A_11
ILP_Gurobi: Adding var  T0_A_12
ILP_Gurobi: Adding var  T0_A_13
ILP_Gurobi: Adding var  T0_A_14
ILP_Gurobi: Adding var  T0_A_15
ILP_Gurobi: alu_dep_dic:  {'T0': [(0, 2), (0, 3), (0, 5), (0, 6), (0, 10), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (14, 0)]}
Come here------------------------
Gurobi Optimizer version 9.5.0 build v9.5.0rc5 (linux64)
Thread count: 28 physical cores, 56 logical processors, using up to 28 threads
Optimize a model with 289 rows, 210 columns and 680 nonzeros
Model fingerprint: 0xdba3d57b
Model has 192 general constraints
Variable types: 0 continuous, 210 integer (0 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 2e+01]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 9 rows and 0 columns
Presolve removed 0 rows and 53 columns
Presolve time: 0.01s
Presolved: 298 rows, 157 columns, 704 nonzeros
Variable types: 0 continuous, 157 integer (140 binary)
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 4.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.01 work units)
Thread count was 28 (of 56 available processors)

Solution count 2: 4 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%
Optimal objective: 4
Following is the result we want:*****************
T0_A_0 1
T0_A_1 -0
T0_A_2 2
T0_A_3 2
T0_A_4 3
T0_A_5 2
T0_A_6 2
T0_A_7 -0
T0_A_8 3
T0_A_9 -0
T0_A_10 2
T0_A_11 -0
T0_A_12 3
T0_A_13 4
T0_A_14 -0
T0_A_15 -0
************************************************
Obj: 4
number of stages:  5
stage:  1.0
action:  0
num stages:  5
stage:  -0.0
action:  1
num stages:  5
stage:  2.0
action:  2
num stages:  5
stage:  2.0
action:  3
num stages:  5
stage:  3.0
action:  4
num stages:  5
stage:  2.0
action:  5
num stages:  5
stage:  2.0
action:  6
num stages:  5
stage:  -0.0
action:  7
num stages:  5
stage:  3.0
action:  8
num stages:  5
stage:  -0.0
action:  9
num stages:  5
stage:  2.0
action:  10
num stages:  5
stage:  -0.0
action:  11
num stages:  5
stage:  3.0
action:  12
num stages:  5
stage:  4.0
action:  13
num stages:  5
stage:  -0.0
action:  14
num stages:  5
stage:  -0.0
action:  15
num stages:  5
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
 > get_alu_stage: table  0 , alu_id =  0 :  1.0
alu  0  is of type  STATEFUL ; scheduled to stage  1
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
 > get_alu_stage: table  0 , alu_id =  1 :  -0.0
alu  1  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
 > get_alu_stage: table  0 , alu_id =  2 :  2.0
alu  2  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
 > get_alu_stage: table  0 , alu_id =  3 :  2.0
alu  3  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  4 :  3.0
 > get_alu_stage: table  0 , alu_id =  4 :  3.0
alu  4  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  5 :  2.0
 > get_alu_stage: table  0 , alu_id =  5 :  2.0
alu  5  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
 > get_alu_stage: table  0 , alu_id =  6 :  2.0
alu  6  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
 > get_alu_stage: table  0 , alu_id =  7 :  -0.0
alu  7  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  8 :  3.0
 > get_alu_stage: table  0 , alu_id =  8 :  3.0
alu  8  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
 > get_alu_stage: table  0 , alu_id =  9 :  -0.0
alu  9  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
 > get_alu_stage: table  0 , alu_id =  10 :  2.0
alu  10  is of type  STATELESS ; scheduled to stage  2
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
 > get_alu_stage: table  0 , alu_id =  11 :  -0.0
alu  11  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  12 :  3.0
 > get_alu_stage: table  0 , alu_id =  12 :  3.0
alu  12  is of type  STATELESS ; scheduled to stage  3
 > get_alu_stage: table  0 , alu_id =  13 :  4.0
 > get_alu_stage: table  0 , alu_id =  13 :  4.0
alu  13  is of type  STATELESS ; scheduled to stage  4
 > get_alu_stage: table  0 , alu_id =  14 :  -0.0
 > get_alu_stage: table  0 , alu_id =  14 :  -0.0
alu  14  is of type  STATELESS ; scheduled to stage  0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
 > get_alu_stage: table  0 , alu_id =  15 :  -0.0
alu  15  is of type  STATELESS ; scheduled to stage  0
Codegen processed ALUs:  15  ;  [(<alus.DominoALU object at 0x7fc3bdc88e20>, 0), (<alus.DominoALU object at 0x7fc3bdc42190>, 1), (<alus.DominoALU object at 0x7fc3bdc420d0>, 2), (<alus.DominoALU object at 0x7fc3bdc42070>, 3), (<alus.DominoALU object at 0x7fc3bdc42400>, 4), (<alus.DominoALU object at 0x7fc3bdc42460>, 5), (<alus.DominoALU object at 0x7fc3bdc42490>, 6), (<alus.DominoALU object at 0x7fc3bdc424c0>, 7), (<alus.DominoALU object at 0x7fc3bdc424f0>, 8), (<alus.DominoALU object at 0x7fc3bdc42520>, 9), (<alus.DominoALU object at 0x7fc3bdc42550>, 10), (<alus.DominoALU object at 0x7fc3bdc42580>, 11), (<alus.DominoALU object at 0x7fc3bdc425b0>, 12), (<alus.DominoALU object at 0x7fc3bdc42700>, 13), (<alus.DominoALU object at 0x7fc3bdc42820>, 14)]
Codegen processed SALUs:  1  ;  [(<alus.DominoGenericSALU object at 0x7fc3bdc88f10>, 0)]
 * gen_dependency_list: dependency between  0  and  2
 * gen_dependency_list: dependency between  0  and  3
 * gen_dependency_list: dependency between  0  and  5
 * gen_dependency_list: dependency between  0  and  6
 * gen_dependency_list: dependency between  0  and  10
 * gen_dependency_list: dependency between  1  and  4
 * gen_dependency_list: dependency between  2  and  4
 * gen_dependency_list: dependency between  3  and  4
 * gen_dependency_list: dependency between  4  and  13
 * gen_dependency_list: dependency between  5  and  8
 * gen_dependency_list: dependency between  6  and  8
 * gen_dependency_list: dependency between  7  and  8
 * gen_dependency_list: dependency between  8  and  13
 * gen_dependency_list: dependency between  9  and  12
 * gen_dependency_list: dependency between  10  and  12
 * gen_dependency_list: dependency between  11  and  12
 * gen_dependency_list: dependency between  12  and  13
 * gen_dependency_list: dependency between  14  and  0
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 3), (0, 5), (0, 6), (0, 10), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (14, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established01', 'established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 2, 'opcode': 1, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '30'}, {'id': 3, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '15'}, {'id': 4, 'opcode': 19, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '17'}, {'id': 5, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 6, 'opcode': 25, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_3', 'immediate_operand': '7'}, {'id': 7, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 8, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '19'}, {'id': 9, 'opcode': 10, 'operand0': '1', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 10, 'opcode': 12, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '21'}, {'id': 11, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 12, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '5'}, {'id': 14, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '31'}]}
----------------------------------------------------
{'num_pipeline_stages': 5, 'alu_dependencies': [(0, 2), (0, 3), (0, 5), (0, 6), (0, 10), (1, 4), (2, 4), (3, 4), (4, 13), (5, 8), (6, 8), (7, 8), (8, 13), (9, 12), (10, 12), (11, 12), (12, 13), (14, 0)], 'stateful_alus': [{'inputs': ['established', 'p__br_tmp6'], 'outputs': ['p_established01', 'established', 'p_established00'], 'id': 0, 'body': ['void salu (int state_0_0, int pkt_0, int pkt_1, ref int[2] _out0)/*comp_0_..ateful.sk:131*/\n', '{\n', '  _out0 = ((int[2])0);\n', '  int state_0 = state_0_0;\n', '  if(0 < pkt_0)/*comp_0_..ateful.sk:133*/\n', '  {\n', '    state_0 = pkt_0;\n', '  }\n', '  _out0[0] = state_0;\n', '  _out0[1] = state_0_0;\n']}], 'stateless_alus': [{'id': 1, 'opcode': 7, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': '_out_s12', 'immediate_operand': '20'}, {'id': 2, 'opcode': 1, 'operand0': 'p_established00', 'operand1': 'p_dst', 'operand2': 'p_established00', 'result': '_out_s12_0', 'immediate_operand': '30'}, {'id': 3, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_established00', 'result': '_out_s12_1', 'immediate_operand': '15'}, {'id': 4, 'opcode': 19, 'operand0': '_out_s12', 'operand1': '_out_s12_0', 'operand2': '_out_s12_1', 'result': '_out_s20', 'immediate_operand': '17'}, {'id': 5, 'opcode': 9, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_established00', 'result': '_out_s12_2', 'immediate_operand': '20'}, {'id': 6, 'opcode': 25, 'operand0': 'p_established00', 'operand1': '1', 'operand2': 'p_established00', 'result': '_out_s12_3', 'immediate_operand': '7'}, {'id': 7, 'opcode': 4, 'operand0': 'p_drop', 'operand1': 'p_dst', 'operand2': 'p_dst', 'result': '_out_s12_4', 'immediate_operand': '0'}, {'id': 8, 'opcode': 14, 'operand0': '_out_s12_2', 'operand1': '_out_s12_3', 'operand2': '_out_s12_4', 'result': '_out_s20_0', 'immediate_operand': '19'}, {'id': 9, 'opcode': 10, 'operand0': '1', 'operand1': 'p_src', 'operand2': 'p_dst', 'result': '_out_s12_5', 'immediate_operand': '0'}, {'id': 10, 'opcode': 12, 'operand0': 'p_dst', 'operand1': 'p_established00', 'operand2': 'p_drop', 'result': '_out_s12_6', 'immediate_operand': '21'}, {'id': 11, 'opcode': 15, 'operand0': 'p_src', 'operand1': 'p_drop', 'operand2': 'p_dst', 'result': '_out_s12_7', 'immediate_operand': '0'}, {'id': 12, 'opcode': 14, 'operand0': '_out_s12_5', 'operand1': '_out_s12_6', 'operand2': '_out_s12_7', 'result': '_out_s20_1', 'immediate_operand': '0'}, {'id': 13, 'opcode': 14, 'operand0': '_out_s20', 'operand1': '_out_s20_0', 'operand2': '_out_s20_1', 'result': 'p_drop0', 'immediate_operand': '5'}, {'id': 14, 'opcode': 9, 'operand0': 'p_src', 'operand1': 'p_src', 'operand2': '1', 'result': 'p__br_tmp6', 'immediate_operand': '20'}, {'id': 15, 'opcode': 1, 'operand0': 'p_src', 'operand1': 'p_dst', 'operand2': '1', 'result': 'p_array_index0', 'immediate_operand': '31'}]}
Time taken: 29.55949306488037 s
preprocessor time:
